VIVA 3.02 Implementation Independent Algorithm Description Language
// Sheet   8/22/2006 2:08:54 PM


DataSet Fix32 = ( Word , Word ); //_Attributes 4,12632256,System\Static
DataSet Fix16 = ( Byte , Byte ); //_Attributes 4,32896,System\Static
DataSet Complex = ( List ); //_Attributes 1,8421504
DataSet Fixed = ( List ); //_Attributes 1,4227327
DataSet Floating = ( List ); //_Attributes 1,32896
DataSet Signed = ( Variant ); //_Attributes 1,16776960
DataSet ZTerm = ( NULL ); //_Attributes 1,13684991,Layer2\ZTLib
DataSet ZTList = ( Variant , Variant ); //_Attributes 1,8421631,Layer2\ZTLib

Object CoreLib-DSP
//_Attributes WipSheet
{
 //_ Object Prototypes
 Object Text;  //_GUI 4,8,Welcome to CoreLib-DSPArial,20,8388608,1
 Object Text;  //_GUI 6,23,Getting StartedArial,12,8421504,1
 Object Text;  //_GUI 4,14,.   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .Arial,12,255,1
 Object Text;  //_GUI 101,18,............................................Arial,12,255,1
 Object Text;  //_GUI 77,10,<TreeGroup>CoreLib-DSPArial,8,-2147483640,0

 // Behavior Topology
}

Object ( List List) MakeComplex( List List) 
//_Attributes TreeGroup=CoreLib-DSP\Compile-Time,Documentation="List"
{
 //_ Object Prototypes
 Object ( List List) Input;  //_GUI 48,54
 Object Output( List List) ;  //_GUI 138,54
 Object ( Variant Out1, Variant Out2) ListIn( List In) ;  //_GUI 59,52
 Object ( List Out) ListOut( Variant In1, Variant In2) ;  //_GUI 125,52
 Object ( Variant List) MakeComplex( Variant List) ;  //_GUI 89,42
 //_Attributes Documentation="LIST"
 Object ( Variant List) MakeComplex:A( Variant List) ;  //_GUI 89,54
 //_Attributes Documentation="LIST"

 // Behavior Topology
 Output.0 = ListOut.0;  
 ListIn.0 = Input.0;  
 ListOut.0 = MakeComplex:A.0;  
 ListOut.1 = MakeComplex.0;  //_GUI 120,54, 120,45
 MakeComplex.0 = ListIn.1;  //_GUI 71,45, 71,54
 MakeComplex:A.0 = ListIn.0;  
}

Object ( Complex List) MakeComplex( Complex List) 
//_Attributes TreeGroup=CoreLib-DSP\Compile-Time,Documentation="Complex"
{
 //_ Object Prototypes
 Object ( Complex List) Input;  //_GUI 48,54
 Object Output( Complex List) ;  //_GUI 138,54

 // Behavior Topology
 Output.0 = Input.0;  
}

Object ( Complex List) MakeComplex( Variant List) 
//_Attributes TreeGroup=CoreLib-DSP\Compile-Time,Documentation="var"
{
 // Take a list of inputs and convert it to complex data on each element.
 //_ Object Prototypes
 Object ( Variant List) Input;  //_GUI 48,54
 Object Output( Complex List) ;  //_GUI 136,55
 Object ( List Out) ListOut( Variant In1, Variant In2) ;  //_GUI 84,53
 Object ( Complex Out) ComplexOut( List In1) ;  //_GUI 103,53
 Object ( Variant Out1) Zero( Variant In1) ;  //_GUI 63,58
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction
    ( Variant In0) ;  //_GUI 62,54
 Object Text;  //_GUI 75,71,bottom is the i

 // Behavior Topology
 Output.0 = ComplexOut.0;  
 ListOut.0 = Zero.0;  //_GUI 84,61
 ListOut.1 = Junction.1;  
 ComplexOut.0 = ListOut.0;  
 Zero.0 = Junction.2;  
 Junction.0 = Input.0;  
}

Object ( List List) RevertComplexList( List OriginalList, List AfterMakeComplexList) 
//_Attributes TreeGroup=CoreLib-DSP\Compile-Time,Documentation="List"
{
 //_ Object Prototypes
 Object ( List OriginalList) Input;  //_GUI 46,43
 Object ( List AfterMakeComplexList) Input:A;  //_GUI 46,57
 Object Output( List List) ;  //_GUI 143,44
 Object ( Variant Out1, Variant Out2) ListIn( List In) ;  //_GUI 52,55
 Object ( Variant Out1, Variant Out2) ListIn:A( List In) ;  //_GUI 52,41
 Object ( Variant List) RevertComplexList( Variant OriginalList, Variant AfterMakeComplexList) ;  //_GUI 75,41
 //_Attributes Documentation="List"
 Object ( Variant List) RevertComplexList:A( Variant OriginalList, Variant AfterMakeComplexList) ;  //_GUI 80,49
 //_Attributes Documentation="List"
 Object ( List Out) ListOut( Variant In1, Variant In2) ;  //_GUI 117,42

 // Behavior Topology
 Output.0 = ListOut.0;  
 ListIn.0 = Input:A.0;  
 ListIn:A.0 = Input.0;  
 RevertComplexList.0 = ListIn:A.1;  
 RevertComplexList.1 = ListIn.1;  //_GUI 75,57
 RevertComplexList:A.0 = ListIn:A.0;  //_GUI 63,51
 RevertComplexList:A.1 = ListIn.0;  //_GUI 80,60
 ListOut.0 = RevertComplexList:A.0;  //_GUI 117,52
 ListOut.1 = RevertComplexList.0;  
}

Object ( Complex List) RevertComplexList( Complex OriginalList, Complex AfterMakeComplexList) 
//_Attributes TreeGroup=CoreLib-DSP\Compile-Time,Documentation="Complex"
{
 //_ Object Prototypes
 Object ( Complex OriginalList) Input;  //_GUI 46,43
 Object ( Complex AfterMakeComplexList) Input:A;  //_GUI 46,50
 Object Output( Complex List) ;  //_GUI 116,50

 // Behavior Topology
 Output.0 = Input:A.0;  
}

Object ( Variant List) RevertComplexList( Variant OriginalList, Complex AfterMakeComplexList) 
//_Attributes TreeGroup=CoreLib-DSP\Compile-Time,Documentation="var"
{
 //_ Object Prototypes
 Object ( Variant OriginalList) Input;  //_GUI 46,43
 Object ( Complex AfterMakeComplexList) Input:A;  //_GUI 46,50
 Object Output( Variant List) ;  //_GUI 116,49
 Object ( List Out1) ComplexIn( Complex In) ;  //_GUI 52,48
 Object ( Variant Out1, Variant Out2) ListIn( List In) ;  //_GUI 65,48

 // Behavior Topology
 Output.0 = ListIn.1;  
 ComplexIn.0 = Input:A.0;  
 ListIn.0 = ComplexIn.0;  
}

Object ( Variant List) MakeComplex( ZTList List) 
//_Attributes TreeGroup=CoreLib-DSP\Compile-Time,Documentation="ztlist"
{
 //_ Object Prototypes
 Object ( ZTList List) Input;  //_GUI 48,54
 Object Output( Variant List) ;  //_GUI 138,54
 Object ( Variant List) MakeComplex( Variant List) ;  //_GUI 89,42
 //_Attributes Documentation="LIST"
 Object ( Variant List) MakeComplex:A( Variant List) ;  //_GUI 89,54
 //_Attributes Documentation="LIST"
 Object ( Variant Out1, Variant LSB) PopLsb( Variant In1) ;  //_GUI 60,52
 //_Attributes Documentation="ztlist"
 Object ( Variant Out1) PushLsb( Variant In1, Variant LSB) ;  //_GUI 125,52
 //_Attributes Documentation="ztl/var"

 // Behavior Topology
 Output.0 = PushLsb.0;  
 MakeComplex.0 = PopLsb.0;  //_GUI 71,45, 71,54
 MakeComplex:A.0 = PopLsb.1;  
 PopLsb.0 = Input.0;  
 PushLsb.0 = MakeComplex.0;  //_GUI 120,54, 120,45
 PushLsb.1 = MakeComplex:A.0;  
}

Object ( ZTerm List) MakeComplex( ZTerm List) 
//_Attributes TreeGroup=CoreLib-DSP\Compile-Time,Documentation="zterm"
{
 //_ Object Prototypes
 Object ( ZTerm List) Input;  //_GUI 48,54
 Object Output( ZTerm List) ;  //_GUI 138,54

 // Behavior Topology
 Output.0 = Input.0;  
}

Object ( Variant List) RevertComplexList( ZTList OriginalList, ZTList AfterMakeComplexList) 
//_Attributes TreeGroup=CoreLib-DSP\Compile-Time,Documentation="ztlist"
{
 //_ Object Prototypes
 Object ( ZTList OriginalList) Input;  //_GUI 46,43
 Object ( ZTList AfterMakeComplexList) Input:A;  //_GUI 46,57
 Object Output( Variant List) ;  //_GUI 143,44
 Object ( Variant List) RevertComplexList( Variant OriginalList, Variant AfterMakeComplexList) ;  //_GUI 75,41
 //_Attributes Documentation="List"
 Object ( Variant List) RevertComplexList:A( Variant OriginalList, Variant AfterMakeComplexList) ;  //_GUI 80,49
 //_Attributes Documentation="List"
 Object ( Variant Out1, Variant LSB) PopLsb( Variant In1) ;  //_GUI 52,55
 //_Attributes Documentation="ztlist"
 Object ( Variant Out1) PushLsb( Variant In1, Variant LSB) ;  //_GUI 117,42
 //_Attributes Documentation="ztl/var"
 Object ( Variant Out1, Variant LSB) PopLsb:A( Variant In1) ;  //_GUI 53,41
 //_Attributes Documentation="ztlist"

 // Behavior Topology
 Output.0 = PushLsb.0;  
 RevertComplexList.0 = PopLsb:A.0;  
 RevertComplexList.1 = PopLsb.0;  //_GUI 75,57
 RevertComplexList:A.0 = PopLsb:A.1;  //_GUI 63,51
 RevertComplexList:A.1 = PopLsb.1;  //_GUI 80,60
 PopLsb.0 = Input:A.0;  
 PushLsb.0 = RevertComplexList.0;  
 PushLsb.1 = RevertComplexList:A.0;  //_GUI 117,52
 PopLsb:A.0 = Input.0;  
}

Object ( ZTerm List) RevertComplexList( ZTerm OriginalList, ZTerm AfterMakeComplexList) 
//_Attributes TreeGroup=CoreLib-DSP\Compile-Time,Documentation="zterm"
{
 //_ Object Prototypes
 Object ( ZTerm OriginalList) Input;  //_GUI 46,44
 Object ( ZTerm AfterMakeComplexList) Input:A;  //_GUI 46,57
 Object Output( ZTerm List) ;  //_GUI 143,44

 // Behavior Topology
 Output.0 = Input.0;  
}

Object ( Complex ComplexConstant) BuildPolarConstants( Complex DataType, Variant Index
    , Variant Size, Bit Invert) 
//_Attributes TreeGroup=CoreLib-DSP\Compile-Time,Documentation="var"
{
 //_ Object Prototypes
 Object ( Complex DataType) Input;  //_GUI 52,24
 Object ( Variant Index) Input:A;  //_GUI 69,34
 Object ( Variant Size) Input:B;  //_GUI 69,46
 Object ( Bit Invert) Input:C;  //_GUI 69,55
 //_Attributes Constant="0"
 Object Output( Complex ComplexConstant) ;  //_GUI 151,24
 Object ( List Out1) ComplexIn( Complex In) ;  //_GUI 58,22
 Object ( Variant Out1, Variant Out2) ListIn( List In) ;  //_GUI 88,22
 Object ( Complex ComplexConstant) $BuildPolarConstants( Variant DataTypeReal, Variant DataTypeImag
    , Variant Index, Variant Size, Bit Invert) ;  //_GUI 107,22
 //_Attributes Documentation="floating"
 Object Text;  //_GUI 112,45,This object exists for overloading the different data types that the complex number could be made of.
 Object ( Variant Out1) Zero( Variant In1) ;  //_GUI 74,22
 //_Attributes Documentation="Variant"

 // Behavior Topology
 Output.0 = $BuildPolarConstants.0;  
 ComplexIn.0 = Input.0;  
 ListIn.0 = Zero.0;  
 $BuildPolarConstants.0 = ListIn.1;  
 $BuildPolarConstants.1 = ListIn.0;  
 $BuildPolarConstants.2 = Input:A.0;  //_GUI 90,30, 90,35
 $BuildPolarConstants.3 = Input:B.0;  //_GUI 94,33, 94,47
 $BuildPolarConstants.4 = Input:C.0;  //_GUI 100,36, 100,56
 Zero.0 = ComplexIn.0;  
}

Object ( Variant OFL, Variant D, Variant PipeLen
    , Bit Done, Bit Busy) FFT_1D( ZTList D, Bit Invert
    , Bit ClkG, Bit AClrG, Bit Go, Bit Wait) 
//_Attributes TreeGroup=CoreLib-DSP,Documentation="ztlist"
{
 //_ Object Prototypes
 Object ( ZTList D) Input;  //_GUI 5,66
 Object ( Bit Invert) Input:A;  //_GUI 56,104
 //_Attributes Constant="0"
 Object ( Bit ClkG) Input:B;  //_GUI 56,112
 //_Attributes Resource=*Global
 Object ( Bit AClrG) Input:C;  //_GUI 56,120
 //_Attributes Resource=*Global
 Object ( Bit Go) Input:D;  //_GUI 56,128
 Object ( Bit Wait) Input:E;  //_GUI 56,136
 //_Attributes Constant="0"
 Object Output( Variant OFL) ;  //_GUI 327,33
 Object Output:A( Variant D) ;  //_GUI 327,44
 Object Output:B( Variant PipeLen) ;  //_GUI 328,56
 Object Output:C( Bit Done) ;  //_GUI 324,73
 Object Output:D( Bit Busy) ;  //_GUI 324,85
 Object ( ZTList Out1, ZTList Out2, ZTList Out3) Junction
    ( ZTList In0) ;  //_GUI 11,66
 Object ( Variant Out1, Variant Out11, Variant LSB) ListPopLsb
    ( Variant In1) ;  //_GUI 124,79
 //_Attributes Documentation="var"
 Object ( Variant Out1, Variant LSB) PopLsb( Variant In1) ;  //_GUI 34,64
 //_Attributes Documentation="var"
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:A
    ( Variant In3) ;  //_GUI 141,39
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:B
    ( Variant In3) ;  //_GUI 138,42
 Object ( Variant "#0", Variant "#1") $SelectOut( Variant D
    , Bit S) ;  //_GUI 93,103
 Object ( Variant "#0", Variant "#1") $SelectOut:A( Variant D
    , Bit S) ;  //_GUI 93,111
 Object ( Variant "#0", Variant "#1") $SelectOut:B( Variant D
    , Bit S) ;  //_GUI 93,119
 Object ( Variant "#0", Variant "#1") $SelectOut:C( Variant D
    , Bit S) ;  //_GUI 93,127
 Object ( Variant "#0", Variant "#1") $SelectOut:D( Variant D
    , Bit S) ;  //_GUI 93,135
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:C
    ( Bit In0) ;  //_GUI 89,99
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:D
    ( Bit In1) ;  //_GUI 89,131
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:E
    ( Bit In1) ;  //_GUI 89,123
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:F
    ( Bit In1) ;  //_GUI 89,115
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:G
    ( Bit In1) ;  //_GUI 89,107
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:H
    ( Variant In3) ;  //_GUI 144,48
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:I
    ( Variant In3) ;  //_GUI 147,51
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:J
    ( Variant In3) ;  //_GUI 150,54
 Object ( Bit Sub) Input:F;  //_GUI 163,45
 //_Attributes Constant="*0"
 Object ( Variant ZTList) NewZTList( Variant MSB, Variant LSB) ;  //_GUI 249,41
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:K
    ( Variant In3) ;  //_GUI 189,57
 Object ( Variant Out) $Select( Variant "#0", Variant "#1"
    , Bit S) ;  //_GUI 312,42
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:L
    ( Bit In3) ;  //_GUI 308,49
 Object ( LSB002 In) Input:G;  //_GUI 56,71
 //_Attributes Constant="*2"
 Object ( Variant Out) $Select:A( Variant "#0", Variant "#1"
    , Bit S) ;  //_GUI 312,54
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:M
    ( Bit In3) ;  //_GUI 308,61
 Object ( Bit Out) $Select:B( Variant "#0", Variant "#1"
    , Bit S) ;  //_GUI 312,71
 Object ( Bit Out) $Select:C( Variant "#0", Variant "#1"
    , Bit S) ;  //_GUI 312,83
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:N
    ( Bit In0) ;  //_GUI 308,67
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:O
    ( Bit In1) ;  //_GUI 308,78
 Object ( Variant Out) $Select:D( Variant "#0", Variant "#1"
    , Bit S) ;  //_GUI 312,31
 Object ( Variant "LsbOutIsLsbIn+1", Variant LsbOutIsLsbIn) EveryOther( Variant In1) ;  //_GUI 108,164
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:P
    ( Variant In1) ;  //_GUI 130,163
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:Q
    ( Variant In1) ;  //_GUI 133,160
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:R
    ( Variant In1) ;  //_GUI 136,157
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:S
    ( Variant In1) ;  //_GUI 139,154
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:T
    ( Variant In0) ;  //_GUI 133,123
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:U
    ( Variant In1) ;  //_GUI 174,164
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:V
    ( Variant In0) ;  //_GUI 136,115
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:W
    ( Variant In1) ;  //_GUI 177,161
 Object ( Variant Out1) OR( Variant In1, Variant In2) ;  //_GUI 250,13
 Object ( Variant Out1) PushLsb( Variant In1, Variant LSB) ;  //_GUI 244,197
 //_Attributes Documentation="ztl/var"
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:X
    ( Variant In1) ;  //_GUI 214,175
 Object ( Variant Out1) PushLsb:A( Variant In1, Variant LSB) ;  //_GUI 283,175
 //_Attributes Documentation="ztl/var"
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:Y
    ( Bit In0) ;  //_GUI 183,167
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:Z
    ( Bit In2) ;  //_GUI 220,170
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:a
    ( Bit In2) ;  //_GUI 180,170
 Object Text;  //_GUI 157,6,So this add/sub/swap is our recursion leaf.
 Object Text;  //_GUI 185,215,We use these regPipe objects to ensure that our data is fully pipelined, meaning that while the multiply is running we need to be passing our other data chunk through registers to make sure it is on the same timeframe.
 Object Text;  //_GUI 311,174,Our pipelen for this object will be the sum of all the objects the data has to pass through.
 Object ( Variant Out1) Cat( Variant Hi, Variant Lo) ;  //_GUI 163,150
 //_Attributes Documentation="ztlist/ztlist"
 Object Text;  //_GUI 16,16,This object is taken directly from the C code below. The variable "te" and the complex constant made from that thereafter are done with the compile-time calculator, meaning no hardware is used for their calculation.
 Object Text;  //_GUI 43,75,If this is true then we have two items left in the list.
 Object Text;  //_GUI 132,216,The PipeLen on these two fft calls will be equal assuming we started with a list where the number of items in it is a power of two, which will be necessary for the algorithm to work correctly.
 Object ( Variant Out1) Cat:A( Variant Hi, Variant Lo) ;  //_GUI 239,179
 //_Attributes Documentation="ztlist/ztlist"
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:b
    ( Variant In0) ;  //_GUI 231,180
 Object Text;  //_GUI 256,179,The C code shows use of the mod operator for duplicating the list. We do it all in parallel so we need to duplicate our data here and before the MulPipe.
 Object ( Variant D) PolarizeConstantsFromList( ZTList D, Bit Invert) ;  //_GUI 143,139
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:c
    ( Variant In1) ;  //_GUI 139,143
 Object ( ZTList Out1, ZTList Out2, ZTList Out3) Junction:d
    ( ZTList In1) ;  //_GUI 113,140
 Object ( Bit Out1) SameListStruct( Variant In1, Variant In2) ;  //_GUI 140,230
 //_Attributes Documentation="List/List"
 Object ( Bit Out) INVERT( Bit In1) ;  //_GUI 155,230
 Object Output:E( Bit Trap) ;  //_GUI 165,232
 //_Attributes Trap="The ZTList used in the FFT must have a length equal to a power of two."
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:e
    ( Variant In0) ;  //_GUI 127,165
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:f
    ( Variant In1) ;  //_GUI 123,177
 Object ( Bit Out1) SameListStruct:A( Variant In1, Variant In2) ;  //_GUI 311,133
 //_Attributes Documentation="List/List"
 Object ( Bit Out) INVERT:A( Bit In1) ;  //_GUI 326,133
 Object Output:F( Bit Trap) ;  //_GUI 336,135
 //_Attributes Trap="The ZTList used in the FFT must have a length equal to a power of two."
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:AA
    ( Variant In0) ;  //_GUI 183,152
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:BA
    ( Variant In0) ;  //_GUI 186,141
 Object ( Bit Out1) SameListStruct:B( Variant In1, Variant In2) ;  //_GUI 311,141
 //_Attributes Documentation="List/List"
 Object ( Bit Out) INVERT:B( Bit In1) ;  //_GUI 326,141
 Object Output:G( Bit Trap) ;  //_GUI 336,143
 //_Attributes Trap="The ZTList used in the FFT must have a length equal to a power of two."
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:CA
    ( Variant In3) ;  //_GUI 248,155
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:DA
    ( Variant In0) ;  //_GUI 252,152
 Object ( Variant Out1) ScaleFromConstants( Variant Type, Variant In1) ;  //_GUI 220,146
 //_Attributes Documentation="floating"
 Object ( Variant Out1, Variant LSB) PopLsb:A( Variant In1) ;  //_GUI 203,143
 //_Attributes Documentation="ztlist"
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:EA
    ( Variant In0) ;  //_GUI 202,141
 Object ( Variant OFL, Variant R, Variant PipeLen
    , Bit ClkG, Bit AClr, Bit Done, Bit Busy) Add_Pipe
    ( Variant A, Variant B, Bit Add, Bit ClkG
    , Bit AClr, Bit Go, Bit Wait) ;  //_GUI 257,151
 Object ( Variant OFL, Variant R, Variant PipeLen
    , Bit ClkG, Bit AClr, Bit Done, Bit Busy) Add_Pipe:A
    ( Variant A, Variant B, Bit Add, Bit ClkG
    , Bit AClr, Bit Go, Bit Wait) ;  //_GUI 169,38
 Object ( Variant OFL, Variant R, Variant PipeLen
    , Bit ClkG, Bit AClr, Bit Done, Bit Busy) Add_Pipe:B
    ( Variant A, Variant B, Bit Add, Bit ClkG
    , Bit AClr, Bit Go, Bit Wait) ;  //_GUI 169,13
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:FA
    ( Variant In0) ;  //_GUI 159,154
 Object ( Variant Q, Variant PipeLen, Bit ClkG
    , Bit AClr, Bit Done, Bit Busy) Reg_Pipe( Variant D
    , Variant PipeLen, Bit ClkG, Bit AClr, Bit Go
    , Bit Wait) ;  //_GUI 192,179
 Object ( Variant Out1) ZTList_Size( Variant In1) ;  //_GUI 16,64
 //_Attributes Documentation="Leaf(Var)"
 Object ( Bit Out1) BitA_Lt_BitB( Variant A, Variant B) ;  //_GUI 62,53
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:GA
    ( Variant In0) ;  //_GUI 48,68
 Object ( LSB002 B) Input:H;  //_GUI 56,57
 //_Attributes Constant="*2"
 Object Output:H( Bit Trap) ;  //_GUI 78,55
 //_Attributes Trap="Improper list size."
 Object ( Bit Out1) BitA_Ne_BitB( Variant A, Variant B) ;  //_GUI 65,67
 Object ( Variant OFL, Variant D, Variant PipeLen
    , Bit Done, Bit Busy) FFT_1D( Variant D, Bit Invert
    , Bit ClkG, Bit AClrG, Bit Go, Bit Wait) ;  //_GUI 144,150
 Object ( Variant OFL, Variant D, Variant PipeLen
    , Bit Done, Bit Busy) FFT_1D:A( Variant D, Bit Invert
    , Bit ClkG, Bit AClrG, Bit Go, Bit Wait) ;  //_GUI 151,176
 Object ( Variant R, Variant PipeLen, Bit ClkG
    , Bit AClr, Bit Done, Bit Busy) Mul_Pipe( Variant A
    , Variant B, Bit ClkG, Bit AClr, Bit Go
    , Bit Wait) ;  //_GUI 191,154
 Object Text;  //_GUI 118,91,we use $Select here directly to hold off the automatic breakdown of the recursive FFT_1D calls
 Object ( ZTList Out1, ZTList Out2, ZTList Out3) Junction:HA
    ( ZTList In0) ;  //_GUI 96,80
 Object ( ZTList Out) $Select:E( Variant "#0", Variant "#1"
    , Bit S) ;  //_GUI 100,79
 Object ( ZTList Out) $Select:F( Variant "#0", Variant "#1"
    , Bit S) ;  //_GUI 100,92
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:IA
    ( Bit In3) ;  //_GUI 89,86
 Object Text;  //_GUI 143,131,this generates the constants for the current list size
 Object Text;  //_GUI 214,125,in the case of scaled integers or the multiplier double the input size, we have to readjust the dataset size
 Object Text;  //_GUI 6,149,typedef complex<double> COMPLEX;void fft(int N,COMPLEX *x, bool invert = false, bool isFirst = false){	if(N < 2) return;	else if(N == 2){		//leaf node of recursion		COMPLEX temp;		temp =  x[0];		temp -= x[1];		x[0] += x[1];		x[1] =  temp;		return;	}	//this memory should be allocated externally for optimal speed	COMPLEX *g=new COMPLEX[N>>1],*h=new COMPLEX[N>>1];	int q;	for(q = 0; q < N; q++){ //the memcpy		if(q & 1) h[q>>1] = x[q]; //odd elements		else g[q>>1] = x[q]; //even elements	}	fft(N>>1, g, invert);	fft(N>>1, h, invert);	double te;	for(q = 0; q < N; q++){		//egress recursion logic: these constants should be calculated externally		te = 2.0*M_PI*(double)q/(double)N;		//identity sin(-x) = -sin(x), cos(-x) = cos(x)		x[q] =  COMPLEX(cos(te), ((invert)?sin(te):-sin(te)));		x[q] *= h[q%(N>>1)];		x[q] += g[q%(N>>1)];		if(isFirst)			x[q] /= N;	}	delete []g;	delete []h;	//return value is in x}

 // Behavior Topology
 Output.0 = $Select:D.0;  
 Output:A.0 = $Select.0;  
 Output:B.0 = $Select:A.0;  
 Output:C.0 = $Select:B.0;  
 Output:D.0 = $Select:C.0;  
 Junction.0 = Input.0;  
 ListPopLsb.0 = $Select:E.0;  
 PopLsb.0 = ZTList_Size.0;  
 Junction:A.0 = ListPopLsb.2;  //_GUI 142,87
 Junction:B.0 = ListPopLsb.1;  //_GUI 139,84
 $SelectOut.0 = Input:A.0;  
 $SelectOut.1 = Junction:G.1;  
 $SelectOut:A.0 = Input:B.0;  
 $SelectOut:A.1 = Junction:F.1;  
 $SelectOut:B.0 = Input:C.0;  
 $SelectOut:B.1 = Junction:E.1;  
 $SelectOut:C.0 = Input:D.0;  
 $SelectOut:C.1 = Junction:D.1;  
 $SelectOut:D.0 = Input:E.0;  
 $SelectOut:D.1 = Junction:D.2;  //_GUI 90,140
 Junction:C.0 = BitA_Ne_BitB.0;  //_GUI 87,100, 87,70
 Junction:D.0 = Junction:E.2;  
 Junction:E.0 = Junction:F.2;  
 Junction:F.0 = Junction:G.2;  
 Junction:G.0 = Junction:C.2;  
 Junction:H.0 = $SelectOut:A.0;  //_GUI 145,113
 Junction:I.0 = $SelectOut:B.0;  //_GUI 148,121
 Junction:J.0 = $SelectOut:C.0;  //_GUI 151,129
 NewZTList.0 = Add_Pipe:A.1;  
 NewZTList.1 = Add_Pipe:B.1;  //_GUI 194,46, 194,18
 Junction:K.0 = $SelectOut:D.0;  //_GUI 190,137
 $Select.0 = NewZTList.0;  
 $Select.1 = Add_Pipe.1;  //_GUI 296,47, 296,156
 $Select.2 = Junction:L.2;  
 Junction:L.0 = Junction:M.1;  
 $Select:A.0 = Add_Pipe:A.2;  //_GUI 262,56, 262,51, 187,51, 187,46
 $Select:A.1 = PushLsb:A.0;  //_GUI 299,59, 299,178
 $Select:A.2 = Junction:M.2;  
 Junction:M.0 = Junction:N.0;  
 $Select:B.0 = Add_Pipe:A.5;  //_GUI 259,73, 259,55
 $Select:B.1 = Add_Pipe.5;  //_GUI 302,76, 302,168
 $Select:B.2 = Junction:O.1;  
 $Select:C.0 = Add_Pipe:A.6;  //_GUI 256,85, 256,63, 169,63
 $Select:C.1 = FFT_1D.4;  //_GUI 305,88, 305,211, 144,211
 $Select:C.2 = Junction:O.2;  //_GUI 309,91
 Junction:N.0 = Junction:IA.1;  //_GUI 90,68
 Junction:O.0 = Junction:N.2;  
 $Select:D.0 = OR.0;  //_GUI 260,33
 $Select:D.1 = Add_Pipe.0;  //_GUI 283,36, 283,153
 $Select:D.2 = Junction:L.1;  //_GUI 309,39
 EveryOther.0 = Junction:d.2;  //_GUI 108,154, 114,154
 Junction:P.0 = $SelectOut:C.1;  //_GUI 131,132
 Junction:Q.0 = Junction:T.2;  
 Junction:R.0 = Junction:V.2;  
 Junction:S.0 = Junction:c.2;  
 Junction:T.0 = $SelectOut:B.1;  
 Junction:U.0 = Junction:T.1;  //_GUI 175,124
 Junction:V.0 = $SelectOut:A.1;  
 Junction:W.0 = Junction:V.1;  //_GUI 178,116
 OR.0 = Add_Pipe:B.0;  
 OR.1 = Add_Pipe:A.0;  //_GUI 200,18, 200,40
 PushLsb.0 = Junction:X.2;  //_GUI 215,199
 PushLsb.1 = FFT_1D:A.2;  //_GUI 172,202, 172,184
 Junction:X.0 = Mul_Pipe.1;  //_GUI 215,159
 PushLsb:A.0 = Add_Pipe.2;  //_GUI 283,159
 PushLsb:A.1 = PushLsb.0;  //_GUI 283,200
 Junction:Y.0 = FFT_1D.3;  //_GUI 171,168, 171,164
 Junction:Z.0 = Add_Pipe.6;  
 Junction:a.0 = Mul_Pipe.5;  
 Cat.0 = Junction:FA.0;  //_GUI 160,152
 Cat.1 = Junction:FA.1;  
 Cat:A.0 = Junction:b.1;  
 Cat:A.1 = Junction:b.2;  //_GUI 232,184
 Junction:b.0 = Reg_Pipe.0;  
 PolarizeConstantsFromList.0 = Junction:d.1;  
 PolarizeConstantsFromList.1 = Junction:c.1;  
 Junction:c.0 = $SelectOut.1;  //_GUI 140,108
 Junction:d.0 = $Select:F.0;  //_GUI 114,95
 SameListStruct.0 = Junction:e.2;  //_GUI 128,232
 SameListStruct.1 = Junction:f.2;  //_GUI 124,235
 INVERT.0 = SameListStruct.0;  
 Output:E.0 = INVERT.0;  
 Junction:e.0 = EveryOther.0;  
 Junction:f.0 = EveryOther.1;  
 SameListStruct:A.0 = Junction:AA.0;  //_GUI 184,135
 SameListStruct:A.1 = Junction:EA.1;  //_GUI 241,138, 241,142
 INVERT:A.0 = SameListStruct:A.0;  
 Output:F.0 = INVERT:A.0;  
 Junction:AA.0 = Cat.0;  
 Junction:BA.0 = PolarizeConstantsFromList.0;  
 SameListStruct:B.0 = Junction:CA.1;  //_GUI 249,143
 SameListStruct:B.1 = Junction:DA.0;  //_GUI 253,146
 INVERT:B.0 = SameListStruct:B.0;  
 Output:G.0 = INVERT:B.0;  
 Junction:CA.0 = Cat:A.0;  
 Junction:DA.0 = ScaleFromConstants.0;  //_GUI 241,153
 ScaleFromConstants.0 = PopLsb:A.1;  
 ScaleFromConstants.1 = Mul_Pipe.0;  //_GUI 220,156
 PopLsb:A.0 = Junction:EA.2;  
 Junction:EA.0 = Junction:BA.1;  
 Add_Pipe.0 = Junction:DA.1;  
 Add_Pipe.1 = Junction:CA.2;  
 Add_Pipe.3 = Mul_Pipe.2;  
 Add_Pipe.4 = Mul_Pipe.3;  
 Add_Pipe.5 = Mul_Pipe.4;  
 Add_Pipe.6 = $SelectOut:D.1;  //_GUI 279,171, 279,207, 105,207
 Add_Pipe:A.0 = Junction:A.2;  
 Add_Pipe:A.1 = Junction:B.2;  
 Add_Pipe:A.2 = Input:F.0;  
 Add_Pipe:A.3 = Junction:H.2;  
 Add_Pipe:A.4 = Junction:I.2;  
 Add_Pipe:A.5 = Junction:J.2;  
 Add_Pipe:A.6 = Junction:K.0;  
 Add_Pipe:B.0 = Junction:B.1;  //_GUI 139,15
 Add_Pipe:B.1 = Junction:A.1;  //_GUI 142,18
 Add_Pipe:B.3 = Junction:H.1;  //_GUI 145,24
 Add_Pipe:B.4 = Junction:I.1;  //_GUI 148,27
 Add_Pipe:B.5 = Junction:J.1;  //_GUI 151,30
 Add_Pipe:B.6 = Junction:K.1;  //_GUI 190,33
 Junction:FA.0 = FFT_1D.1;  
 Reg_Pipe.0 = FFT_1D:A.1;  
 Reg_Pipe.1 = Junction:X.0;  //_GUI 189,184, 189,176
 Reg_Pipe.2 = Junction:W.2;  //_GUI 178,187
 Reg_Pipe.3 = Junction:U.2;  //_GUI 175,190
 Reg_Pipe.4 = Junction:Y.2;  //_GUI 184,193
 Reg_Pipe.5 = Junction:Z.2;  //_GUI 221,196
 ZTList_Size.0 = Junction.1;  
 BitA_Lt_BitB.0 = Junction:GA.0;  //_GUI 49,55
 BitA_Lt_BitB.1 = Input:H.0;  
 Junction:GA.0 = PopLsb.1;  
 Output:H.0 = BitA_Lt_BitB.0;  
 BitA_Ne_BitB.0 = Junction:GA.1;  
 BitA_Ne_BitB.1 = Input:G.0;  
 FFT_1D.0 = Junction:e.0;  //_GUI 128,152
 FFT_1D.1 = Junction:S.1;  
 FFT_1D.2 = Junction:R.1;  
 FFT_1D.3 = Junction:Q.1;  
 FFT_1D.4 = Junction:P.1;  
 FFT_1D.5 = Junction:a.0;  //_GUI 168,167, 168,171
 FFT_1D:A.0 = Junction:f.1;  
 FFT_1D:A.1 = Junction:S.2;  //_GUI 140,181
 FFT_1D:A.2 = Junction:R.2;  //_GUI 137,184
 FFT_1D:A.3 = Junction:Q.2;  //_GUI 134,187
 FFT_1D:A.4 = Junction:P.2;  //_GUI 131,190
 FFT_1D:A.5 = Junction:a.2;  //_GUI 181,193
 Mul_Pipe.0 = Junction:BA.2;  //_GUI 187,156
 Mul_Pipe.1 = Junction:AA.2;  //_GUI 184,159
 Mul_Pipe.2 = Junction:W.1;  
 Mul_Pipe.3 = Junction:U.1;  
 Mul_Pipe.4 = Junction:Y.1;  
 Mul_Pipe.5 = Junction:Z.0;  
 Junction:HA.0 = Junction.2;  //_GUI 12,81
 $Select:E.0 = Junction:HA.1;  
 $Select:E.2 = Junction:IA.2;  
 $Select:F.1 = Junction:HA.2;  //_GUI 97,97
 $Select:F.2 = Junction:C.1;  
 Junction:IA.0 = Junction:C.0;  
}

Object ( Variant D) PolarizeConstantsFromList( ZTList D, Bit Invert) 
//_Attributes TreeGroup=CoreLib-DSP\Compile-Time
{
 //_ Object Prototypes
 Object ( ZTList D) Input;  //_GUI 15,42
 Object ( Bit Invert) Input:A;  //_GUI 23,61
 //_Attributes Constant="0"
 Object Output( Variant D) ;  //_GUI 167,43
 Object ( Variant Out1) PushLsb( Variant In1, Variant LSB) ;  //_GUI 119,40
 //_Attributes Documentation="ztl/var"
 Object ( Variant Out1) ZTList_Size( Variant In1) ;  //_GUI 30,52
 //_Attributes Documentation="Leaf(Var)"
 Object ( Variant Out1, Variant LSB) PopLsb( Variant In1) ;  //_GUI 46,52
 //_Attributes Documentation="var"
 Object ( ZTList Out1, ZTList Out2, ZTList Out3) Junction
    ( ZTList In0) ;  //_GUI 23,42
 Object ( Variant Out1) ZTList_Size:A( Variant In1) ;  //_GUI 50,40
 //_Attributes Documentation="Leaf(Var)"
 Object ( Variant Out1, Variant LSB) PopLsb:A( Variant In1) ;  //_GUI 62,40
 //_Attributes Documentation="var"
 Object ( Variant Out1, Variant LSB) PopLsb:B( Variant In1) ;  //_GUI 31,33
 //_Attributes Documentation="ztlist"
 Object ( Variant D) $PolarizeConstantsFromList( ZTList D_Orig, ZTList D
    , Bit Invert) ;  //_GUI 81,30
 //_Attributes Documentation="ztlist"
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:A
    ( Bit In0) ;  //_GUI 76,61
 Object ( Variant Out) $Select( Variant "#0", Variant "#1"
    , Bit S) ;  //_GUI 140,41
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:B
    ( Variant In0) ;  //_GUI 118,32
 Object ( Bit Out1) IsNULL( Variant In1) ;  //_GUI 122,51
 //_Attributes Documentation="NULL"
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:C
    ( Variant In0) ;  //_GUI 118,53
 Object ( ZTList Out1, ZTList Out2, ZTList Out3) Junction:D
    ( ZTList In0) ;  //_GUI 27,42
 Object ( Variant ComplexConstant) BuildPolarConstants( Variant DataType, Variant Index
    , Variant Size, Bit Invert) ;  //_GUI 81,51
 //_Attributes Documentation="var"
 Object ( Variant Out1) ReverseList( Variant In1) ;  //_GUI 152,41
 //_Attributes Documentation="ZTList"

 // Behavior Topology
 Output.0 = ReverseList.0;  
 PushLsb.0 = Junction:B.2;  
 PushLsb.1 = Junction:C.0;  
 ZTList_Size.0 = Junction.2;  //_GUI 24,55
 PopLsb.0 = ZTList_Size.0;  
 Junction.0 = Input.0;  
 ZTList_Size:A.0 = Junction:D.1;  
 PopLsb:A.0 = ZTList_Size:A.0;  
 PopLsb:B.0 = Junction:D.0;  //_GUI 28,36
 $PolarizeConstantsFromList.0 = Junction.0;  //_GUI 24,32
 $PolarizeConstantsFromList.1 = PopLsb:B.0;  
 $PolarizeConstantsFromList.2 = Junction:A.0;  //_GUI 77,38
 Junction:A.0 = Input:A.0;  
 $Select.0 = PushLsb.0;  
 $Select.1 = Junction:B.1;  //_GUI 134,46, 134,33
 $Select.2 = IsNULL.0;  //_GUI 136,49, 136,54
 Junction:B.0 = $PolarizeConstantsFromList.0;  
 IsNULL.0 = Junction:C.1;  
 Junction:C.0 = BuildPolarConstants.0;  
 Junction:D.0 = Junction.1;  
 BuildPolarConstants.0 = PopLsb:B.1;  //_GUI 66,53, 66,49, 41,49
 BuildPolarConstants.1 = PopLsb:A.1;  //_GUI 72,56
 BuildPolarConstants.2 = PopLsb.1;  //_GUI 64,59, 64,57
 BuildPolarConstants.3 = Junction:A.1;  
 ReverseList.0 = $Select.0;  
}

Object ( Variant D) $PolarizeConstantsFromList( ZTList D_Orig, ZTList D
    , Bit Invert) 
//_Attributes TreeGroup=CoreLib-DSP\Compile-Time,Documentation="ztlist"
{
 //_ Object Prototypes
 Object ( ZTList D_Orig) Input;  //_GUI 15,31
 Object ( ZTList D) Input:A;  //_GUI 15,42
 Object ( Bit Invert) Input:B;  //_GUI 23,61
 Object Output( Variant D) ;  //_GUI 158,43
 Object ( Variant Out1) ZTList_Size( Variant In1) ;  //_GUI 30,52
 //_Attributes Documentation="Leaf(Var)"
 Object ( Variant Out1, Variant LSB) PopLsb( Variant In1) ;  //_GUI 46,52
 //_Attributes Documentation="var"
 Object ( Variant Out1) ZTList_Size:A( Variant In1) ;  //_GUI 50,40
 //_Attributes Documentation="Leaf(Var)"
 Object ( Variant Out1, Variant LSB) PopLsb:A( Variant In1) ;  //_GUI 62,40
 //_Attributes Documentation="var"
 Object ( Variant Out1, Variant LSB) PopLsb:B( Variant In1) ;  //_GUI 29,33
 //_Attributes Documentation="ztlist"
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction
    ( Bit In0) ;  //_GUI 76,61
 Object ( ZTList Out1, ZTList Out2, ZTList Out3) Junction:A
    ( ZTList In0) ;  //_GUI 23,31
 Object ( Variant D) $PolarizeConstantsFromList( ZTList D_Orig, Variant D
    , Bit Invert) ;  //_GUI 81,30
 //_Attributes Documentation="ztlist"
 Object ( Variant Out1) PushLsb( Variant In1, Variant LSB) ;  //_GUI 122,40
 //_Attributes Documentation="ztl/var"
 Object ( Variant Out) $Select( Variant "#0", Variant "#1"
    , Bit S) ;  //_GUI 143,41
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:B
    ( Variant In0) ;  //_GUI 121,32
 Object ( Bit Out1) IsNULL( Variant In1) ;  //_GUI 125,51
 //_Attributes Documentation="NULL"
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:C
    ( Variant In0) ;  //_GUI 121,53
 Object ( ZTList Out1, ZTList Out2, ZTList Out3) Junction:D
    ( ZTList In0) ;  //_GUI 28,42
 Object ( Variant ComplexConstant) BuildPolarConstants( Variant DataType, Variant Index
    , Variant Size, Bit Invert) ;  //_GUI 81,51
 //_Attributes Documentation="var"

 // Behavior Topology
 Output.0 = $Select.0;  
 ZTList_Size.0 = Junction:A.2;  //_GUI 24,55
 PopLsb.0 = ZTList_Size.0;  
 ZTList_Size:A.0 = Junction:D.1;  
 PopLsb:A.0 = ZTList_Size:A.0;  
 PopLsb:B.0 = Junction:D.0;  
 Junction.0 = Input:B.0;  
 Junction:A.0 = Input.0;  
 $PolarizeConstantsFromList.0 = Junction:A.1;  
 $PolarizeConstantsFromList.1 = PopLsb:B.0;  
 $PolarizeConstantsFromList.2 = Junction.0;  //_GUI 77,38
 PushLsb.0 = Junction:B.2;  
 PushLsb.1 = Junction:C.0;  
 $Select.0 = PushLsb.0;  
 $Select.1 = Junction:B.1;  //_GUI 137,46, 137,33
 $Select.2 = IsNULL.0;  //_GUI 139,49, 139,54
 Junction:B.0 = $PolarizeConstantsFromList.0;  
 IsNULL.0 = Junction:C.1;  
 Junction:C.0 = BuildPolarConstants.0;  
 Junction:D.0 = Input:A.0;  
 BuildPolarConstants.0 = PopLsb:B.1;  //_GUI 66,53, 66,49, 39,49
 BuildPolarConstants.1 = PopLsb:A.1;  //_GUI 72,56
 BuildPolarConstants.2 = PopLsb.1;  //_GUI 64,59, 64,57
 BuildPolarConstants.3 = Junction.1;  
}

Object ( ZTerm D) $PolarizeConstantsFromList( ZTList D_Orig, ZTerm D
    , Bit Invert) 
//_Attributes TreeGroup=CoreLib-DSP\Compile-Time,Documentation="zterm"
{
 //_ Object Prototypes
 Object ( ZTList D_Orig) Input;  //_GUI 16,32
 Object ( ZTerm D) Input:A;  //_GUI 15,42
 Object ( Bit Invert) Input:B;  //_GUI 15,51
 Object Output( ZTerm D) ;  //_GUI 52,42

 // Behavior Topology
 Output.0 = Input:A.0;  
}

Object ( NULL ComplexConstant) BuildPolarConstants( Variant DataType, NULL Index
    , Variant Size, Bit Invert) 
//_Attributes TreeGroup=CoreLib-DSP\Compile-Time,Documentation="NULL"
{
 //_ Object Prototypes
 Object ( Variant DataType) Input;  //_GUI 69,24
 Object ( NULL Index) Input:A;  //_GUI 69,34
 Object ( Variant Size) Input:B;  //_GUI 69,46
 Object ( Bit Invert) Input:C;  //_GUI 69,55
 //_Attributes Constant="0"
 Object Output( NULL ComplexConstant) ;  //_GUI 117,34

 // Behavior Topology
 Output.0 = Input:A.0;  
}

Object ( Complex ComplexConstant) $BuildPolarConstants( Floating DataTypeReal, Floating DataTypeImag
    , Variant Index, Variant Size, Bit Invert) 
//_Attributes TreeGroup=CoreLib-DSP\Compile-Time,Documentation="floating"
{
 //_ Object Prototypes
 Object ( Floating DataTypeReal) Input;  //_GUI 68,23
 Object ( Floating DataTypeImag) Input:A;  //_GUI 68,26
 Object ( Variant Index) Input:B;  //_GUI 69,34
 Object ( Variant Size) Input:C;  //_GUI 69,46
 Object ( Bit Invert) Input:D;  //_GUI 69,55
 //_Attributes Constant="0"
 Object Output( Complex ComplexConstant) ;  //_GUI 191,64
 Object ( Double In) Input:E;  //_GUI 85,69
 //_Attributes Constant="*\"(3.1415926535897932384626433832795,2.0,*,##N2.B,1,-,*,##N3.B,/,s,n)\""
 Object ( Bit Out1) IsVariant( Variant Type) ;  //_GUI 83,32
 Object Output:A( Bit Trap) ;  //_GUI 94,34
 //_Attributes Trap="Variant in BuildConstants: we don't like this."
 Object ( Bit Out1) IsVariant:A( Variant Type) ;  //_GUI 75,44
 Object Output:B( Bit Trap) ;  //_GUI 86,46
 //_Attributes Trap="Variant in BuildConstants: we don't like this."
 Object ( Variant Out1) DynamicOut( Variant In1) ;  //_GUI 97,58
 Object ( Variant Out1) DynamicOut:A( Variant In1) ;  //_GUI 97,67
 Object ( Complex Out) ComplexOut( List In1) ;  //_GUI 176,62
 Object ( Variant O) Mux( Variant A, Variant B
    , Bit S) ;  //_GUI 124,71
 Object ( Double In) Input:F;  //_GUI 74,78
 //_Attributes Constant="*\"(3.1415926535897932384626433832795,2.0,*,##N2.B,1,-,*,##N3.B,/,s)\""
 Object ( Variant Out1) DynamicOut:B( Variant In1) ;  //_GUI 86,76
 Object ( List Out) ListOut( Variant In1, Variant In2) ;  //_GUI 162,62
 Object ( Double In) Input:G;  //_GUI 85,60
 //_Attributes Constant="*\"(3.1415926535897932384626433832795,2.0,*,##N2.B,1,-,*,##N3.B,/,c)\""
 Object ( Bit OFL, Variant Out1) Convert( Variant Type
    , Variant Data) ;  //_GUI 144,59
 Object ( Bit OFL, Variant Out1) Convert:A( Variant Type
    , Variant Data) ;  //_GUI 144,69

 // Behavior Topology
 Output.0 = ComplexOut.0;  
 IsVariant.0 = Input:B.0;  
 Output:A.0 = IsVariant.0;  
 IsVariant:A.0 = Input:C.0;  
 Output:B.0 = IsVariant:A.0;  
 DynamicOut.0 = Input:G.0;  
 DynamicOut:A.0 = Input:E.0;  
 ComplexOut.0 = ListOut.0;  
 Mux.0 = DynamicOut:A.0;  //_GUI 117,73, 117,70
 Mux.1 = DynamicOut:B.0;  //_GUI 113,76, 113,79
 Mux.2 = Input:D.0;  //_GUI 121,79, 121,56
 DynamicOut:B.0 = Input:F.0;  
 ListOut.0 = Convert:A.1;  //_GUI 162,74
 ListOut.1 = Convert.1;  
 Convert.0 = Input.0;  //_GUI 139,61, 139,24
 Convert.1 = DynamicOut.0;  //_GUI 115,64, 115,61
 Convert:A.0 = Input:A.0;  //_GUI 137,71, 137,27
 Convert:A.1 = Mux.0;  
}

Object ( Complex ComplexConstant) $BuildPolarConstants( Fixed DataTypeReal, Fixed DataTypeImag
    , Variant Index, Variant Size, Bit Invert) 
//_Attributes TreeGroup=CoreLib-DSP\Compile-Time,Documentation="fixed"
{
 //_ Object Prototypes
 Object ( Fixed DataTypeReal) Input;  //_GUI 68,23
 Object ( Fixed DataTypeImag) Input:A;  //_GUI 68,26
 Object ( Variant Index) Input:B;  //_GUI 69,34
 Object ( Variant Size) Input:C;  //_GUI 69,46
 Object ( Bit Invert) Input:D;  //_GUI 69,55
 //_Attributes Constant="0"
 Object Output( Complex ComplexConstant) ;  //_GUI 191,64
 Object ( Fix32 In) Input:E;  //_GUI 85,69
 //_Attributes Constant="*\"(3.1415926535897932384626433832795,2.0,*,##N2.B,1,-,*,##N3.B,/,s,n)\""
 Object ( Bit Out1) IsVariant( Variant Type) ;  //_GUI 83,32
 Object Output:A( Bit Trap) ;  //_GUI 94,34
 //_Attributes Trap="Variant in BuildConstants: we don't like this."
 Object ( Bit Out1) IsVariant:A( Variant Type) ;  //_GUI 75,44
 Object Output:B( Bit Trap) ;  //_GUI 86,46
 //_Attributes Trap="Variant in BuildConstants: we don't like this."
 Object ( Variant Out1) DynamicOut( Variant In1) ;  //_GUI 97,58
 Object ( Variant Out1) DynamicOut:A( Variant In1) ;  //_GUI 97,67
 Object ( Complex Out) ComplexOut( List In1) ;  //_GUI 176,62
 Object ( Variant O) Mux( Variant A, Variant B
    , Bit S) ;  //_GUI 124,71
 Object ( Fix32 In) Input:F;  //_GUI 74,78
 //_Attributes Constant="*\"(3.1415926535897932384626433832795,2.0,*,##N2.B,1,-,*,##N3.B,/,s)\""
 Object ( Variant Out1) DynamicOut:B( Variant In1) ;  //_GUI 86,76
 Object ( List Out) ListOut( Variant In1, Variant In2) ;  //_GUI 162,62
 Object ( Fix32 In) Input:G;  //_GUI 85,60
 //_Attributes Constant="*\"(3.1415926535897932384626433832795,2.0,*,##N2.B,1,-,*,##N3.B,/,c)\""
 Object ( Bit OFL, Variant Out1) Convert( Variant Type
    , Variant Data) ;  //_GUI 144,69
 Object ( Bit OFL, Variant Out1) Convert:A( Variant Type
    , Variant Data) ;  //_GUI 144,59

 // Behavior Topology
 Output.0 = ComplexOut.0;  
 IsVariant.0 = Input:B.0;  
 Output:A.0 = IsVariant.0;  
 IsVariant:A.0 = Input:C.0;  
 Output:B.0 = IsVariant:A.0;  
 DynamicOut.0 = Input:G.0;  
 DynamicOut:A.0 = Input:E.0;  
 ComplexOut.0 = ListOut.0;  
 Mux.0 = DynamicOut:A.0;  //_GUI 117,73, 117,70
 Mux.1 = DynamicOut:B.0;  //_GUI 113,76, 113,79
 Mux.2 = Input:D.0;  //_GUI 121,79, 121,56
 DynamicOut:B.0 = Input:F.0;  
 ListOut.0 = Convert.1;  //_GUI 162,74
 ListOut.1 = Convert:A.1;  
 Convert.0 = Input:A.0;  //_GUI 137,71, 137,27
 Convert.1 = Mux.0;  
 Convert:A.0 = Input.0;  //_GUI 139,61, 139,24
 Convert:A.1 = DynamicOut.0;  //_GUI 115,64, 115,61
}

Object ( Complex ComplexConstant) $BuildPolarConstants( Variant DataTypeReal, Variant DataTypeImag
    , Variant Index, Variant Size, Bit Invert) 
//_Attributes TreeGroup=CoreLib-DSP\Compile-Time,Documentation="var"
{
 //_ Object Prototypes
 Object ( Variant DataTypeReal) Input;  //_GUI 68,23
 Object ( Variant DataTypeImag) Input:A;  //_GUI 68,26
 Object ( Variant Index) Input:B;  //_GUI 69,34
 Object ( Variant Size) Input:C;  //_GUI 69,46
 Object ( Bit Invert) Input:D;  //_GUI 69,55
 //_Attributes Constant="0"
 Object Output( Complex ComplexConstant) ;  //_GUI 206,64
 Object ( Bit Out1) IsVariant( Variant Type) ;  //_GUI 83,32
 Object Output:A( Bit Trap) ;  //_GUI 94,34
 //_Attributes Trap="Variant in BuildConstants: we don't like this."
 Object ( Bit Out1) IsVariant:A( Variant Type) ;  //_GUI 75,44
 Object Output:B( Bit Trap) ;  //_GUI 86,46
 //_Attributes Trap="Variant in BuildConstants: we don't like this."
 Object ( Complex Out) ComplexOut( List In1) ;  //_GUI 191,62
 Object ( Variant O) Mux( Variant A, Variant B
    , Bit S) ;  //_GUI 124,71
 Object ( QInt In) Input:E;  //_GUI 93,86
 //_Attributes Constant="*\"(3.1415926535897932384626433832795,2.0,*,##N2.B,1,-,*,##N3.B,/,s,2,##N1.B,2,/,^,*,r)\""
 Object ( List Out) ListOut( Variant In1, Variant In2) ;  //_GUI 177,62
 Object ( QInt In) Input:F;  //_GUI 85,60
 //_Attributes Constant="*\"(3.1415926535897932384626433832795,2.0,*,##N2.B,1,-,*,##N3.B,/,c,2,##N0.B,2,/,^,*,r)\""
 Object ( Variant OFL, Variant Out1) TwosExtnd( Variant Type
    , Variant Data) ;  //_GUI 159,59
 Object ( Variant OFL, Variant Out1) TwosExtnd:A( Variant Type
    , Variant Data) ;  //_GUI 159,69
 Object ( LSB064 Out1) $Cast( QInt Data, LSB064 Type) ;  //_GUI 95,56
 Object ( LSB064 Out1) $Cast:A( QInt Data, LSB064 Type) ;  //_GUI 104,82
 Object ( QInt In) Input:G;  //_GUI 90,74
 //_Attributes Constant="*\"(3.1415926535897932384626433832795,2.0,*,##N2.B,1,-,*,##N3.B,/,s,2,##N1.B,2,/,^,*,r,n)\""
 Object ( LSB064 Out1) $Cast:B( QInt Data, LSB064 Type) ;  //_GUI 101,70
 Object ( Variant Out1) CollectMSB( Variant In2, Variant In3) ;  //_GUI 146,53
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction
    ( Variant In1) ;  //_GUI 138,54
 Object ( Variant Out1) CollectMSB:A( Variant In2, Variant In3) ;  //_GUI 146,65
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:A
    ( Variant In1) ;  //_GUI 136,66

 // Behavior Topology
 Output.0 = ComplexOut.0;  
 IsVariant.0 = Input:B.0;  
 Output:A.0 = IsVariant.0;  
 IsVariant:A.0 = Input:C.0;  
 Output:B.0 = IsVariant:A.0;  
 ComplexOut.0 = ListOut.0;  
 Mux.0 = $Cast:B.0;  
 Mux.1 = $Cast:A.0;  //_GUI 114,76
 Mux.2 = Input:D.0;  //_GUI 121,79, 121,56
 ListOut.0 = TwosExtnd:A.1;  //_GUI 177,74
 ListOut.1 = TwosExtnd.1;  
 TwosExtnd.0 = CollectMSB.0;  
 TwosExtnd.1 = $Cast.0;  //_GUI 105,64
 TwosExtnd:A.0 = CollectMSB:A.0;  
 TwosExtnd:A.1 = Mux.0;  
 $Cast.0 = Input:F.0;  
 $Cast:A.0 = Input:E.0;  
 $Cast:B.0 = Input:G.0;  
 CollectMSB.0 = Junction.1;  
 CollectMSB.1 = Junction.2;  //_GUI 139,58
 Junction.0 = Input.0;  //_GUI 139,24
 CollectMSB:A.0 = Junction:A.1;  
 CollectMSB:A.1 = Junction:A.2;  //_GUI 137,70
 Junction:A.0 = Input:A.0;  //_GUI 137,27
}

Object ( Floating Out1) ScaleFromConstants( Floating Type, Floating Data) 
//_Attributes TreeGroup=CoreLib-DSP\Compile-Time,Documentation="floating"
{
 //_ Object Prototypes
 Object ( Floating Type) Input;  //_GUI 30,20
 Object ( Floating Data) Input:A;  //_GUI 30,30
 Object Output( Floating Out1) ;  //_GUI 83,30
 Object Text;  //_GUI 37,25,the multiplier won't change the size on this

 // Behavior Topology
 Output.0 = Input:A.0;  
}

Object ( Complex Out1) ScaleFromConstants( Complex Type, Complex In1) 
//_Attributes TreeGroup=CoreLib-DSP\Compile-Time,Documentation="complex"
{
 //_ Object Prototypes
 Object ( Complex Type) Input;  //_GUI 30,18
 Object ( Complex In1) Input:A;  //_GUI 30,30
 Object Output( Complex Out1) ;  //_GUI 120,30
 Object ( Complex Out) ComplexOut( List In1) ;  //_GUI 105,28
 Object ( Variant Out1, Variant Out2) ListIn( List In) ;  //_GUI 52,28
 Object ( List Out) ListOut( Variant In1, Variant In2) ;  //_GUI 92,28
 Object ( List Out1) ComplexIn( Complex In) ;  //_GUI 39,28
 Object ( Variant Out1) ScaleFromConstants( Variant Type, Variant In1) ;  //_GUI 68,32
 //_Attributes Documentation="floating"
 Object ( Variant Out1) ScaleFromConstants:A( Variant Type, Variant In1) ;  //_GUI 71,22
 //_Attributes Documentation="floating"
 Object ( Variant Out1, Variant Out2) ListIn:A( List In) ;  //_GUI 49,16
 Object ( List Out1) ComplexIn:A( Complex In) ;  //_GUI 36,16

 // Behavior Topology
 Output.0 = ComplexOut.0;  
 ComplexOut.0 = ListOut.0;  
 ListIn.0 = ComplexIn.0;  
 ListOut.0 = ScaleFromConstants.0;  //_GUI 89,33
 ListOut.1 = ScaleFromConstants:A.0;  
 ComplexIn.0 = Input:A.0;  
 ScaleFromConstants.0 = ListIn:A.0;  //_GUI 68,21
 ScaleFromConstants.1 = ListIn.0;  //_GUI 63,37
 ScaleFromConstants:A.0 = ListIn:A.1;  //_GUI 71,18
 ScaleFromConstants:A.1 = ListIn.1;  //_GUI 63,27
 ListIn:A.0 = ComplexIn:A.0;  
 ComplexIn:A.0 = Input.0;  
}

Object ( Variant Out1) ScaleFromConstants( Variant Type, ZTList In1) 
//_Attributes TreeGroup=CoreLib-DSP\Compile-Time,Documentation="ztlist"
{
 //_ Object Prototypes
 Object ( Variant Type) Input;  //_GUI 30,18
 Object ( ZTList In1) Input:A;  //_GUI 30,30
 Object Output( Variant Out1) ;  //_GUI 118,30
 Object ( Variant Out1) ScaleFromConstants( Variant Type, Variant In1) ;  //_GUI 68,32
 //_Attributes Documentation="floating"
 Object ( Variant Out1) ScaleFromConstants:A( Variant Type, Variant In1) ;  //_GUI 71,22
 //_Attributes Documentation="floating"
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction
    ( Variant In1) ;  //_GUI 67,23
 Object ( Variant Out1, Variant LSB) PopLsb( Variant In1) ;  //_GUI 39,28
 //_Attributes Documentation="ztlist"
 Object ( Variant Out1) PushLsb( Variant In1, Variant LSB) ;  //_GUI 104,28
 //_Attributes Documentation="ztl/var"

 // Behavior Topology
 Output.0 = PushLsb.0;  
 ScaleFromConstants.0 = Junction.2;  
 ScaleFromConstants.1 = PopLsb.1;  //_GUI 56,37, 56,33
 ScaleFromConstants:A.0 = Junction.1;  
 ScaleFromConstants:A.1 = PopLsb.0;  //_GUI 56,27, 56,30
 Junction.0 = Input.0;  //_GUI 68,19
 PopLsb.0 = Input:A.0;  
 PushLsb.0 = ScaleFromConstants:A.0;  //_GUI 98,30, 98,25
 PushLsb.1 = ScaleFromConstants.0;  //_GUI 96,33, 96,35
}

Object ( ZTerm Out1) ScaleFromConstants( Variant Type, ZTerm In1) 
//_Attributes TreeGroup=CoreLib-DSP\Compile-Time,Documentation="zterm"
{
 //_ Object Prototypes
 Object ( Variant Type) Input;  //_GUI 30,18
 Object ( ZTerm In1) Input:A;  //_GUI 30,30
 Object Output( ZTerm Out1) ;  //_GUI 118,30

 // Behavior Topology
 Output.0 = Input:A.0;  
}

Object ( Variant Lo) ScaleFromConstants( Variant Type, Variant In2) 
//_Attributes TreeGroup=CoreLib-DSP\Compile-Time,Documentation="var"
{
 //_ Object Prototypes
 Object ( Variant Type) Input;  //_GUI 14,20
 Object ( Variant In2) Input:A;  //_GUI 21,32
 Object Output( Variant Lo) ;  //_GUI 101,26
 Object Text;  //_GUI 24,41,This corrosponds to our build constants ability for the integer data types. We probably should round here, but we can pick that up another day.
 Object ( Variant Out1, Variant Out1) ExposeBIN( Variant In1) ;  //_GUI 22,18
 //_Attributes Documentation="Error"
 Object ( Variant C, Variant Out2) SHR_Twos( Variant In1
    , Variant CTypeOnly) ;  //_GUI 60,31
 //_Attributes Documentation="var"
 Object ( Variant Out1, Variant Out1) ExposeBIN:A( Variant In1) ;  //_GUI 39,20
 //_Attributes Documentation="Error"
 Object ( Variant Hi, Variant Lo) Lo_N( Variant Data
    , Variant Lo_N) ;  //_GUI 89,22

 // Behavior Topology
 Output.0 = Lo_N.1;  
 ExposeBIN.0 = Input.0;  
 SHR_Twos.0 = Input:A.0;  
 SHR_Twos.1 = ExposeBIN:A.1;  //_GUI 54,36, 54,25
 ExposeBIN:A.0 = ExposeBIN.1;  
 Lo_N.0 = SHR_Twos.1;  //_GUI 76,24, 76,36
 Lo_N.1 = ExposeBIN.0;  //_GUI 82,27, 82,15, 34,15
}

Object ( Bit OFL, Variant accum, Variant PipeLen
    , Bit ClkG, Bit AClr, Bit Done, Bit Busy) FIR
    ( Variant input, List h, Bit ClkG, Bit AClrG
    , Bit Go, Bit Wait) 
//_Attributes TreeGroup=CoreLib-DSP
{
 //_ Object Prototypes
 Object ( Variant input) Input;  //_GUI 30,4
 Object ( List h) Input:A;  //_GUI 33,17
 Object ( Bit ClkG) Input:B;  //_GUI 41,33
 //_Attributes Resource=*Global
 Object ( Bit AClrG) Input:C;  //_GUI 41,36
 //_Attributes Resource=*Global
 Object ( Bit Go) Input:D;  //_GUI 41,39
 Object ( Bit Wait) Input:E;  //_GUI 39,49
 Object Output( Bit OFL) ;  //_GUI 196,19
 Object Output:A( Variant accum) ;  //_GUI 217,25
 Object Output:B( Variant PipeLen) ;  //_GUI 224,31
 Object Output:C( Bit ClkG) ;  //_GUI 186,36
 Object Output:D( Bit AClr) ;  //_GUI 186,39
 Object Output:E( Bit Done) ;  //_GUI 225,42
 Object Output:F( Bit Busy) ;  //_GUI 225,47
 Object ( Variant Out1) PushLsb( Variant In1, Variant LSB) ;  //_GUI 60,24
 //_Attributes Documentation="ztl/var"
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction
    ( Variant In0) ;  //_GUI 98,27
 Object ( Variant MSB, Variant Out1) PopMsb( Variant In1) ;  //_GUI 102,55
 //_Attributes Documentation="zterm"
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:A
    ( Bit In0) ;  //_GUI 92,36
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:B
    ( Bit In0) ;  //_GUI 95,33
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:C
    ( Bit In0) ;  //_GUI 89,39
 Object ( Variant Out1) Cast( Variant Type, Variant Data) ;  //_GUI 80,25
 //_Attributes Documentation="ztlist"
 Object ( List Out1, List Out2, List Out3) Junction:D
    ( List In0) ;  //_GUI 79,17
 Object ( Variant Out1, Variant LSB) PopLsb( Variant In1) ;  //_GUI 42,8
 //_Attributes Documentation="ztlist"
 Object ( List Out1, List Out2, List Out3) Junction:E
    ( List In0) ;  //_GUI 41,17
 Object Text;  //_GUI 76,3,We don't put an OFL on this convert because typically the input is a smaller dataset than the taps
 Object Text;  //_GUI 20,21,h is the array of tap coefficients
 Object Text;  //_GUI 121,76,This feedback loop is the delay line. It has to be shifted before the next clock cycle so that the data can come in pipelined.
 Object ( Variant Out1) PushLsb:A( Variant In1, Variant LSB) ;  //_GUI 212,29
 //_Attributes Documentation="var/var"
 Object ( Bit OFL, Variant R, Variant PipeLen
    , Bit ClkG, Bit AClr, Bit Done, Bit Busy) Sum_Pipe
    ( Variant List, Bit ClkG, Bit AClr, Bit Go
    , Bit Wait) ;  //_GUI 156,26
 //_Attributes Documentation="ZTList"
 Object Text;  //_GUI 17,65,/***************************************************************************** fir_basic: Does the basic FIR algorithm: store input sample, calculate       * output sample, move delay line                                           * Copyright 2000 by Grant R. Griffin*****************************************************************************/SAMPLE fir_basic(SAMPLE input, int ntaps, const SAMPLE h[], SAMPLE z[])       {    int ii;    SAMPLE accum;        /* store input at the beginning of the delay line */    z[0] = input;    /* calc FIR */    accum = 0;    for (ii = 0; ii < ntaps; ii++) {        accum += h[ii] * z[ii];    }    /* shift delay line */    for (ii = ntaps - 2; ii >= 0; ii--) {        z[ii + 1] = z[ii];    }    return accum;}
 Object ( Variant OFL, Variant Out1) Convert( Variant Type
    , Variant Data) ;  //_GUI 60,0
 //_Attributes Documentation="Signed"
 Object ( Variant Q, Bit ClkG, Bit AClr
    , Bit Done, Bit Busy) RegGDBW( Variant D, Bit ClkG
    , Bit AClr, Bit Go, Bit Wait) ;  //_GUI 115,58
 Object ( Variant R, Variant PipeLen, Bit ClkG
    , Bit AClr, Bit Done, Bit Busy) Mul_Pipe( Variant A
    , Variant B, Bit ClkG, Bit AClr, Bit Go
    , Bit Wait) ;  //_GUI 115,26

 // Behavior Topology
 Output.0 = Sum_Pipe.0;  //_GUI 188,20, 188,28
 Output:A.0 = Sum_Pipe.1;  //_GUI 191,26, 191,31
 Output:B.0 = PushLsb:A.0;  
 Output:C.0 = Sum_Pipe.3;  
 Output:D.0 = Sum_Pipe.4;  
 Output:E.0 = Sum_Pipe.5;  
 Output:F.0 = Mul_Pipe.5;  //_GUI 115,48
 PushLsb.0 = RegGDBW.0;  //_GUI 49,26, 49,53, 135,53, 135,60
 PushLsb.1 = Convert.1;  //_GUI 55,29, 55,20, 70,20
 Junction.0 = Cast.0;  
 PopMsb.0 = Junction.2;  //_GUI 99,58
 Junction:A.0 = Input:C.0;  
 Junction:B.0 = Input:B.0;  
 Junction:C.0 = Input:D.0;  
 Cast.0 = Junction:D.2;  
 Cast.1 = PushLsb.0;  //_GUI 75,30, 75,27
 Junction:D.0 = Junction:E.1;  
 PopLsb.0 = Junction:E.0;  
 Junction:E.0 = Input:A.0;  
 PushLsb:A.0 = Sum_Pipe.2;  //_GUI 206,31, 206,34
 PushLsb:A.1 = Mul_Pipe.1;  //_GUI 212,53, 138,53, 138,31
 Sum_Pipe.0 = Mul_Pipe.0;  
 Sum_Pipe.1 = Mul_Pipe.2;  //_GUI 148,31, 148,34
 Sum_Pipe.2 = Mul_Pipe.3;  //_GUI 151,34, 151,37
 Sum_Pipe.3 = Mul_Pipe.4;  //_GUI 153,43, 153,40
 Sum_Pipe.4 = Input:E.0;  //_GUI 182,46, 182,50
 Convert.0 = PopLsb.1;  //_GUI 57,2, 57,13
 Convert.1 = Input.0;  
 RegGDBW.0 = PopMsb.1;  
 RegGDBW.1 = Junction:B.2;  //_GUI 96,63
 RegGDBW.2 = Junction:A.2;  //_GUI 93,66
 RegGDBW.3 = Junction:C.2;  //_GUI 90,69
 Mul_Pipe.0 = Junction:D.1;  //_GUI 107,28, 107,18
 Mul_Pipe.1 = Junction.1;  //_GUI 104,31, 104,28
 Mul_Pipe.2 = Junction:B.1;  
 Mul_Pipe.3 = Junction:A.1;  
 Mul_Pipe.4 = Junction:C.1;  
 Mul_Pipe.5 = Sum_Pipe.6;  //_GUI 147,43, 147,46
}

Object ( Bit OFL, Variant LSBList, Variant PipeLen) demo_basic_FIR
    ( MSB008 MSB, MSB008 In2, MSB008 In3, MSB008 In4
    , MSB008 In5, MSB008 LSB, MSB008 MSB, MSB008 LSB
    , MSB008 MSB, Bit Go) 
//_Attributes TreeGroup=CoreLib-DSP\Example
{
 //_ Object Prototypes
 Object ( MSB008 MSB) Input;  //_GUI 26,34
 //_Attributes Constant="6"
 Object ( MSB008 In2) Input:A;  //_GUI 26,37
 //_Attributes Constant="5"
 Object ( MSB008 In3) Input:B;  //_GUI 26,40
 //_Attributes Constant="4"
 Object ( MSB008 In4) Input:C;  //_GUI 26,43
 //_Attributes Constant="3"
 Object ( MSB008 In5) Input:D;  //_GUI 26,46
 //_Attributes Constant="2"
 Object ( MSB008 LSB) Input:E;  //_GUI 26,49
 //_Attributes Constant="1"
 Object ( MSB008 MSB) Input:F;  //_GUI 13,83
 //_Attributes Constant="0"
 Object ( MSB008 LSB) Input:G;  //_GUI 66,98
 //_Attributes Constant="1"
 Object ( MSB008 MSB) Input:H;  //_GUI 43,107
 //_Attributes Constant="0"
 Object ( Bit Go) Input:I;  //_GUI 44,112
 Object Output( Bit OFL) ;  //_GUI 144,54
 Object Output:A( Variant LSBList) ;  //_GUI 203,58
 Object Output:B( Variant PipeLen) ;  //_GUI 171,85
 Object ( MSB008 Out1, MSB008 Out2, MSB008 Out3) Junction
    ( MSB008 In1) ;  //_GUI 50,116
 Object ( MSB008 Out1, MSB008 Out2, MSB008 Out3) Junction:A
    ( MSB008 In1) ;  //_GUI 50,113
 Object ( MSB008 Out1, MSB008 Out2, MSB008 Out3) Junction:B
    ( MSB008 In1) ;  //_GUI 50,110
 Object ( Variant Out1) PushLsb( Variant In1, Variant LSB) ;  //_GUI 78,94
 //_Attributes Documentation="ztl/var"
 Object ( Variant Out1) Cat( Variant Hi, Variant Lo) ;  //_GUI 95,95
 //_Attributes Documentation="ztlist/ztlist"
 Object ( Variant ZTList) NewZTList( Variant MSB, Variant In2
    , Variant In3, Variant In31, Variant In32, Variant LSB) ;  //_GUI 26,82
 Object ( Variant ZTList) NewZTList:A( Variant MSB, Variant In2
    , Variant In3, Variant In31, Variant In32, Variant LSB) ;  //_GUI 36,33
 Object ( MSB008 Out1, MSB008 Out2, MSB008 Out3) Junction:C
    ( MSB008 In0) ;  //_GUI 20,83
 Object ( MSB008 Out1, MSB008 Out2, MSB008 Out3) Junction:D
    ( MSB008 In1) ;  //_GUI 20,92
 Object ( MSB008 Out1, MSB008 Out2, MSB008 Out3) Junction:E
    ( MSB008 In1) ;  //_GUI 20,89
 Object ( MSB008 Out1, MSB008 Out2, MSB008 Out3) Junction:F
    ( MSB008 In1) ;  //_GUI 20,86
 Object ( MSB008 Out1, MSB008 Out2, MSB008 Out3) Junction:G
    ( MSB008 In1) ;  //_GUI 20,95
 Object ( Variant Out1) Cat:A( Variant Hi, Variant Lo) ;  //_GUI 46,83
 //_Attributes Documentation="ztlist/ztlist"
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:H
    ( Variant In0) ;  //_GUI 41,84
 Object ( Variant Out1, Variant LSB) PopLsb( Variant In1) ;  //_GUI 75,59
 //_Attributes Documentation="ztlist"
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:I
    ( Variant In3) ;  //_GUI 67,61
 Object ( Variant Pulse) OneShot( Variant I, Bit ClkG) ;  //_GUI 50,64
 Object ( Variant LSBList) ZTListToLSBList( Variant ZTList) ;  //_GUI 70,52
 //_Attributes Documentation="ztlist"
 Object ( Variant Out1) BitLength( Variant In1) ;  //_GUI 158,83
 //_Attributes Documentation="zterm"
 Object ( MSB008 Out1, MSB008 Out2, MSB008 Out3) Junction:J
    ( MSB008 In0) ;  //_GUI 50,107
 Object ( Variant ZTList) NewZTList:B( Variant MSB, Variant In2
    , Variant In3, Variant In31, Variant LSB) ;  //_GUI 55,106
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:K
    ( Variant In0) ;  //_GUI 89,54
 Object ( Variant Q) RegEn( Variant D, Bit ClkG
    , Variant EN) ;  //_GUI 189,56
 Object ( Variant P_Data, Variant S_Type, Variant StageMsk
    , Bit Done, Bit Busy) "Serial->Parallel_Clr"( Variant S_Data, Variant P_Type
    , Bit ClkG, Bit AClr, Bit Go, Bit Wait) ;  //_GUI 164,56
 Object ( Variant S_Data, Variant P_Type, Variant StageMsk
    , Bit Done, Bit Busy) "Parallel->Serial_Clr"( Variant P_Data, Variant S_Type
    , Bit ClkG, Bit AClr, Bit Go, Bit Wait) ;  //_GUI 93,53
 Object ( Variant LSBList) ZTListToLSBList:A( Variant ZTList) ;  //_GUI 92,33
 //_Attributes Documentation="ztlist"
 Object ( Bit OFL, Variant accum, Variant PipeLen
    , Bit ClkG, Bit AClr, Bit Done, Bit Busy) FIR
    ( Variant input, List h, Bit ClkG, Bit AClrG
    , Bit Go, Bit Wait) ;  //_GUI 125,53

 // Behavior Topology
 Output.0 = FIR.0;  
 Output:A.0 = RegEn.0;  
 Output:B.0 = BitLength.0;  
 Junction.0 = Junction:A.2;  
 Junction:A.0 = Junction:B.2;  
 Junction:B.0 = Junction:J.2;  
 PushLsb.0 = Cat:A.0;  //_GUI 60,96, 60,86
 PushLsb.1 = Input:G.0;  
 Cat.0 = PushLsb.0;  
 Cat.1 = NewZTList:B.0;  //_GUI 92,100, 92,109
 NewZTList.0 = Junction:C.1;  
 NewZTList.1 = Junction:F.1;  
 NewZTList.2 = Junction:E.1;  
 NewZTList.3 = Junction:D.1;  
 NewZTList.4 = Junction:G.1;  
 NewZTList.5 = Junction:G.2;  //_GUI 21,99
 NewZTList:A.0 = Input.0;  
 NewZTList:A.1 = Input:A.0;  
 NewZTList:A.2 = Input:B.0;  
 NewZTList:A.3 = Input:C.0;  
 NewZTList:A.4 = Input:D.0;  
 NewZTList:A.5 = Input:E.0;  
 Junction:C.0 = Input:F.0;  
 Junction:D.0 = Junction:E.2;  
 Junction:E.0 = Junction:F.2;  
 Junction:F.0 = Junction:C.2;  
 Junction:G.0 = Junction:D.2;  
 Cat:A.0 = Junction:H.1;  
 Cat:A.1 = Junction:H.2;  //_GUI 42,88
 Junction:H.0 = NewZTList.0;  
 PopLsb.0 = Junction:I.2;  
 Junction:I.0 = Cat.0;  //_GUI 68,89, 105,89
 OneShot.0 = Input:I.0;  //_GUI 50,90, 48,90
 ZTListToLSBList.0 = Junction:I.1;  //_GUI 68,55
 BitLength.0 = FIR.2;  //_GUI 146,86, 146,61
 Junction:J.0 = Input:H.0;  
 NewZTList:B.0 = Junction:J.1;  
 NewZTList:B.1 = Junction:B.1;  
 NewZTList:B.2 = Junction:A.1;  
 NewZTList:B.3 = Junction.1;  
 NewZTList:B.4 = Junction.2;  //_GUI 51,120
 Junction:K.0 = ZTListToLSBList.0;  
 RegEn.0 = "Serial->Parallel_Clr".0;  
 RegEn.2 = "Serial->Parallel_Clr".3;  //_GUI 185,64, 185,70
 "Serial->Parallel_Clr".0 = FIR.1;  
 "Serial->Parallel_Clr".1 = Junction:K.0;  //_GUI 159,61, 159,50, 90,50
 "Serial->Parallel_Clr".4 = FIR.5;  
 "Parallel->Serial_Clr".0 = Junction:K.1;  
 "Parallel->Serial_Clr".1 = PopLsb.1;  //_GUI 89,58, 89,64
 "Parallel->Serial_Clr".4 = OneShot.0;  
 "Parallel->Serial_Clr".5 = FIR.6;  //_GUI 117,70, 117,73
 ZTListToLSBList:A.0 = NewZTList:A.0;  
 FIR.0 = "Parallel->Serial_Clr".0;  
 FIR.1 = ZTListToLSBList:A.0;  //_GUI 122,58, 122,36
 FIR.4 = "Parallel->Serial_Clr".3;  //_GUI 119,70, 119,67
 FIR.5 = "Serial->Parallel_Clr".4;  
}

Object ( Variant Out1, Variant Out1, Variant Out2
    , Variant PipeLen, Variant Out4, Variant Out1, Variant Out2
    , Variant Out4, Variant LSB, Bit Done, Bit Busy) demo_fft_1d_int
    ( Variant Data, Variant Data, Variant Data, Variant Data
    , Variant Data, Bit I, Variant Data, Variant Data
    , Variant Data, Bit Wait) 
//_Attributes TreeGroup=CoreLib-DSP\Example
{
 //_ Object Prototypes
 Object ( Variant Data) Input;  //_GUI 12,52
 //_Attributes WidgetLeft=20,WidgetTop=5,WidgetWidth=164,WidgetHeight=50,Widget=TextBox
 Object ( Variant Data) Input:A;  //_GUI 12,55
 //_Attributes WidgetLeft=20,WidgetTop=60,WidgetWidth=164,WidgetHeight=50,Widget=TextBox
 Object ( Variant Data) Input:B;  //_GUI 12,58
 //_Attributes WidgetLeft=20,WidgetTop=115,WidgetWidth=164,WidgetHeight=50,Widget=TextBox
 Object ( Variant Data) Input:C;  //_GUI 12,61
 //_Attributes WidgetLeft=20,WidgetTop=170,WidgetWidth=164,WidgetHeight=50,Widget=TextBox
 Object ( Variant Data) Input:D;  //_GUI 12,64
 //_Attributes WidgetLeft=20,WidgetWidth=164,WidgetHeight=50,Widget=TextBox
 Object ( Bit I) Input:E;  //_GUI 58,64
 Object ( Variant Data) Input:F;  //_GUI 12,67
 //_Attributes WidgetLeft=20,WidgetWidth=164,WidgetHeight=50,Widget=TextBox
 Object ( Variant Data) Input:G;  //_GUI 12,70
 //_Attributes WidgetLeft=20,WidgetWidth=164,WidgetHeight=50,Widget=TextBox
 Object ( Variant Data) Input:H;  //_GUI 12,73
 //_Attributes WidgetLeft=20,WidgetWidth=164,WidgetHeight=50,Widget=TextBox
 Object ( Bit Wait) Input:I;  //_GUI 91,78
 Object Output( Variant Out1) ;  //_GUI 200,53
 Object Output:A( Variant Out1) ;  //_GUI 202,56
 Object Output:B( Variant Out2) ;  //_GUI 201,59
 Object Output:C( Variant PipeLen) ;  //_GUI 117,60
 Object Output:D( Variant Out4) ;  //_GUI 202,62
 Object Output:E( Variant Out1) ;  //_GUI 201,65
 Object Output:F( Variant Out2) ;  //_GUI 200,68
 Object Output:G( Variant Out4) ;  //_GUI 201,71
 Object Output:H( Variant LSB) ;  //_GUI 201,74
 Object Output:I( Bit Done) ;  //_GUI 99,79
 Object Output:J( Bit Busy) ;  //_GUI 89,84
 Object ( Variant OFL, Variant D, Variant PipeLen
    , Bit Done, Bit Busy) FFT_1D( Variant D, Bit Invert
    , Bit ClkG, Bit AClrG, Bit Go, Bit Wait) ;  //_GUI 83,52
 //_Attributes Documentation="ztlist"
 Object ( Variant ZTList) NewZTList( Variant MSB, Variant In2
    , Variant In3, Variant In3, Variant In3, Variant In3
    , Variant In3, Variant LSB) ;  //_GUI 25,51
 Object ( Variant Out1, Variant Out1, Variant Out1
    , Variant Out1, Variant Out1, Variant Out1, Variant Out1
    , Variant LSB) UnpackZTList( Variant In1) ;  //_GUI 185,52
 Object ( Variant Out1) BitLength( Variant Type) ;  //_GUI 104,58
 Object ( Bit Pulse) OneShot( Bit I, Bit ClkG) ;  //_GUI 66,63
 Object ( Variant List) MakeComplex( Variant List) ;  //_GUI 63,51
 //_Attributes Documentation="List"
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction
    ( Variant In0) ;  //_GUI 58,53
 Object ( Variant Out1) DynamicOut( Variant In1) ;  //_GUI 41,51
 //_Attributes Documentation="ztlist"
 Object ( Bit OFL, Variant Out1) StaticOut( Variant Type
    , Variant Data) ;  //_GUI 162,50
 //_Attributes Documentation="ztlist"
 Object ( Variant List) RevertComplexList( Variant OriginalList, Variant AfterMakeComplexList) ;  //_GUI 119,52
 //_Attributes Documentation="List"
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:A
    ( Variant In0) ;  //_GUI 20,52

 // Behavior Topology
 Output.0 = UnpackZTList.0;  
 Output:A.0 = UnpackZTList.1;  
 Output:B.0 = UnpackZTList.2;  
 Output:C.0 = BitLength.0;  
 Output:D.0 = UnpackZTList.3;  
 Output:E.0 = UnpackZTList.4;  
 Output:F.0 = UnpackZTList.5;  
 Output:G.0 = UnpackZTList.6;  
 Output:H.0 = UnpackZTList.7;  
 Output:I.0 = FFT_1D.3;  //_GUI 99,72, 97,72
 Output:J.0 = FFT_1D.4;  //_GUI 83,85
 FFT_1D.0 = MakeComplex.0;  
 FFT_1D.4 = OneShot.0;  
 FFT_1D.5 = Input:I.0;  //_GUI 97,79
 NewZTList.0 = Junction:A.1;  
 NewZTList.1 = Input:A.0;  
 NewZTList.2 = Input:B.0;  
 NewZTList.3 = Input:C.0;  
 NewZTList.4 = Input:D.0;  
 NewZTList.5 = Input:F.0;  
 NewZTList.6 = Input:G.0;  
 NewZTList.7 = Input:H.0;  
 UnpackZTList.0 = StaticOut.1;  
 BitLength.0 = FFT_1D.2;  //_GUI 99,61, 99,60
 OneShot.0 = Input:E.0;  
 MakeComplex.0 = Junction.1;  
 Junction.0 = DynamicOut.0;  
 DynamicOut.0 = NewZTList.0;  
 StaticOut.0 = Junction:A.0;  //_GUI 162,33, 21,33
 StaticOut.1 = RevertComplexList.0;  
 RevertComplexList.0 = Junction.0;  //_GUI 110,54, 110,44, 59,44
 RevertComplexList.1 = FFT_1D.1;  
 Junction:A.0 = Input.0;  
}

Object ( List Out1) ScaleFromConstants( Variant Type, List In1) 
//_Attributes TreeGroup=CoreLib-DSP\Compile-Time,Documentation="list"
{
 //_ Object Prototypes
 Object ( Variant Type) Input;  //_GUI 30,18
 Object ( List In1) Input:A;  //_GUI 30,30
 Object Output( List Out1) ;  //_GUI 118,30
 Object ( Variant Out1) ScaleFromConstants( Variant Type, Variant In1) ;  //_GUI 68,32
 //_Attributes Documentation="floating"
 Object ( Variant Out1) ScaleFromConstants:A( Variant Type, Variant In1) ;  //_GUI 71,22
 //_Attributes Documentation="floating"
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction
    ( Variant In1) ;  //_GUI 67,23
 Object ( Variant Out1, Variant Out2) ListIn( List In) ;  //_GUI 40,28
 Object ( List Out) ListOut( Variant In1, Variant In2) ;  //_GUI 104,28

 // Behavior Topology
 Output.0 = ListOut.0;  
 ScaleFromConstants.0 = Junction.2;  
 ScaleFromConstants.1 = ListIn.0;  //_GUI 56,37, 56,33
 ScaleFromConstants:A.0 = Junction.1;  
 ScaleFromConstants:A.1 = ListIn.1;  //_GUI 56,27, 56,30
 Junction.0 = Input.0;  //_GUI 68,19
 ListIn.0 = Input:A.0;  
 ListOut.0 = ScaleFromConstants.0;  //_GUI 96,33, 96,35
 ListOut.1 = ScaleFromConstants:A.0;  //_GUI 98,30, 98,25
}

Object ( Variant OFL, Variant D, Variant PipeLen
    , Bit Done, Bit Busy) FFT_1D( Variant D, Bit Invert
    , Bit ClkG, Bit AClr, Bit Go, Bit Wait) 
//_Attributes TreeGroup=CoreLib-DSP,Documentation="list"
{
 //_ Object Prototypes
 Object ( Variant D) Input;  //_GUI 21,26
 Object ( Bit Invert) Input:A;  //_GUI 21,29
 Object ( Bit ClkG) Input:B;  //_GUI 21,32
 Object ( Bit AClr) Input:C;  //_GUI 21,35
 Object ( Bit Go) Input:D;  //_GUI 21,38
 Object ( Bit Wait) Input:E;  //_GUI 57,52
 Object Output( Variant OFL) ;  //_GUI 95,26
 Object Output:A( Variant D) ;  //_GUI 95,29
 Object Output:B( Variant PipeLen) ;  //_GUI 95,32
 Object Output:C( Bit Done) ;  //_GUI 63,38
 Object Output:D( Bit Busy) ;  //_GUI 47,46
 Object ( Variant LSBList) ZTListToLSBList( Variant ZTList) ;  //_GUI 76,27
 //_Attributes Documentation="ztlist"
 Object ( ZTList ZTList) LsbListToZTList( Variant LsbList) ;  //_GUI 27,24
 //_Attributes Documentation="var"
 Object ( Variant OFL, Variant D, Variant PipeLen
    , Bit Done, Bit Busy) FFT_1D( ZTList D, Bit Invert
    , Bit ClkG, Bit AClrG, Bit Go, Bit Wait) ;  //_GUI 47,25

 // Behavior Topology
 Output.0 = FFT_1D.0;  
 Output:A.0 = ZTListToLSBList.0;  
 Output:B.0 = FFT_1D.2;  
 Output:C.0 = FFT_1D.3;  
 Output:D.0 = FFT_1D.4;  
 ZTListToLSBList.0 = FFT_1D.1;  
 LsbListToZTList.0 = Input.0;  
 FFT_1D.0 = LsbListToZTList.0;  
 FFT_1D.1 = Input:A.0;  
 FFT_1D.2 = Input:B.0;  
 FFT_1D.3 = Input:C.0;  
 FFT_1D.4 = Input:D.0;  
 FFT_1D.5 = Input:E.0;  
}

Object ( Complex ComplexConstant) $BuildPolarConstants( Signed DataTypeReal, Signed DataTypeImag
    , Variant Index, Variant Size, Bit Invert) 
//_Attributes TreeGroup=CoreLib-DSP\Compile-Time,Documentation="Signed"
{
 //_ Object Prototypes
 Object ( Signed DataTypeReal) Input;  //_GUI 68,23
 Object ( Signed DataTypeImag) Input:A;  //_GUI 68,26
 Object ( Variant Index) Input:B;  //_GUI 69,34
 Object ( Variant Size) Input:C;  //_GUI 69,46
 Object ( Bit Invert) Input:D;  //_GUI 69,55
 //_Attributes Constant="0"
 Object Output( Complex ComplexConstant) ;  //_GUI 219,64
 Object ( Bit Out1) IsVariant( Variant Type) ;  //_GUI 83,32
 Object Output:A( Bit Trap) ;  //_GUI 94,34
 //_Attributes Trap="Variant in BuildConstants: we don't like this."
 Object ( Bit Out1) IsVariant:A( Variant Type) ;  //_GUI 75,44
 Object Output:B( Bit Trap) ;  //_GUI 86,46
 //_Attributes Trap="Variant in BuildConstants: we don't like this."
 Object ( Complex Out) ComplexOut( List In1) ;  //_GUI 204,62
 Object ( Variant O) Mux( Variant A, Variant B
    , Bit S) ;  //_GUI 124,71
 Object ( QInt In) Input:E;  //_GUI 93,86
 //_Attributes Constant="*\"(3.1415926535897932384626433832795,2.0,*,##N2.B,1,-,*,##N3.B,/,s,2,##N1.B,2,/,^,*,r)\""
 Object ( List Out) ListOut( Variant In1, Variant In2) ;  //_GUI 190,62
 Object ( QInt In) Input:F;  //_GUI 85,60
 //_Attributes Constant="*\"(3.1415926535897932384626433832795,2.0,*,##N2.B,1,-,*,##N3.B,/,c,2,##N0.B,2,/,^,*,r)\""
 Object ( Variant OFL, Variant Out1) TwosExtnd( Variant Type
    , Variant Data) ;  //_GUI 159,59
 Object ( Variant OFL, Variant Out1) TwosExtnd:A( Variant Type
    , Variant Data) ;  //_GUI 159,69
 Object ( LSB064 Out1) $Cast( QInt Data, LSB064 Type) ;  //_GUI 95,56
 Object ( LSB064 Out1) $Cast:A( QInt Data, LSB064 Type) ;  //_GUI 104,82
 Object ( QInt In) Input:G;  //_GUI 90,74
 //_Attributes Constant="*\"(3.1415926535897932384626433832795,2.0,*,##N2.B,1,-,*,##N3.B,/,s,2,##N1.B,2,/,^,*,r,n)\""
 Object ( LSB064 Out1) $Cast:B( QInt Data, LSB064 Type) ;  //_GUI 101,70
 Object ( Variant Out1) CollectMSB( Variant In2, Variant In3) ;  //_GUI 146,53
 Object ( Signed Out1, Signed Out2, Signed Out3) Junction
    ( Signed In1) ;  //_GUI 138,54
 Object ( Variant Out1) CollectMSB:A( Variant In2, Variant In3) ;  //_GUI 146,65
 Object ( Signed Out1, Signed Out2, Signed Out3) Junction:A
    ( Signed In1) ;  //_GUI 136,66
 Object ( Signed Out) SignedOut( Variant In1) ;  //_GUI 177,61
 Object ( Signed Out) SignedOut:A( Variant In1) ;  //_GUI 177,64

 // Behavior Topology
 Output.0 = ComplexOut.0;  
 IsVariant.0 = Input:B.0;  
 Output:A.0 = IsVariant.0;  
 IsVariant:A.0 = Input:C.0;  
 Output:B.0 = IsVariant:A.0;  
 ComplexOut.0 = ListOut.0;  
 Mux.0 = $Cast:B.0;  
 Mux.1 = $Cast:A.0;  //_GUI 114,76
 Mux.2 = Input:D.0;  //_GUI 121,79, 121,56
 ListOut.0 = SignedOut:A.0;  
 ListOut.1 = SignedOut.0;  
 TwosExtnd.0 = CollectMSB.0;  
 TwosExtnd.1 = $Cast.0;  //_GUI 105,64
 TwosExtnd:A.0 = CollectMSB:A.0;  
 TwosExtnd:A.1 = Mux.0;  
 $Cast.0 = Input:F.0;  
 $Cast:A.0 = Input:E.0;  
 $Cast:B.0 = Input:G.0;  
 CollectMSB.0 = Junction.1;  
 CollectMSB.1 = Junction.2;  //_GUI 139,58
 Junction.0 = Input.0;  //_GUI 139,24
 CollectMSB:A.0 = Junction:A.1;  
 CollectMSB:A.1 = Junction:A.2;  //_GUI 137,70
 Junction:A.0 = Input:A.0;  //_GUI 137,27
 SignedOut.0 = TwosExtnd.1;  
 SignedOut:A.0 = TwosExtnd:A.1;  //_GUI 177,74
}

Object ( Variant Out1) ScaleFromConstants( Fixed Type, Fixed In1) 
//_Attributes TreeGroup=CoreLib-DSP\Compile-Time,Documentation="fixed"
{
 //_ Object Prototypes
 Object ( Fixed Type) Input;  //_GUI 30,20
 Object ( Fixed In1) Input:A;  //_GUI 30,30
 Object Output( Variant Out1) ;  //_GUI 79,30
 Object ( Bit OFL, Variant Out1) Convert( Variant Type
    , Variant Data) ;  //_GUI 61,26

 // Behavior Topology
 Output.0 = Convert.1;  
 Convert.0 = Input.0;  //_GUI 47,28, 47,21
 Convert.1 = Input:A.0;  
}

Object ( Bit OFL, Variant Real, Variant Imag
    , Variant "Real*2", Variant "Imag*2") $BuildGFTConstants( Floating DataTypeReal, Floating DataTypeImag
    , Variant Index, Variant Size, Bit Invert) 
//_Attributes TreeGroup=CoreLib-DSP\Compile-Time,Documentation="floating"
{
 //_ Object Prototypes
 Object ( Floating DataTypeReal) Input;  //_GUI 68,7
 Object ( Floating DataTypeImag) Input:A;  //_GUI 68,10
 Object ( Variant Index) Input:B;  //_GUI 69,18
 Object ( Variant Size) Input:C;  //_GUI 69,30
 Object ( Bit Invert) Input:D;  //_GUI 69,39
 //_Attributes Constant="0"
 Object Output( Bit OFL) ;  //_GUI 197,27
 Object Output:A( Variant Real) ;  //_GUI 185,47
 Object Output:B( Variant Imag) ;  //_GUI 185,57
 Object Output:C( Variant "Real*2") ;  //_GUI 185,78
 Object Output:D( Variant "Imag*2") ;  //_GUI 185,88
 Object Output:E( Bit Trap) ;  //_GUI 86,30
 //_Attributes Trap="Variant in BuildConstants: we don't like this."
 Object ( Variant Out1) DynamicOut( Variant In1) ;  //_GUI 97,42
 Object ( Variant Out1) DynamicOut:A( Variant In1) ;  //_GUI 97,57
 Object ( Variant O) Mux( Variant A, Variant B
    , Bit S) ;  //_GUI 124,55
 Object ( Double In) Input:E;  //_GUI 69,52
 //_Attributes Constant="*\"(3.1415926535897932384626433832795,2.0,*,##N2.B,1,-,*,##N3.B,/,s)\""
 Object ( Variant Out1) DynamicOut:B( Variant In1) ;  //_GUI 81,50
 Object ( Double In) Input:F;  //_GUI 85,44
 //_Attributes Constant="*\"(3.1415926535897932384626433832795,2.0,*,##N2.B,1,-,*,##N3.B,/,c)\""
 Object ( Bit OFL, Variant Out1) Convert( Variant Type
    , Variant Data) ;  //_GUI 144,43
 Object ( Bit OFL, Variant Out1) Convert:A( Variant Type
    , Variant Data) ;  //_GUI 144,53
 Object ( Bit Out1) IsVariant( Variant Type) ;  //_GUI 83,16
 Object ( Bit Out) OR( Bit In1, Bit In2) ;  //_GUI 165,24
 Object ( Double In) Input:G;  //_GUI 85,59
 //_Attributes Constant="*\"(3.1415926535897932384626433832795,2.0,*,##N2.B,1,-,*,##N3.B,/,s,n)\""
 Object Output:F( Bit Trap) ;  //_GUI 94,18
 //_Attributes Trap="Variant in BuildConstants: we don't like this."
 Object ( Double In) Input:H;  //_GUI 85,90
 //_Attributes Constant="*\"(3.1415926535897932384626433832795,2.0,*,##N2.B,1,-,*,##N3.B,/,s,n,2,*)\""
 Object ( Variant Out1) DynamicOut:C( Variant In1) ;  //_GUI 97,73
 Object ( Variant Out1) DynamicOut:D( Variant In1) ;  //_GUI 97,88
 Object ( Variant O) Mux:A( Variant A, Variant B
    , Bit S) ;  //_GUI 124,86
 Object ( Double In) Input:I;  //_GUI 69,83
 //_Attributes Constant="*\"(3.1415926535897932384626433832795,2.0,*,##N2.B,1,-,*,##N3.B,/,s,2,*)\""
 Object ( Variant Out1) DynamicOut:E( Variant In1) ;  //_GUI 81,81
 Object ( Double In) Input:J;  //_GUI 85,75
 //_Attributes Constant="*\"(3.1415926535897932384626433832795,2.0,*,##N2.B,1,-,*,##N3.B,/,c,2,*)\""
 Object ( Bit OFL, Variant Out1) Convert:B( Variant Type
    , Variant Data) ;  //_GUI 144,74
 Object ( Bit OFL, Variant Out1) Convert:C( Variant Type
    , Variant Data) ;  //_GUI 144,84
 Object ( Bit Out1) IsVariant:A( Variant Type) ;  //_GUI 75,28
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction
    ( Bit In1) ;  //_GUI 120,62
 Object ( Floating Out1, Floating Out2, Floating Out3) Junction:A
    ( Floating In1) ;  //_GUI 136,54
 Object ( Floating Out1, Floating Out2, Floating Out3) Junction:B
    ( Floating In1) ;  //_GUI 139,44
 Object ( Bit Out) OR:A( Bit In1, Bit In2) ;  //_GUI 159,67
 Object ( Bit Out) OR:B( Bit In1, Bit In2) ;  //_GUI 182,25
 Object ( Floating Out1, Floating Out2, Floating Out3) Junction:C
    ( Floating In1) ;  //_GUI 136,85
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:D
    ( Variant In0) ;  //_GUI 116,90
 Object ( Bit Out1) BitA_Gt_BitB( Variant A, Variant B) ;  //_GUI 169,99
 Object Output:G( Bit Trap) ;  //_GUI 185,101
 //_Attributes Trap="Accuracy exceeded."
 Object ( Variant Out1) GetPrecisionAmount( Variant In1) ;  //_GUI 141,107
 Object ( Variant Out1) GetPrecisionAmount:A( Variant In1) ;  //_GUI 141,98

 // Behavior Topology
 Output.0 = OR:B.0;  
 Output:A.0 = Convert.1;  
 Output:B.0 = Convert:A.1;  
 Output:C.0 = Convert:B.1;  
 Output:D.0 = Convert:C.1;  
 Output:E.0 = IsVariant:A.0;  
 DynamicOut.0 = Input:F.0;  
 DynamicOut:A.0 = Input:G.0;  
 Mux.0 = DynamicOut:B.0;  //_GUI 117,57, 117,53
 Mux.1 = DynamicOut:A.0;  
 Mux.2 = Junction.1;  
 DynamicOut:B.0 = Input:E.0;  
 Convert.0 = Junction:B.1;  
 Convert.1 = DynamicOut.0;  //_GUI 115,48, 115,45
 Convert:A.0 = Junction:A.1;  
 Convert:A.1 = Mux.0;  
 IsVariant.0 = Input:B.0;  
 OR.0 = Convert.0;  //_GUI 154,26
 OR.1 = Convert:A.0;  //_GUI 159,29, 159,55
 Output:F.0 = IsVariant.0;  
 DynamicOut:C.0 = Input:J.0;  
 DynamicOut:D.0 = Input:H.0;  
 Mux:A.0 = DynamicOut:E.0;  //_GUI 117,88, 117,84
 Mux:A.1 = Junction:D.1;  
 Mux:A.2 = Junction.2;  //_GUI 121,94
 DynamicOut:E.0 = Input:I.0;  
 Convert:B.0 = Junction:B.2;  //_GUI 140,76
 Convert:B.1 = DynamicOut:C.0;  //_GUI 115,79, 115,76
 Convert:C.0 = Junction:C.1;  
 Convert:C.1 = Mux:A.0;  
 IsVariant:A.0 = Input:C.0;  
 Junction.0 = Input:D.0;  //_GUI 121,40
 Junction:A.0 = Input:A.0;  //_GUI 137,11
 Junction:B.0 = Input.0;  //_GUI 140,8
 OR:A.0 = Convert:B.0;  //_GUI 154,69
 OR:A.1 = Convert:C.0;  //_GUI 159,86
 OR:B.0 = OR.0;  
 OR:B.1 = OR:A.0;  //_GUI 179,30, 179,70
 Junction:C.0 = Junction:A.2;  
 Junction:D.0 = DynamicOut:D.0;  
 BitA_Gt_BitB.0 = GetPrecisionAmount:A.0;  
 BitA_Gt_BitB.1 = GetPrecisionAmount.0;  //_GUI 169,110
 Output:G.0 = BitA_Gt_BitB.0;  
 GetPrecisionAmount.0 = Junction:D.2;  //_GUI 117,110
 GetPrecisionAmount:A.0 = Junction:C.2;  //_GUI 137,101
}

Object ( Bit OFL, Variant Real, Variant Imag
    , Variant "Real*2", Variant "Imag*2") $BuildGFTConstants( Fixed DataTypeReal, Fixed DataTypeImag
    , Variant Index, Variant Size, Bit Invert) 
//_Attributes TreeGroup=CoreLib-DSP\Compile-Time,Documentation="fixed"
{
 //_ Object Prototypes
 Object ( Fixed DataTypeReal) Input;  //_GUI 68,7
 Object ( Fixed DataTypeImag) Input:A;  //_GUI 68,10
 Object ( Variant Index) Input:B;  //_GUI 69,18
 Object ( Variant Size) Input:C;  //_GUI 69,30
 Object ( Bit Invert) Input:D;  //_GUI 69,39
 //_Attributes Constant="0"
 Object Output( Bit OFL) ;  //_GUI 197,27
 Object Output:A( Variant Real) ;  //_GUI 185,47
 Object Output:B( Variant Imag) ;  //_GUI 185,57
 Object Output:C( Variant "Real*2") ;  //_GUI 185,78
 Object Output:D( Variant "Imag*2") ;  //_GUI 185,88
 Object Output:E( Bit Trap) ;  //_GUI 86,30
 //_Attributes Trap="Variant in BuildConstants: we don't like this."
 Object ( Variant Out1) DynamicOut( Variant In1) ;  //_GUI 97,42
 Object ( Variant Out1) DynamicOut:A( Variant In1) ;  //_GUI 97,57
 Object ( Variant O) Mux( Variant A, Variant B
    , Bit S) ;  //_GUI 124,55
 Object ( Fix32 In) Input:E;  //_GUI 69,52
 //_Attributes Constant="*\"(3.1415926535897932384626433832795,2.0,*,##N2.B,1,-,*,##N3.B,/,s)\""
 Object ( Variant Out1) DynamicOut:B( Variant In1) ;  //_GUI 81,50
 Object ( Fix32 In) Input:F;  //_GUI 85,44
 //_Attributes Constant="*\"(3.1415926535897932384626433832795,2.0,*,##N2.B,1,-,*,##N3.B,/,c)\""
 Object ( Bit OFL, Variant Out1) Convert( Variant Type
    , Variant Data) ;  //_GUI 144,43
 Object ( Bit OFL, Variant Out1) Convert:A( Variant Type
    , Variant Data) ;  //_GUI 144,53
 Object ( Bit Out1) IsVariant( Variant Type) ;  //_GUI 83,16
 Object ( Bit Out) OR( Bit In1, Bit In2) ;  //_GUI 165,24
 Object ( Fix32 In) Input:G;  //_GUI 85,59
 //_Attributes Constant="*\"(3.1415926535897932384626433832795,2.0,*,##N2.B,1,-,*,##N3.B,/,s,n)\""
 Object Output:F( Bit Trap) ;  //_GUI 94,18
 //_Attributes Trap="Variant in BuildConstants: we don't like this."
 Object ( Fix32 In) Input:H;  //_GUI 85,90
 //_Attributes Constant="*\"(3.1415926535897932384626433832795,2.0,*,##N2.B,1,-,*,##N3.B,/,s,n,2,*)\""
 Object ( Variant Out1) DynamicOut:C( Variant In1) ;  //_GUI 97,73
 Object ( Variant Out1) DynamicOut:D( Variant In1) ;  //_GUI 97,88
 Object ( Variant O) Mux:A( Variant A, Variant B
    , Bit S) ;  //_GUI 124,86
 Object ( Fix32 In) Input:I;  //_GUI 69,83
 //_Attributes Constant="*\"(3.1415926535897932384626433832795,2.0,*,##N2.B,1,-,*,##N3.B,/,s,2,*)\""
 Object ( Variant Out1) DynamicOut:E( Variant In1) ;  //_GUI 81,81
 Object ( Fix32 In) Input:J;  //_GUI 85,75
 //_Attributes Constant="*\"(3.1415926535897932384626433832795,2.0,*,##N2.B,1,-,*,##N3.B,/,c,2,*)\""
 Object ( Bit OFL, Variant Out1) Convert:B( Variant Type
    , Variant Data) ;  //_GUI 144,74
 Object ( Bit OFL, Variant Out1) Convert:C( Variant Type
    , Variant Data) ;  //_GUI 144,84
 Object ( Bit Out1) IsVariant:A( Variant Type) ;  //_GUI 75,28
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction
    ( Bit In1) ;  //_GUI 120,62
 Object ( Fixed Out1, Fixed Out2, Fixed Out3) Junction:A
    ( Fixed In1) ;  //_GUI 136,54
 Object ( Fixed Out1, Fixed Out2, Fixed Out3) Junction:B
    ( Fixed In1) ;  //_GUI 139,44
 Object ( Bit Out) OR:A( Bit In1, Bit In2) ;  //_GUI 159,67
 Object ( Bit Out) OR:B( Bit In1, Bit In2) ;  //_GUI 182,25
 Object ( Fixed Out1, Fixed Out2, Fixed Out3) Junction:C
    ( Fixed In1) ;  //_GUI 136,85
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:D
    ( Variant In0) ;  //_GUI 116,90
 Object ( Bit Out1) BitA_Gt_BitB( Variant A, Variant B) ;  //_GUI 169,97
 Object Output:G( Bit Trap) ;  //_GUI 185,99
 //_Attributes Trap="Accuracy exceeded."
 Object ( Variant Out1) GetPrecisionAmount( Variant In1) ;  //_GUI 141,105
 Object ( Variant Out1) GetPrecisionAmount:A( Variant In1) ;  //_GUI 141,96

 // Behavior Topology
 Output.0 = OR:B.0;  
 Output:A.0 = Convert.1;  
 Output:B.0 = Convert:A.1;  
 Output:C.0 = Convert:B.1;  
 Output:D.0 = Convert:C.1;  
 Output:E.0 = IsVariant:A.0;  
 DynamicOut.0 = Input:F.0;  
 DynamicOut:A.0 = Input:G.0;  
 Mux.0 = DynamicOut:B.0;  //_GUI 117,57, 117,53
 Mux.1 = DynamicOut:A.0;  
 Mux.2 = Junction.1;  
 DynamicOut:B.0 = Input:E.0;  
 Convert.0 = Junction:B.1;  
 Convert.1 = DynamicOut.0;  //_GUI 115,48, 115,45
 Convert:A.0 = Junction:A.1;  
 Convert:A.1 = Mux.0;  
 IsVariant.0 = Input:B.0;  
 OR.0 = Convert.0;  //_GUI 154,26
 OR.1 = Convert:A.0;  //_GUI 159,29, 159,55
 Output:F.0 = IsVariant.0;  
 DynamicOut:C.0 = Input:J.0;  
 DynamicOut:D.0 = Input:H.0;  
 Mux:A.0 = DynamicOut:E.0;  //_GUI 117,88, 117,84
 Mux:A.1 = Junction:D.1;  
 Mux:A.2 = Junction.2;  //_GUI 121,94
 DynamicOut:E.0 = Input:I.0;  
 Convert:B.0 = Junction:B.2;  //_GUI 140,76
 Convert:B.1 = DynamicOut:C.0;  //_GUI 115,79, 115,76
 Convert:C.0 = Junction:C.1;  
 Convert:C.1 = Mux:A.0;  
 IsVariant:A.0 = Input:C.0;  
 Junction.0 = Input:D.0;  //_GUI 121,40
 Junction:A.0 = Input:A.0;  //_GUI 137,11
 Junction:B.0 = Input.0;  //_GUI 140,8
 OR:A.0 = Convert:B.0;  //_GUI 154,69
 OR:A.1 = Convert:C.0;  //_GUI 159,86
 OR:B.0 = OR.0;  
 OR:B.1 = OR:A.0;  //_GUI 179,30, 179,70
 Junction:C.0 = Junction:A.2;  
 Junction:D.0 = DynamicOut:D.0;  
 BitA_Gt_BitB.0 = GetPrecisionAmount:A.0;  
 BitA_Gt_BitB.1 = GetPrecisionAmount.0;  //_GUI 169,108
 Output:G.0 = BitA_Gt_BitB.0;  
 GetPrecisionAmount.0 = Junction:D.2;  //_GUI 117,108
 GetPrecisionAmount:A.0 = Junction:C.2;  //_GUI 137,99
}

Object ( Bit OFL, Variant Real, Variant Imag
    , Variant "Real*2", Variant "Imag*2") $BuildGFTConstants( Signed DataTypeReal, Signed DataTypeImag
    , Variant Index, Variant Size, Bit Invert) 
//_Attributes TreeGroup=CoreLib-DSP\Compile-Time,Documentation="signed"
{
 //_ Object Prototypes
 Object ( Signed DataTypeReal) Input;  //_GUI 68,7
 Object ( Signed DataTypeImag) Input:A;  //_GUI 68,10
 Object ( Variant Index) Input:B;  //_GUI 69,18
 Object ( Variant Size) Input:C;  //_GUI 69,30
 Object ( Bit Invert) Input:D;  //_GUI 69,39
 //_Attributes Constant="0"
 Object Output( Bit OFL) ;  //_GUI 222,27
 Object Output:A( Variant Real) ;  //_GUI 210,47
 Object Output:B( Variant Imag) ;  //_GUI 210,57
 Object Output:C( Variant "Real*2") ;  //_GUI 210,78
 Object Output:D( Variant "Imag*2") ;  //_GUI 210,88
 Object Output:E( Bit Trap) ;  //_GUI 86,30
 //_Attributes Trap="Variant in BuildConstants: we don't like this."
 Object ( Variant Out1) DynamicOut( Variant In1) ;  //_GUI 97,42
 Object ( Variant Out1) DynamicOut:A( Variant In1) ;  //_GUI 97,57
 Object ( Double In) Input:E;  //_GUI 69,52
 //_Attributes Constant="*\"(3.1415926535897932384626433832795,2.0,*,##N2.B,1,-,*,##N3.B,/,s)\""
 Object ( Variant Out1) DynamicOut:B( Variant In1) ;  //_GUI 81,50
 Object ( Double In) Input:F;  //_GUI 85,44
 //_Attributes Constant="*\"(3.1415926535897932384626433832795,2.0,*,##N2.B,1,-,*,##N3.B,/,c)\""
 Object ( Bit OFL, Variant Out1) Convert( Variant Type
    , Variant Data) ;  //_GUI 169,43
 Object ( Bit OFL, Variant Out1) Convert:A( Variant Type
    , Variant Data) ;  //_GUI 169,53
 Object ( Bit Out1) IsVariant( Variant Type) ;  //_GUI 83,16
 Object ( Bit Out) OR( Bit In1, Bit In2) ;  //_GUI 190,24
 Object ( Double In) Input:G;  //_GUI 85,59
 //_Attributes Constant="*\"(3.1415926535897932384626433832795,2.0,*,##N2.B,1,-,*,##N3.B,/,s,n)\""
 Object Output:F( Bit Trap) ;  //_GUI 94,18
 //_Attributes Trap="Variant in BuildConstants: we don't like this."
 Object ( Double In) Input:H;  //_GUI 85,90
 //_Attributes Constant="*\"(3.1415926535897932384626433832795,2.0,*,##N2.B,1,-,*,##N3.B,/,s,n,2,*)\""
 Object ( Variant Out1) DynamicOut:C( Variant In1) ;  //_GUI 97,73
 Object ( Variant Out1) DynamicOut:D( Variant In1) ;  //_GUI 97,88
 Object ( Double In) Input:I;  //_GUI 69,83
 //_Attributes Constant="*\"(3.1415926535897932384626433832795,2.0,*,##N2.B,1,-,*,##N3.B,/,s,2,*)\""
 Object ( Variant Out1) DynamicOut:E( Variant In1) ;  //_GUI 81,81
 Object ( Double In) Input:J;  //_GUI 85,75
 //_Attributes Constant="*\"(3.1415926535897932384626433832795,2.0,*,##N2.B,1,-,*,##N3.B,/,c,2,*)\""
 Object ( Bit OFL, Variant Out1) Convert:B( Variant Type
    , Variant Data) ;  //_GUI 169,74
 Object ( Bit OFL, Variant Out1) Convert:C( Variant Type
    , Variant Data) ;  //_GUI 169,84
 Object ( Bit Out1) IsVariant:A( Variant Type) ;  //_GUI 75,28
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction
    ( Bit In1) ;  //_GUI 120,62
 Object ( Signed Out1, Signed Out2, Signed Out3) Junction:A
    ( Signed In1) ;  //_GUI 161,54
 Object ( Signed Out1, Signed Out2, Signed Out3) Junction:B
    ( Signed In1) ;  //_GUI 164,44
 Object ( Bit Out) OR:A( Bit In1, Bit In2) ;  //_GUI 184,67
 Object ( Bit Out) OR:B( Bit In1, Bit In2) ;  //_GUI 207,25
 Object ( Signed Out1, Signed Out2, Signed Out3) Junction:C
    ( Signed In1) ;  //_GUI 161,85
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:D
    ( Variant In0) ;  //_GUI 116,90
 Object ( Bit Out1) BitA_Gt_BitB( Variant A, Variant B) ;  //_GUI 194,97
 Object Output:G( Bit Trap) ;  //_GUI 210,99
 //_Attributes Trap="Accuracy exceeded."
 Object Text;  //_GUI 59,99,the 53 bits of accuracy in the double dataset is better than the 32 bits of accuracy available in the standard fixed point types
 Object ( Variant Out1) GetPrecisionAmount( Variant In1) ;  //_GUI 166,105
 Object ( Variant Out1) GetPrecisionAmount:A( Variant In1) ;  //_GUI 166,96
 Object ( Variant O) $Mux( Variant A, Variant B
    , Bit S) ;  //_GUI 125,55
 //_Attributes Documentation="Variant"
 Object ( Variant O) $Mux:A( Variant A, Variant B
    , Bit S) ;  //_GUI 125,86
 //_Attributes Documentation="Variant"
 Object ( Signed Out1, Signed Out2, Signed Out3) Junction:E
    ( Signed In0) ;  //_GUI 115,7
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:F
    ( Variant In1) ;  //_GUI 140,57
 Object ( Variant C, Variant Out2) SHL( Variant In1
    , Variant C) ;  //_GUI 146,53
 //_Attributes Documentation="Bit"
 Object ( Variant C, Variant Out2) SHL:A( Variant In1
    , Variant C) ;  //_GUI 145,84
 //_Attributes Documentation="Bit"
 Object ( Variant C, Variant Out2) SHL:B( Variant In1
    , Variant C) ;  //_GUI 146,43
 //_Attributes Documentation="Bit"
 Object ( Variant Out1, Variant Out1) ExposeBIN( Variant In1) ;  //_GUI 120,27
 //_Attributes Documentation="Bit"
 Object ( Variant Out1, Variant Out1) ExposeBIN:A( Variant In1) ;  //_GUI 123,15
 //_Attributes Documentation="Bit"
 Object ( Signed Out1, Signed Out2, Signed Out3) Junction:G
    ( Signed In0) ;  //_GUI 119,10
 Object ( Variant C, Variant Out2) SHL:C( Variant In1
    , Variant C) ;  //_GUI 145,74
 //_Attributes Documentation="Bit"
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:H
    ( Variant In0) ;  //_GUI 137,47

 // Behavior Topology
 Output.0 = OR:B.0;  
 Output:A.0 = Convert.1;  
 Output:B.0 = Convert:A.1;  
 Output:C.0 = Convert:B.1;  
 Output:D.0 = Convert:C.1;  
 Output:E.0 = IsVariant:A.0;  
 DynamicOut.0 = Input:F.0;  
 DynamicOut:A.0 = Input:G.0;  
 DynamicOut:B.0 = Input:E.0;  
 Convert.0 = Junction:B.1;  
 Convert.1 = SHL:B.1;  
 Convert:A.0 = Junction:A.1;  
 Convert:A.1 = SHL.1;  
 IsVariant.0 = Input:B.0;  
 OR.0 = Convert.0;  //_GUI 179,26
 OR.1 = Convert:A.0;  //_GUI 184,29, 184,55
 Output:F.0 = IsVariant.0;  
 DynamicOut:C.0 = Input:J.0;  
 DynamicOut:D.0 = Input:H.0;  
 DynamicOut:E.0 = Input:I.0;  
 Convert:B.0 = Junction:B.2;  //_GUI 165,76
 Convert:B.1 = SHL:C.1;  
 Convert:C.0 = Junction:C.1;  
 Convert:C.1 = SHL:A.1;  
 IsVariant:A.0 = Input:C.0;  
 Junction.0 = Input:D.0;  //_GUI 121,40
 Junction:A.0 = Junction:G.1;  //_GUI 162,11
 Junction:B.0 = Junction:E.1;  //_GUI 165,8
 OR:A.0 = Convert:B.0;  //_GUI 179,69
 OR:A.1 = Convert:C.0;  //_GUI 184,86
 OR:B.0 = OR.0;  
 OR:B.1 = OR:A.0;  //_GUI 204,30, 204,70
 Junction:C.0 = Junction:A.2;  
 Junction:D.0 = DynamicOut:D.0;  
 BitA_Gt_BitB.0 = GetPrecisionAmount:A.0;  
 BitA_Gt_BitB.1 = GetPrecisionAmount.0;  //_GUI 194,108
 Output:G.0 = BitA_Gt_BitB.0;  
 GetPrecisionAmount.0 = Junction:D.2;  //_GUI 117,108
 GetPrecisionAmount:A.0 = Junction:C.2;  //_GUI 162,99
 $Mux.0 = DynamicOut:B.0;  //_GUI 117,57, 117,53
 $Mux.1 = DynamicOut:A.0;  
 $Mux.2 = Junction.1;  
 $Mux:A.0 = DynamicOut:E.0;  //_GUI 117,88, 117,84
 $Mux:A.1 = Junction:D.1;  
 $Mux:A.2 = Junction.2;  //_GUI 121,94
 Junction:E.0 = Input.0;  
 Junction:F.0 = ExposeBIN:A.1;  //_GUI 141,20
 SHL.0 = $Mux.0;  //_GUI 135,55
 SHL.1 = Junction:F.1;  
 SHL:A.0 = $Mux:A.0;  //_GUI 135,86
 SHL:A.1 = Junction:F.2;  //_GUI 141,89
 SHL:B.0 = DynamicOut.0;  
 SHL:B.1 = Junction:H.1;  
 ExposeBIN.0 = Junction:E.2;  //_GUI 116,30
 ExposeBIN:A.0 = Junction:G.2;  //_GUI 120,18
 Junction:G.0 = Input:A.0;  
 SHL:C.0 = DynamicOut:C.0;  
 SHL:C.1 = Junction:H.2;  //_GUI 138,79
 Junction:H.0 = ExposeBIN.1;  //_GUI 132,48
}

Object ( Bit OFL, Complex D, Bit ClkG
    , Bit AClr, Bit Done, Bit Busy) GFT_1D( Complex D
    , Variant k, Variant N, Bit Invert, Bit ClkG
    , Bit AClrG, Bit Go, Bit Wait) 
//_Attributes TreeGroup=CoreLib-DSP
{
 //_ Object Prototypes
 Object ( Complex D) Input;  //_GUI 91,11
 Object ( Variant k) Input:A;  //_GUI 91,16
 Object ( Variant N) Input:B;  //_GUI 91,19
 Object ( Bit Invert) Input:C;  //_GUI 91,22
 //_Attributes Constant="0"
 Object ( Bit ClkG) Input:D;  //_GUI 81,96
 //_Attributes Resource=*Global
 Object ( Bit AClrG) Input:E;  //_GUI 81,99
 //_Attributes Resource=*Global
 Object ( Bit Go) Input:F;  //_GUI 81,105
 Object ( Bit Wait) Input:G;  //_GUI 98,150
 //_Attributes Constant="0"
 Object Output( Bit OFL) ;  //_GUI 517,6
 Object Output:A( Complex D) ;  //_GUI 517,25
 Object Output:B( Bit ClkG) ;  //_GUI 517,53
 Object Output:C( Bit AClr) ;  //_GUI 517,56
 Object Output:D( Bit Done) ;  //_GUI 517,81
 Object Output:E( Bit Busy) ;  //_GUI 196,162
 Object ( Variant Real, Variant Imag) ExposeComplex( Complex In1) ;  //_GUI 115,9
 Object ( Variant Real, Variant Imag) ExposeComplex:A( Complex In1) ;  //_GUI 129,82
 Object ( Complex Out1, Complex Out2, Complex Out3) Junction
    ( Complex In0) ;  //_GUI 99,11
 Object ( Bit OFL, Variant Real, Variant Imag
    , Variant "Real*2", Variant "Imag*2") $BuildGFTConstants( Variant DataTypeReal, Variant DataTypeImag
    , Variant Index, Variant Size, Bit Invert) ;  //_GUI 148,9
 //_Attributes Documentation="floating"
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:A
    ( Bit In0) ;  //_GUI 119,96
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:B
    ( Bit In0) ;  //_GUI 115,99
 Object ( Variant Out1) BitLength( Variant Type) ;  //_GUI 117,39
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:C
    ( Variant In0) ;  //_GUI 103,19
 Object ( Bit Out) INVERT( Bit In1) ;  //_GUI 160,42
 Object ( Variant Out1, Variant Out2) Symmetrize( Variant In1
    , Variant In2) ;  //_GUI 133,9
 //_Attributes Documentation="Bit/Variant"
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:D
    ( Bit In3) ;  //_GUI 303,53
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:E
    ( Bit In3) ;  //_GUI 306,56
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:F
    ( Bit In0) ;  //_GUI 298,34
 Object ( List Out1, List Out2, List Out3) Junction:G
    ( List In1) ;  //_GUI 292,22
 Object ( List Out) ListOut( Variant In1, Variant In2) ;  //_GUI 171,12
 Object Text;  //_GUI 327,16,vr1*(vc, vs)
 Object Text;  //_GUI 324,43,vi1*(vc, vs)
 Object ( Bit OFL, Variant R, Variant PipeLen
    , Bit ClkG, Bit AClr, Bit Done, Bit Busy) Add_Pipe
    ( Variant A, Variant B, Bit Add, Bit ClkG
    , Bit AClr, Bit Go, Bit Wait) ;  //_GUI 379,20
 Object ( Variant Out1, Variant Out2) ListIn( List In) ;  //_GUI 353,20
 Object ( Variant Out1, Variant Out2) ListIn:A( List In) ;  //_GUI 343,45
 Object ( Bit OFL, Variant R, Variant PipeLen
    , Bit ClkG, Bit AClr, Bit Done, Bit Busy) Add_Pipe:A
    ( Variant A, Variant B, Bit Add, Bit ClkG
    , Bit AClr, Bit Go, Bit Wait) ;  //_GUI 379,43
 Object ( Bit Sub) Input:H;  //_GUI 370,50
 //_Attributes Constant="*0"
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:H
    ( Bit In0) ;  //_GUI 375,50
 Object ( Complex Out1) CollectComplex( Variant Real, Variant Imag) ;  //_GUI 467,23
 Object ( Bit OFL, Variant R, Variant PipeLen
    , Bit ClkG, Bit AClr, Bit Done, Bit Busy) Add_Pipe:B
    ( Variant A, Variant B, Bit Add, Bit ClkG
    , Bit AClr, Bit Go, Bit Wait) ;  //_GUI 432,20
 Object ( Bit OFL, Variant R, Variant PipeLen
    , Bit ClkG, Bit AClr, Bit Done, Bit Busy) Add_Pipe:C
    ( Variant A, Variant B, Bit Add, Bit ClkG
    , Bit AClr, Bit Go, Bit Wait) ;  //_GUI 432,43
 Object ( Bit Sub) Input:I;  //_GUI 418,50
 //_Attributes Constant="*0"
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:I
    ( Bit In0) ;  //_GUI 424,50
 Object ( Bit OFL, Variant Out1) Convert( Variant Type
    , Variant Data) ;  //_GUI 406,17
 Object ( Bit OFL, Variant Out1) Convert:A( Variant Type
    , Variant Data) ;  //_GUI 410,40
 Object ( Bit Out) OR( Bit In1, Bit In2) ;  //_GUI 430,3
 Object Text;  //_GUI 1,23,//Goertzel DFT:void gft(int N, COMPLEX *x, COMPLEX *X, bool invert = false){	//W at N = exp(-i*2pi/N);	for(int k = 0; k < N; k++){		//the identity sin(-x) = -sin(x), etc., allow for the invert to have little impact		double km = (invert)?(double)-k:(double)k;		//these constants would normally be calculated externally to the function call		double vr1 = 0, vr2 = 0, vrt = 0, 			vi1 = 0, vi2 = 0, vit = 0,			vc = cos(2.0*M_PI*km/N), vc2 = vc*2.0,			vs = sin(2.0*M_PI*km/N), vs2 = vs*2.0;		for(int n = 0; n < N; n++){			vrt = vr1;			vr1 = x[n].real() + vc2*vr1 - vr2;			vr2 = vrt;		}		for(int n = 0; n < N; n++){			vit = vi1;			vi1 = x[n].imag() + vc2*vi1 - vi2;			vi2 = vit;		}		//vi1 = 0 in case where no complex values were passed in		X[k] = COMPLEX(vc*vr1 - vr2 - vs*vi1, vc*vi1 - vi2 + vs*vr1); 		if(invert) X[k] /= N;	}	//return value is in X and x is unaltered}
 Object ( Variant P, Bit ClkG, Bit AClr
    , Bit Done, Variant Busy) Mul_MinHW( Variant A, Variant B
    , Bit ClkG, Bit AClr, Variant Go, Bit Wait) ;  //_GUI 319,46
 Object ( Variant P, Bit ClkG, Bit AClr
    , Bit Done, Variant Busy) Mul_MinHW:A( Variant A, Variant B
    , Bit ClkG, Bit AClr, Variant Go, Bit Wait) ;  //_GUI 319,21
 Object Text;  //_GUI 327,4,This is the post processing section
 Object Text;  //_GUI 147,0,Build the W constants for whatever the current k is we're processing
 Object Text;  //_GUI 89,3,k and N are datasets representing the current
 Object Text;  //_GUI 163,140,FIR filter for imag
 Object Text;  //_GUI 138,35,iterations = taps
 Object Output:F( Bit Trap) ;  //_GUI 188,10
 //_Attributes Trap="Insufficient range for constants."
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:J
    ( Bit In0) ;  //_GUI 111,105
 Object ( Variant Data, Bit ClkG, Bit AClr
    , Bit Done, Variant Busy) SyncRegClr( Variant Data, Bit ClkG
    , Bit AClr, Variant Go, Bit Wait) ;  //_GUI 250,95
 //_Attributes Documentation="List/List"
 Object ( List Out) ListOut:A( Variant In1, Variant In2) ;  //_GUI 208,120
 Object ( Variant Out1, Variant Out2) ListIn:B( List In) ;  //_GUI 250,120
 Object ( List Out1) PackLSB( Variant In1, Variant In2
    , Variant In3) ;  //_GUI 180,89
 Object ( List Out1) PackLSB:A( Variant In1, Variant In2
    , Variant In3) ;  //_GUI 180,114
 Object ( List Out) ListOut:B( Variant In1, Variant In2) ;  //_GUI 194,90
 Object ( Bit Out) OR:A( Bit In1, Bit In2) ;  //_GUI 170,156
 Object ( Variant Out1, Variant Out2) ListIn:C( List In) ;  //_GUI 271,87
 Object ( Variant Out1, Variant Out2, Variant Out3) UnPackLSB
    ( Variant In1) ;  //_GUI 285,71
 Object ( Variant Out1, Variant Out2, Variant Out3) UnPackLSB:A
    ( Variant In1) ;  //_GUI 285,89
 Object ( Bit Out) OR:B( Bit In1, Bit In2) ;  //_GUI 322,74
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:K
    ( Variant In3) ;  //_GUI 400,24
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:L
    ( Variant In3) ;  //_GUI 403,47
 Object ( Bit Out) OR:C( Bit In1, Bit In2) ;  //_GUI 180,160
 Object ( Bit Out) OR:D( Bit In1, Bit In2) ;  //_GUI 459,4
 Object ( List Out) ListOut:C( Variant In1, Variant In2) ;  //_GUI 469,44
 Object ( Variant Out1) AND( Variant In1, Variant In2) ;  //_GUI 219,106
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:M
    ( Bit In3) ;  //_GUI 119,59
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:N
    ( Bit In3) ;  //_GUI 115,62
 Object Text;  //_GUI 220,37,State of capturing final data piece
 Object ( Bit GoOne, Bit B, Bit Going
    , Bit D) GDBW_ADone( Bit ClkG, Bit G, Bit W
    , Bit ADoneIn, Bit AClr) ;  //_GUI 221,49
 Object ( Bit GoOne, Bit B, Bit Going
    , Bit D) GDBW_ADone:A( Bit ClkG, Bit G, Bit W
    , Bit ADoneIn, Bit AClr) ;  //_GUI 248,69
 Object Text;  //_GUI 247,61,State of doing the post processing
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:O
    ( Bit In0) ;  //_GUI 206,59
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:P
    ( Bit In0) ;  //_GUI 202,62
 Object ( Bit Done, Variant Busy) SyncClr( Bit ClkG
    , Bit AClr, Variant Go, Bit Wait) ;  //_GUI 486,39
 Object Text;  //_GUI 495,30,we lose an extra clock cycle here: o well. It's likely that there are thousands of clock cycles between each data piece anyhow
 Object Text;  //_GUI 164,85,FIR filter for real
 Object ( Bit Out) OR:E( Bit In1, Bit In2) ;  //_GUI 253,49
 Object Text;  //_GUI 272,106,register to hold captured data
 Object ( Variant "Dat - 1", Bit OFL, Variant Dat
    , Bit ClkG, Bit AClr, Bit Done, Bit Busy) FIR_Accum_MinHW
    ( Variant Perturb, Variant Tap, Bit ClkG, Bit AClrG
    , Bit Go, Bit Wait) ;  //_GUI 157,114
 Object ( Variant "Dat - 1", Bit OFL, Variant Dat
    , Bit ClkG, Bit AClr, Bit Done, Bit Busy) FIR_Accum_MinHW:A
    ( Variant Perturb, Variant Tap, Bit ClkG, Bit AClrG
    , Bit Go, Bit Wait) ;  //_GUI 157,89
 Object ( Variant Iteration, Bit FirstGoBusy, Bit Active
    , Bit Done, Bit Busy) GoForN_Down( Variant Iterations, Bit IsFirstGo
    , Bit ClkG, Bit AClr, Bit Go, Bit Wait) ;  //_GUI 137,40

 // Behavior Topology
 Output.0 = OR:D.0;  
 Output:A.0 = CollectComplex.0;  
 Output:B.0 = Add_Pipe:C.3;  
 Output:C.0 = Add_Pipe:C.4;  
 Output:D.0 = GDBW_ADone:A.3;  //_GUI 272,82, 272,80
 Output:E.0 = OR:C.0;  
 ExposeComplex.0 = Junction.1;  
 ExposeComplex:A.0 = Junction.2;  //_GUI 100,85
 Junction.0 = Input.0;  
 $BuildGFTConstants.0 = Symmetrize.0;  
 $BuildGFTConstants.1 = Symmetrize.1;  
 $BuildGFTConstants.2 = Input:A.0;  
 $BuildGFTConstants.3 = Junction:C.1;  
 $BuildGFTConstants.4 = Input:C.0;  
 Junction:A.0 = Input:D.0;  
 Junction:B.0 = Input:E.0;  
 BitLength.0 = Junction:C.2;  //_GUI 104,42
 Junction:C.0 = Input:B.0;  
 INVERT.0 = GoForN_Down.1;  
 Symmetrize.0 = ExposeComplex.0;  
 Symmetrize.1 = ExposeComplex.1;  
 Junction:D.0 = SyncRegClr.1;  //_GUI 304,100
 Junction:E.0 = SyncRegClr.2;  //_GUI 307,103
 Junction:F.0 = GDBW_ADone:A.0;  //_GUI 272,35, 272,71
 Junction:G.0 = ListOut.0;  //_GUI 293,15
 ListOut.0 = $BuildGFTConstants.2;  
 ListOut.1 = $BuildGFTConstants.1;  
 Add_Pipe.0 = ListIn.1;  
 Add_Pipe.1 = ListIn:A.0;  //_GUI 367,25, 367,50
 Add_Pipe.2 = Junction:H.0;  //_GUI 376,28
 Add_Pipe.3 = Mul_MinHW:A.1;  //_GUI 349,31, 349,26
 Add_Pipe.4 = Mul_MinHW:A.2;  //_GUI 346,34, 346,29
 Add_Pipe.5 = Mul_MinHW:A.3;  //_GUI 342,37, 342,35
 ListIn.0 = Mul_MinHW:A.0;  
 ListIn:A.0 = Mul_MinHW.0;  
 Add_Pipe:A.0 = ListIn.0;  //_GUI 364,45
 Add_Pipe:A.1 = ListIn:A.1;  //_GUI 354,48
 Add_Pipe:A.2 = Junction:H.1;  
 Add_Pipe:A.3 = Mul_MinHW.1;  //_GUI 341,54, 341,51
 Add_Pipe:A.4 = Mul_MinHW.2;  //_GUI 338,57
 Add_Pipe:A.5 = Mul_MinHW.3;  
 Junction:H.0 = Input:H.0;  
 CollectComplex.0 = Add_Pipe:B.1;  
 CollectComplex.1 = Add_Pipe:C.1;  //_GUI 461,28, 461,48
 Add_Pipe:B.0 = Convert.1;  
 Add_Pipe:B.1 = Junction:K.2;  
 Add_Pipe:B.2 = Junction:I.0;  //_GUI 425,28
 Add_Pipe:B.3 = Add_Pipe.3;  
 Add_Pipe:B.4 = Add_Pipe.4;  
 Add_Pipe:B.5 = Add_Pipe.5;  
 Add_Pipe:C.0 = Convert:A.1;  
 Add_Pipe:C.1 = Junction:L.2;  
 Add_Pipe:C.2 = Junction:I.1;  
 Add_Pipe:C.3 = Add_Pipe:A.3;  
 Add_Pipe:C.4 = Add_Pipe:A.4;  
 Add_Pipe:C.5 = Add_Pipe:A.5;  
 Junction:I.0 = Input:I.0;  
 Convert.0 = Junction:K.1;  //_GUI 401,19
 Convert.1 = Add_Pipe.1;  //_GUI 394,22, 394,25
 Convert:A.0 = Junction:L.1;  //_GUI 404,42
 Convert:A.1 = Add_Pipe:A.1;  //_GUI 398,45, 398,48
 OR.0 = Convert.0;  //_GUI 416,5
 OR.1 = Convert:A.0;  //_GUI 420,8
 Mul_MinHW.0 = Junction:G.2;  //_GUI 293,48
 Mul_MinHW.1 = UnPackLSB:A.2;  //_GUI 316,51, 316,97
 Mul_MinHW.2 = Junction:D.2;  
 Mul_MinHW.3 = Junction:E.2;  
 Mul_MinHW.4 = Junction:F.2;  //_GUI 299,60
 Mul_MinHW:A.0 = Junction:G.1;  
 Mul_MinHW:A.1 = UnPackLSB.2;  //_GUI 313,26, 313,79
 Mul_MinHW:A.2 = Junction:D.1;  //_GUI 304,29
 Mul_MinHW:A.3 = Junction:E.1;  //_GUI 307,32
 Mul_MinHW:A.4 = Junction:F.1;  
 Output:F.0 = $BuildGFTConstants.0;  
 Junction:J.0 = Input:F.0;  
 SyncRegClr.0 = ListOut:B.0;  //_GUI 244,97, 244,93
 SyncRegClr.1 = FIR_Accum_MinHW:A.3;  
 SyncRegClr.2 = FIR_Accum_MinHW:A.4;  
 SyncRegClr.3 = AND.0;  //_GUI 244,106, 244,109
 SyncRegClr.4 = GDBW_ADone:A.2;  //_GUI 268,109, 268,77
 ListOut:A.0 = FIR_Accum_MinHW.5;  //_GUI 208,131
 ListOut:A.1 = FIR_Accum_MinHW:A.5;  //_GUI 208,106
 ListIn:B.0 = SyncRegClr.4;  
 PackLSB.0 = FIR_Accum_MinHW:A.0;  
 PackLSB.1 = FIR_Accum_MinHW:A.1;  
 PackLSB.2 = FIR_Accum_MinHW:A.2;  
 PackLSB:A.0 = FIR_Accum_MinHW.0;  
 PackLSB:A.1 = FIR_Accum_MinHW.1;  
 PackLSB:A.2 = FIR_Accum_MinHW.2;  
 ListOut:B.0 = PackLSB:A.0;  //_GUI 194,117
 ListOut:B.1 = PackLSB.0;  
 OR:A.0 = FIR_Accum_MinHW.6;  //_GUI 140,158, 140,134
 OR:A.1 = FIR_Accum_MinHW:A.6;  //_GUI 137,161, 137,109
 ListIn:C.0 = SyncRegClr.0;  //_GUI 271,97
 UnPackLSB.0 = ListIn:C.1;  //_GUI 282,74
 UnPackLSB:A.0 = ListIn:C.0;  
 OR:B.0 = UnPackLSB.1;  
 OR:B.1 = UnPackLSB:A.1;  //_GUI 322,94
 Junction:K.0 = UnPackLSB.0;  //_GUI 401,73
 Junction:L.0 = UnPackLSB:A.0;  //_GUI 404,91
 OR:C.0 = OR:A.0;  
 OR:C.1 = GoForN_Down.4;  //_GUI 125,165, 125,57
 OR:D.0 = OR.0;  
 OR:D.1 = OR:B.0;  //_GUI 455,9, 455,77
 ListOut:C.0 = Add_Pipe:C.5;  //_GUI 469,60
 ListOut:C.1 = Add_Pipe:B.5;  //_GUI 469,37
 AND.0 = OR:E.0;  //_GUI 219,87, 241,87, 241,60, 263,60
 AND.1 = ListOut:A.0;  
 Junction:M.0 = Junction:A.0;  
 Junction:N.0 = Junction:B.0;  
 GDBW_ADone.0 = Junction:O.0;  //_GUI 207,51
 GDBW_ADone.1 = GoForN_Down.3;  
 GDBW_ADone.2 = GDBW_ADone:A.1;  //_GUI 217,57, 217,67, 268,67, 268,74
 GDBW_ADone.3 = SyncRegClr.3;  //_GUI 214,60, 214,90, 265,90, 265,106
 GDBW_ADone.4 = Junction:P.1;  
 GDBW_ADone:A.0 = Junction:O.2;  //_GUI 207,71
 GDBW_ADone:A.1 = GDBW_ADone.3;  //_GUI 237,74
 GDBW_ADone:A.2 = Input:G.0;  //_GUI 234,77, 234,151
 GDBW_ADone:A.3 = SyncClr.0;  //_GUI 243,80, 243,86, 503,86, 503,47
 GDBW_ADone:A.4 = Junction:P.2;  //_GUI 203,83
 Junction:O.0 = Junction:M.2;  
 Junction:P.0 = Junction:N.2;  
 SyncClr.0 = Add_Pipe:B.3;  //_GUI 486,31
 SyncClr.1 = Add_Pipe:B.4;  //_GUI 483,44, 483,34
 SyncClr.2 = ListOut:C.0;  
 OR:E.0 = GDBW_ADone.0;  
 OR:E.1 = GDBW_ADone.2;  //_GUI 248,54, 248,57
 FIR_Accum_MinHW.0 = $BuildGFTConstants.4;  //_GUI 152,116, 152,76, 185,76, 185,23
 FIR_Accum_MinHW.1 = ExposeComplex:A.1;  //_GUI 145,119
 FIR_Accum_MinHW.2 = Junction:A.2;  //_GUI 120,122
 FIR_Accum_MinHW.3 = Junction:B.2;  //_GUI 116,125
 FIR_Accum_MinHW.4 = Junction:J.2;  //_GUI 112,131
 FIR_Accum_MinHW.5 = ListIn:B.0;  //_GUI 261,134
 FIR_Accum_MinHW:A.0 = $BuildGFTConstants.3;  //_GUI 157,80, 189,80, 189,20
 FIR_Accum_MinHW:A.1 = ExposeComplex:A.0;  //_GUI 149,94, 149,84
 FIR_Accum_MinHW:A.2 = Junction:A.1;  
 FIR_Accum_MinHW:A.3 = Junction:B.1;  
 FIR_Accum_MinHW:A.4 = Junction:J.1;  
 FIR_Accum_MinHW:A.5 = ListIn:B.1;  //_GUI 203,109, 203,115, 261,115
 GoForN_Down.0 = BitLength.0;  
 GoForN_Down.1 = INVERT.0;  //_GUI 131,45, 131,33, 170,33
 GoForN_Down.2 = Junction:M.1;  //_GUI 120,48
 GoForN_Down.3 = Junction:N.1;  //_GUI 116,51
 GoForN_Down.4 = Junction:J.0;  //_GUI 112,54
 GoForN_Down.5 = GDBW_ADone.1;  //_GUI 203,57, 203,45, 241,45, 241,54
}

Object ( Variant "Dat - 1", Bit OFL, Variant Dat
    , Bit ClkG, Bit AClr, Bit Done, Bit Busy) FIR_Accum
    ( Variant Perturb, Variant Tap, Bit ClkG, Bit AClrG
    , Bit Go, Bit Wait) 
//_Attributes TreeGroup=CoreLib-DSP
{
 //_ Object Prototypes
 Object ( Variant Perturb) Input;  //_GUI 11,27
 Object ( Variant Tap) Input:A;  //_GUI 11,31
 Object ( Bit ClkG) Input:B;  //_GUI 11,36
 //_Attributes Resource=*Global
 Object ( Bit AClrG) Input:C;  //_GUI 11,39
 //_Attributes Resource=*Global
 Object ( Bit Go) Input:D;  //_GUI 11,50
 Object ( Bit Wait) Input:E;  //_GUI 11,53
 //_Attributes Constant="0"
 Object Output( Variant "Dat - 1") ;  //_GUI 229,4
 Object Output:A( Bit OFL) ;  //_GUI 228,24
 Object Output:B( Variant Dat) ;  //_GUI 228,33
 Object Output:C( Bit ClkG) ;  //_GUI 228,39
 Object Output:D( Bit AClr) ;  //_GUI 228,42
 Object Output:E( Bit Done) ;  //_GUI 46,75
 Object Output:F( Bit Busy) ;  //_GUI 44,80
 Object ( Bit Sub) Input:F;  //_GUI 114,61
 //_Attributes Constant="*0"
 Object ( Variant Out1) Cast( Variant Type, Variant Data) ;  //_GUI 57,59
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction
    ( Variant In0) ;  //_GUI 79,61
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:A
    ( Bit In0) ;  //_GUI 75,42
 Object ( Bit OFL, Variant R, Variant PipeLen
    , Bit ClkG, Bit AClr, Bit Done, Bit Busy) Add_Pipe
    ( Variant A, Variant B, Bit Add, Bit ClkG
    , Bit AClr, Bit Go, Bit Wait) ;  //_GUI 118,54
 Object ( Variant R, Variant PipeLen, Bit ClkG
    , Bit AClr, Bit Done, Bit Busy) Mul_Pipe( Variant A
    , Variant B, Bit ClkG, Bit AClr, Bit Go
    , Bit Wait) ;  //_GUI 113,29
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:B
    ( Bit In0) ;  //_GUI 72,39
 Object ( Bit OFL, Variant Out1) Convert( Variant Type
    , Variant Data) ;  //_GUI 158,26
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:C
    ( Bit In0) ;  //_GUI 102,42
 Object ( Variant Q, Bit ClkG, Bit AClr
    , Bit Done, Bit Busy) RegOnGo( Variant D, Bit ClkG
    , Bit AClr, Bit Go, Bit Wait) ;  //_GUI 83,60
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:D
    ( Variant In0) ;  //_GUI 216,33
 Object ( Bit GoOne, Bit B, Bit Going
    , Bit D) GDBW_ADone( Bit ClkG, Bit G, Bit W
    , Bit ADoneIn, Bit AClr) ;  //_GUI 26,46
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:E
    ( Variant In1) ;  //_GUI 56,55
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:F
    ( Bit In0) ;  //_GUI 22,39
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:G
    ( Bit In0) ;  //_GUI 19,36
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:H
    ( Variant In3) ;  //_GUI 98,58
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:I
    ( Bit In0) ;  //_GUI 69,36
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:J
    ( Variant In3) ;  //_GUI 154,33
 Object ( Bit Out) OR( Bit In1, Bit In2) ;  //_GUI 168,13
 Object ( Bit Out) OR:A( Bit In1, Bit In2) ;  //_GUI 213,22
 Object Text;  //_GUI 102,9,We are running a tight loop here that only allows one multiply at any given time. The pipelined support will go unused. It does, though, allow us to hold state on the OFL signals and to avoid the spring buffers in the Add operator.
 Object ( Bit Out1) BitA_Lt_BitB( Variant A, Variant B) ;  //_GUI 135,46
 Object ( Bit Out) $Select( Variant "#0", Variant "#1"
    , Bit S) ;  //_GUI 167,41
 Object ( Bit OFL, Variant R, Variant PipeLen
    , Bit ClkG, Bit AClr, Bit Done, Bit Busy) Add_Pipe:A
    ( Variant A, Variant B, Bit Add, Bit ClkG
    , Bit AClr, Bit Go, Bit Wait) ;  //_GUI 194,29
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:K
    ( Bit In0) ;  //_GUI 182,36
 Object Text;  //_GUI 181,9,reg for timespec since we have time
 Object ( Variant Q) RegClr( Variant D, Bit ClkG
    , Bit EN, Bit CLR) ;  //_GUI 194,14
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:L
    ( Bit In0) ;  //_GUI 179,39

 // Behavior Topology
 Output.0 = Junction:H.1;  //_GUI 99,5
 Output:A.0 = OR:A.0;  
 Output:B.0 = Junction:D.1;  
 Output:C.0 = Add_Pipe:A.3;  
 Output:D.0 = Add_Pipe:A.4;  
 Output:E.0 = GDBW_ADone.3;  //_GUI 46,57
 Output:F.0 = GDBW_ADone.1;  //_GUI 44,51
 Cast.0 = Junction:E.2;  
 Cast.1 = Junction:D.2;  //_GUI 57,80, 217,80
 Junction.0 = Cast.0;  
 Junction:A.0 = GDBW_ADone.0;  //_GUI 42,43
 Add_Pipe.0 = Junction:E.1;  
 Add_Pipe.1 = Junction:H.2;  
 Add_Pipe.2 = Input:F.0;  
 Add_Pipe.3 = RegOnGo.1;  
 Add_Pipe.4 = RegOnGo.2;  
 Add_Pipe.5 = Junction:C.2;  //_GUI 103,71
 Mul_Pipe.0 = Input.0;  //_GUI 80,31, 80,28
 Mul_Pipe.1 = Junction.0;  //_GUI 80,34
 Mul_Pipe.2 = Junction:I.1;  
 Mul_Pipe.3 = Junction:B.1;  
 Mul_Pipe.4 = Junction:C.1;  
 Junction:B.0 = Junction:F.1;  
 Convert.0 = Junction:J.1;  //_GUI 155,28
 Convert.1 = Mul_Pipe.0;  
 Junction:C.0 = Junction:A.1;  
 RegOnGo.0 = Junction.1;  
 RegOnGo.1 = Junction:I.2;  //_GUI 70,65
 RegOnGo.2 = Junction:B.2;  //_GUI 73,68
 RegOnGo.3 = Junction:A.2;  //_GUI 76,71
 Junction:D.0 = Add_Pipe:A.1;  
 GDBW_ADone.0 = Junction:G.2;  //_GUI 20,48
 GDBW_ADone.1 = Input:D.0;  
 GDBW_ADone.2 = Input:E.0;  
 GDBW_ADone.3 = Add_Pipe:A.5;  //_GUI 18,57, 18,86, 212,86, 212,46
 GDBW_ADone.4 = Junction:F.2;  //_GUI 23,60
 Junction:E.0 = Input:A.0;  //_GUI 57,32
 Junction:F.0 = Input:C.0;  
 Junction:G.0 = Input:B.0;  
 Junction:H.0 = RegOnGo.0;  //_GUI 99,62
 Junction:I.0 = Junction:G.1;  
 Junction:J.0 = Add_Pipe.1;  //_GUI 155,59
 OR.0 = Add_Pipe.0;  //_GUI 152,15, 152,56
 OR.1 = Convert.0;  
 OR:A.0 = RegClr.0;  //_GUI 204,24
 OR:A.1 = Add_Pipe:A.0;  //_GUI 207,27
 BitA_Lt_BitB.0 = Mul_Pipe.1;  //_GUI 131,48, 131,34
 BitA_Lt_BitB.1 = Add_Pipe.2;  //_GUI 135,62
 $Select.0 = Mul_Pipe.4;  
 $Select.1 = Add_Pipe.5;  //_GUI 160,46, 160,71
 $Select.2 = BitA_Lt_BitB.0;  
 Add_Pipe:A.0 = Convert.1;  
 Add_Pipe:A.1 = Junction:J.2;  
 Add_Pipe:A.3 = Junction:K.2;  //_GUI 183,40
 Add_Pipe:A.4 = Junction:L.2;  //_GUI 180,43
 Add_Pipe:A.5 = $Select.0;  //_GUI 177,46
 Junction:K.0 = Mul_Pipe.2;  
 RegClr.0 = OR.0;  
 RegClr.1 = Junction:K.0;  //_GUI 183,19
 RegClr.3 = Junction:L.0;  //_GUI 180,25
 Junction:L.0 = Mul_Pipe.3;  
}

Object ( Variant "Dat - 1", Bit OFL, Variant Dat
    , Bit ClkG, Bit AClr, Bit Done, Bit Busy) FIR_Accum_MinHW
    ( Variant Perturb, Variant Tap, Bit ClkG, Bit AClrG
    , Bit Go, Bit Wait) 
//_Attributes TreeGroup=CoreLib-DSP
{
 //_ Object Prototypes
 Object ( Variant Perturb) Input;  //_GUI 33,23
 Object ( Variant Tap) Input:A;  //_GUI 33,27
 Object ( Bit ClkG) Input:B;  //_GUI 11,36
 //_Attributes Resource=*Global
 Object ( Bit AClrG) Input:C;  //_GUI 11,39
 //_Attributes Resource=*Global
 Object ( Bit Go) Input:D;  //_GUI 16,50
 Object ( Bit Wait) Input:E;  //_GUI 16,53
 //_Attributes Constant="0"
 Object Output( Variant "Dat - 1") ;  //_GUI 229,4
 Object Output:A( Bit OFL) ;  //_GUI 228,24
 Object Output:B( Variant Dat) ;  //_GUI 228,33
 Object Output:C( Bit ClkG) ;  //_GUI 228,39
 Object Output:D( Bit AClr) ;  //_GUI 228,42
 Object Output:E( Bit Done) ;  //_GUI 47,74
 Object Output:F( Bit Busy) ;  //_GUI 45,79
 Object ( Bit Sub) Input:F;  //_GUI 114,61
 //_Attributes Constant="*0"
 Object ( Variant Out1) Cast( Variant Type, Variant Data) ;  //_GUI 57,59
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction
    ( Variant In0) ;  //_GUI 79,61
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:A
    ( Bit In0) ;  //_GUI 75,42
 Object ( Bit OFL, Variant R, Variant PipeLen
    , Bit ClkG, Bit AClr, Bit Done, Bit Busy) Add_Pipe
    ( Variant A, Variant B, Bit Add, Bit ClkG
    , Bit AClr, Bit Go, Bit Wait) ;  //_GUI 118,54
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:B
    ( Bit In0) ;  //_GUI 72,39
 Object ( Bit OFL, Variant Out1) Convert( Variant Type
    , Variant Data) ;  //_GUI 158,26
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:C
    ( Bit In0) ;  //_GUI 102,42
 Object ( Variant Q, Bit ClkG, Bit AClr
    , Bit Done, Bit Busy) RegOnGo( Variant D, Bit ClkG
    , Bit AClr, Bit Go, Bit Wait) ;  //_GUI 83,60
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:D
    ( Variant In0) ;  //_GUI 216,33
 Object ( Bit GoOne, Bit B, Bit Going
    , Bit D) GDBW_ADone( Bit ClkG, Bit G, Bit W
    , Bit ADoneIn, Bit AClr) ;  //_GUI 26,46
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:E
    ( Variant In1) ;  //_GUI 56,55
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:F
    ( Bit In0) ;  //_GUI 22,39
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:G
    ( Bit In0) ;  //_GUI 19,36
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:H
    ( Variant In3) ;  //_GUI 98,58
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:I
    ( Bit In0) ;  //_GUI 69,36
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:J
    ( Variant In3) ;  //_GUI 154,33
 Object ( Bit Out) OR( Bit In1, Bit In2) ;  //_GUI 168,13
 Object ( Bit Out) OR:A( Bit In1, Bit In2) ;  //_GUI 213,22
 Object Text;  //_GUI 102,9,We are running a tight loop here that only allows one multiply at any given time. The pipelined support will go unused. It does, though, allow us to hold state on the OFL signals and to avoid the spring buffers in the Add operator.
 Object ( Bit OFL, Variant R, Variant PipeLen
    , Bit ClkG, Bit AClr, Bit Done, Bit Busy) Add_Pipe:A
    ( Variant A, Variant B, Bit Add, Bit ClkG
    , Bit AClr, Bit Go, Bit Wait) ;  //_GUI 194,29
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:K
    ( Bit In0) ;  //_GUI 182,36
 Object Text;  //_GUI 181,9,reg for timespec since we have time
 Object ( Variant Q) RegClr( Variant D, Bit ClkG
    , Bit EN, Bit CLR) ;  //_GUI 194,14
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:L
    ( Bit In0) ;  //_GUI 179,39
 Object ( Variant P, Bit ClkG, Bit AClr
    , Bit Done, Variant Busy) Mul_MinHW( Variant A, Variant B
    , Bit ClkG, Bit AClr, Variant Go, Bit Wait) ;  //_GUI 106,29
 Object ( Bit Done, Variant Busy) SyncClr( Bit ClkG
    , Bit AClr, Variant Go, Bit Wait) ;  //_GUI 175,63
 Object ( List Out) ListOut( Variant In1, Variant In2) ;  //_GUI 158,41
 Object Text;  //_GUI 191,53,no register is necessary for this Sync because the previous objects will hold state

 // Behavior Topology
 Output.0 = Junction:H.1;  //_GUI 99,5
 Output:A.0 = OR:A.0;  
 Output:B.0 = Junction:D.1;  
 Output:C.0 = Add_Pipe:A.3;  
 Output:D.0 = Add_Pipe:A.4;  
 Output:E.0 = GDBW_ADone.3;  //_GUI 43,75, 43,57
 Output:F.0 = GDBW_ADone.1;  //_GUI 45,51
 Cast.0 = Junction:E.2;  
 Cast.1 = Junction:D.2;  //_GUI 57,80, 217,80
 Junction.0 = Cast.0;  
 Junction:A.0 = GDBW_ADone.0;  //_GUI 42,43
 Add_Pipe.0 = Junction:E.1;  
 Add_Pipe.1 = Junction:H.2;  
 Add_Pipe.2 = Input:F.0;  
 Add_Pipe.3 = RegOnGo.1;  
 Add_Pipe.4 = RegOnGo.2;  
 Add_Pipe.5 = Junction:C.2;  //_GUI 103,71
 Junction:B.0 = Junction:F.1;  
 Convert.0 = Junction:J.1;  //_GUI 155,28
 Convert.1 = Mul_MinHW.0;  
 Junction:C.0 = Junction:A.1;  
 RegOnGo.0 = Junction.1;  
 RegOnGo.1 = Junction:I.2;  //_GUI 70,65
 RegOnGo.2 = Junction:B.2;  //_GUI 73,68
 RegOnGo.3 = Junction:A.2;  //_GUI 76,71
 Junction:D.0 = Add_Pipe:A.1;  
 GDBW_ADone.0 = Junction:G.2;  //_GUI 20,48
 GDBW_ADone.1 = Input:D.0;  
 GDBW_ADone.2 = Input:E.0;  
 GDBW_ADone.3 = Add_Pipe:A.5;  //_GUI 18,57, 18,86, 212,86, 212,46
 GDBW_ADone.4 = Junction:F.2;  //_GUI 23,60
 Junction:E.0 = Input:A.0;  //_GUI 57,28
 Junction:F.0 = Input:C.0;  
 Junction:G.0 = Input:B.0;  
 Junction:H.0 = RegOnGo.0;  //_GUI 99,62
 Junction:I.0 = Junction:G.1;  
 Junction:J.0 = Add_Pipe.1;  //_GUI 155,59
 OR.0 = Add_Pipe.0;  //_GUI 152,15, 152,56
 OR.1 = Convert.0;  
 OR:A.0 = RegClr.0;  //_GUI 204,24
 OR:A.1 = Add_Pipe:A.0;  //_GUI 207,27
 Add_Pipe:A.0 = Convert.1;  
 Add_Pipe:A.1 = Junction:J.2;  
 Add_Pipe:A.3 = Junction:K.2;  //_GUI 183,40
 Add_Pipe:A.4 = Junction:L.2;  //_GUI 180,43
 Add_Pipe:A.5 = SyncClr.0;  //_GUI 189,46, 189,71
 Junction:K.0 = Mul_MinHW.1;  //_GUI 134,37, 134,34
 RegClr.0 = OR.0;  
 RegClr.1 = Junction:K.0;  //_GUI 183,19
 RegClr.3 = Junction:L.0;  //_GUI 180,25
 Junction:L.0 = Mul_MinHW.2;  //_GUI 131,40, 131,37
 Mul_MinHW.0 = Input.0;  //_GUI 80,31, 80,24
 Mul_MinHW.1 = Junction.0;  //_GUI 80,34
 Mul_MinHW.2 = Junction:I.1;  
 Mul_MinHW.3 = Junction:B.1;  
 Mul_MinHW.4 = Junction:C.1;  
 SyncClr.0 = Add_Pipe.3;  
 SyncClr.1 = Add_Pipe.4;  
 SyncClr.2 = ListOut.0;  //_GUI 169,71
 ListOut.0 = Add_Pipe.5;  //_GUI 158,71
 ListOut.1 = Mul_MinHW.3;  
}

Object ( Variant r, Variant i) demo_gft( Variant r
    , Variant i, Bit Invert, Bit I) 
//_Attributes TreeGroup=CoreLib-DSP\Example
{
 //_ Object Prototypes
 Object ( Variant r) Input;  //_GUI 8,43
 Object ( Variant i) Input:A;  //_GUI 8,46
 Object ( Bit Invert) Input:B;  //_GUI 58,53
 Object ( Bit I) Input:C;  //_GUI 35,61
 Object Output( Variant r) ;  //_GUI 130,46
 Object Output:A( Variant i) ;  //_GUI 130,54
 Object ( LSB016 N) Input:D;  //_GUI 58,50
 //_Attributes Constant="*0"
 Object ( Variant Out1) DynamicOut( Variant In1) ;  //_GUI 20,41
 //_Attributes Documentation="ztlist"
 Object ( Bit OFL, Variant Out1) StaticOut( Variant Type
    , Variant Data) ;  //_GUI 118,42
 //_Attributes Documentation="ztlist"
 Object ( Variant Out1) DynamicOut:A( Variant In1) ;  //_GUI 20,44
 //_Attributes Documentation="ztlist"
 Object ( Bit OFL, Variant Out1) StaticOut:A( Variant Type
    , Variant Data) ;  //_GUI 118,50
 //_Attributes Documentation="ztlist"
 Object ( LSB004 k) Input:E;  //_GUI 58,47
 //_Attributes Constant="*0"
 Object ( Bit Pulse) OneShot( Bit I, Bit ClkG) ;  //_GUI 45,60
 Object ( Complex Out1) CollectComplex( Variant Real, Variant Imag) ;  //_GUI 35,42
 Object ( Variant Real, Variant Imag) ExposeComplex( Complex In1) ;  //_GUI 87,45
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction
    ( Variant In0) ;  //_GUI 15,43
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:A
    ( Variant In1) ;  //_GUI 113,43
 Object ( Bit OFL, Complex D, Bit ClkG
    , Bit AClr, Bit Done, Bit Busy) GFT_1D( Complex D
    , Variant k, Variant N, Bit Invert, Bit ClkG
    , Bit AClrG, Bit Go, Bit Wait) ;  //_GUI 67,43

 // Behavior Topology
 Output.0 = StaticOut.1;  
 Output:A.0 = StaticOut:A.1;  
 DynamicOut.0 = Junction.1;  
 StaticOut.0 = Junction:A.1;  
 StaticOut.1 = ExposeComplex.0;  
 DynamicOut:A.0 = Input:A.0;  
 StaticOut:A.0 = Junction:A.2;  //_GUI 114,52
 StaticOut:A.1 = ExposeComplex.1;  //_GUI 103,55
 OneShot.0 = Input:C.0;  
 CollectComplex.0 = DynamicOut.0;  
 CollectComplex.1 = DynamicOut:A.0;  
 ExposeComplex.0 = GFT_1D.1;  
 Junction.0 = Input.0;  
 Junction:A.0 = Junction.0;  //_GUI 114,28, 16,28
 GFT_1D.0 = CollectComplex.0;  
 GFT_1D.1 = Input:E.0;  
 GFT_1D.2 = Input:D.0;  
 GFT_1D.3 = Input:B.0;  
 GFT_1D.6 = OneShot.0;  
}

