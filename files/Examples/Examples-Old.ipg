VIVA 2.53 Implementation Independent Algorithm Description Language
// Sheet   2/4/2005 1:09:25 PM


DataSet Fix32 = ( Word , Word ); //_Attributes 4,12632256,System\Static
DataSet Fix16 = ( Byte , Byte ); //_Attributes 4,32896,System\Static
DataSet Complex = ( List ); //_Attributes 1,8421504
DataSet Fixed = ( List ); //_Attributes 1,4227327
DataSet Floating = ( List ); //_Attributes 1,32896
DataSet Signed = ( Variant ); //_Attributes 1,16776960
DataSet Default = ( Variant ); //_Attributes 1,16777195,_Deprecated

Object CoreLib-Examples
//_Attributes WipSheet
{
 //_ Object Prototypes
 Object Text;  //_GUI 4,8,Welcome to CoreLib-ExamplesArial,20,8388608,1
 Object Text;  //_GUI 6,23,Getting StartedArial,12,8421504,1
 Object Text;  //_GUI 6,28,Blah blah...Arial,9,0,0
 Object Text;  //_GUI 4,14,.   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .Arial,12,255,1
 Object Examples;  //_GUI 39,33
 Object Text;  //_GUI 101,18,............................................Arial,12,255,1
 Object Text;  //_GUI 19,42,Double-click the Examples box to view examples.Arial,8,255,1
 Object Text;  //_GUI 125,10,<TreeGroup>CoreLib_ExamplesArial,9,0,0

 // Behavior Topology
}

Object ( Variant Out1, Bit Busy) Ex_ConvertStalls( Float Data
    , Bit I, Bit Wait) 
//_Attributes TreeGroup=CoreLib_Examples\Converters/Extenders\Examples\Ex
{
// Description:
// This example object is designed to show the correct implementation of a state machine using the handshake signals Go, Done, Busy, and Wait.
//
// When the 'Wait' is sent high then the Register still accepts incoming data if no data has been passed in.  Once data has been latched into the Register, the cycle will be 'Busy' until the 'Wait' signal is brought low.  Data is not lost in the stall process because the 'Wait' signal is successfully propagated upstream.
//
// Inputs:
// Data:  The value to be passed through
// I:  The 'Go' pulse.
// Wait:  Informs the system that the downstream          objects are busy and can't receive anymore data.
//
// Outputs:
// Busy: signal telling downstream objects the system is stalled.
// Out1: Data ouput for the Register
//
//
// Date:
// March 9, 2004
 //_ Object Prototypes
 Object ( Float Data) Input;  //_GUI 52,74
 Object ( Bit I) Input:A;  //_GUI 52,83
 Object ( Bit Wait) Input:B;  //_GUI 175,91
 Object Output( Variant Out1) ;  //_GUI 210,74
 Object Output:A( Bit Busy) ;  //_GUI 89,90
 Object ( Variant Out1) DynamicOut( Variant In1) ;  //_GUI 63,72
 Object ( Bit OFL, Variant Out1) StaticOut( Variant Type
    , Variant Data) ;  //_GUI 198,70
 Object ( Float Out1, Float Out2, Float Out3) Junction
    ( Float In0) ;  //_GUI 58,74
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:A
    ( Variant In0) ;  //_GUI 79,74
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:B
    ( Variant In0) ;  //_GUI 111,58
 Object ( Fix32 Data) Input:C;  //_GUI 52,52
 //_Attributes Constant="*0"
 Object ( Variant Out1) DynamicOut:A( Variant In1) ;  //_GUI 68,50
 Object ( Bit Pulse) OneShot( Bit I, Bit ClkG) ;  //_GUI 67,82
 Object ( Bit OFL, Variant Out1, Bit ClkG
    , Bit Done, Bit Busy) Convert( Variant Type, Variant Data
    , Bit ClkG, Bit Go, Bit Wait) ;  //_GUI 160,70
 Object ( Bit OFL, Variant Out1, Bit ClkG
    , Bit Done, Bit Busy) Convert:A( Variant Type, Variant Data
    , Bit ClkG, Bit Go, Bit Wait) ;  //_GUI 112,70
 Object ( Bit OFL, Variant Out1, Bit ClkG
    , Bit Done, Bit Busy) Convert:B( Variant Type, Variant Data
    , Bit ClkG, Bit Go, Bit Wait) ;  //_GUI 135,70
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:C
    ( Variant In1) ;  //_GUI 86,60
 Object ( Bit OFL, Variant Out1, Bit ClkG
    , Bit Done, Bit Busy) Convert:C( Variant Type, Variant Data
    , Bit ClkG, Bit Go, Bit Wait) ;  //_GUI 89,70
 Object Text;  //_GUI 7,52,Instructions:1. apply a value to the 'Data' input.2. toggle the 'Wait' input high.3. Toggle the  'I' Input.4. Assign a new value to 'Data'5. Toggle the 'I' input.6. Bring the 'Wait' input low.
 Object Text;  //_GUI 92,37,NOTE:  The object does not stall until 'Wait' is asserted and an initial value has been lacthed into the Register.Arial,8,255,1

 // Behavior Topology
 Output.0 = StaticOut.1;  
 Output:A.0 = Convert:C.4;  
 DynamicOut.0 = Junction.1;  
 StaticOut.0 = Junction.0;  //_GUI 198,64, 59,64
 StaticOut.1 = Convert.1;  
 Junction.0 = Input.0;  
 Junction:A.0 = DynamicOut.0;  
 Junction:B.0 = Junction:A.0;  //_GUI 80,59
 DynamicOut:A.0 = Input:C.0;  
 OneShot.0 = Input:A.0;  
 Convert.0 = Junction:B.1;  //_GUI 160,59
 Convert.1 = Convert:B.1;  
 Convert.2 = Convert:B.2;  
 Convert.3 = Convert:B.3;  
 Convert.4 = Input:B.0;  //_GUI 179,84
 Convert:A.0 = Junction:B.2;  
 Convert:A.1 = Convert:C.1;  
 Convert:A.2 = Convert:C.2;  
 Convert:A.3 = Convert:C.3;  
 Convert:A.4 = Convert:B.4;  
 Convert:B.0 = Junction:C.1;  //_GUI 135,61
 Convert:B.1 = Convert:A.1;  
 Convert:B.2 = Convert:A.2;  
 Convert:B.3 = Convert:A.3;  
 Convert:B.4 = Convert.4;  
 Junction:C.0 = DynamicOut:A.0;  //_GUI 87,53
 Convert:C.0 = Junction:C.2;  //_GUI 87,72
 Convert:C.1 = Junction:A.1;  
 Convert:C.3 = OneShot.0;  //_GUI 83,81, 83,85
 Convert:C.4 = Convert:A.4;  
}

Object Examples
//_Attributes TreeGroup=CoreLib_Examples,Icon=Example
{
// Description:
// Examples for objects contained in CoreLib
//
// Date:
// February 6, 2004
 //_ Object Prototypes
 Object Convert_Examples;  //_GUI 35,79
 Object ExposeCollect_Examples;  //_GUI 66,49
 Object Gates_Examples;  //_GUI 69,59
 Object GrammaticalOps_Examples;  //_GUI 65,69
 Object Mux_Examples;  //_GUI 102,49
 Object Register_Examples;  //_GUI 100,59
 Object Shifting_Examples;  //_GUI 100,69
 Object SynthInfo_Examples;  //_GUI 100,79
 Object Text;  //_GUI 53,11,CoreLib ExamplesArial,20,8388608,1
 Object Text;  //_GUI 45,20,Each object contains a library of examples. Double-click a button to see associated examples.Arial,12,255,1
 Object Text;  //_GUI 61,35,.................Arial,12,255,1
 Object Text;  //_GUI 95,35,.................Arial,12,255,1
 Object BitlengthComparison_Examples;  //_GUI 30,59

 // Behavior Topology
}

Object Convert_Examples
//_Attributes TreeGroup=CoreLib_Examples\Converters/Extenders\Examples,Icon=Example
{
// Description:
// Examples from the Convert directory of CoreLib.  T
//
// Date:
// January 20, 2004
 //_ Object Prototypes
 Object Text;  //_GUI 43,9,Convert ExamplesArial,20,8388608,1
 Object ( Variant Floating_Data, Variant NonSense) Ex_Context1( Float "Floating Data") ;  //_GUI 14,43
 Object ( Variant Signed, Variant UnSigned, Variant "UnSigned+Bit") Ex_Context2
    ( Int Int) ;  //_GUI 49,43
 Object ( Variant 4Bit_1, Variant 4Bit_2, Variant 4Bit_3
    , Variant 4Bit_4, Variant 16_Bit, Variant 32_Bit) Ex_Context3( MSB004 4Bit_1
    , MSB004 4Bit_2, MSB004 4Bit_3, MSB004 4Bit_4) ;  //_GUI 75,43
 Object ( Variant Out1, Variant Out2) Ex_SymmetrizeError( Float Float
    , MSB020 MSB020) ;  //_GUI 100,45
 Object ( Variant P, Variant Q, Variant P1) Ex_Context_on_list
    ( Fix32 A, LSB040 Binary) ;  //_GUI 131,45
 Object ( Bit OFL_MSB032, Variant Q_MSB032, Bit "OFL_Signed(16)"
    , Variant "Q_Signed(16)", Bit "OFL_Fixed(8. 8)", Variant "Q_Fixed(8. 8)", Bit "OFL_Float(9 . 23)"
    , Variant "Q_Float(9 . 23)") "Ex_Convert->Fixed(3,3)"( Fix32 "D_Fixed(16 . 16)", MSB032 D_MSB032, Int "D_Signed(16)"
    , Fix16 "D_Fixed(8. 8)", Float "D_Float(9 . 23)", Bit Go) ;  //_GUI 43,85
 Object ( Bit OFL_MSB032, Variant Q_MSB032, Bit "OFL_Signed(16)"
    , Variant "Q_Signed(16)", Bit "OFL_Fixed(16 . 16)", Variant "Q_Fixed(16 . 16)", Bit "OFL_Float(11 . 53)"
    , Variant "Q_Float(11. 53)") "Ex_Convert->Floating(3,3)"( Float "D_Float(9 . 23)", MSB032 D_MSB032, Int "D_Signed(16)"
    , Fix32 "D_Fixed(16 . 16)", Double "D_Float(11. 53)", Bit Go) ;  //_GUI 85,85
 Object ( Bit OFL_MSB008, Variant Q_MSB008, Bit OFL_MSB032
    , Variant Q_MSB032, Bit "OFL_Signed(16)", Variant "Q_Signed(16)", Bit "OFL_Fixed(16 . 16)"
    , Variant "Q_Fixed(16 . 16)", Bit "OFL_Float(9 . 23)", Variant "Q_Float(9 . 23)") "Ex_Convert->Num(3,3)"( MSB008 D_MSB008
    , MSB032 D_MSB032, Int "D_Signed(16)", Fix32 "D_Fixed(16 . 16)", Float "D_Float(9 . 23)"
    , Bit Go) ;  //_GUI 124,85
 Object ( Bit OFL_MSB032, Variant Q_MSB032, Bit "OFL_Signed(16)"
    , Variant "Q_Signed(16)", Bit "OFL_Fixed(16 . 16)", Variant "Q_Fixed(16 . 16)", Bit "OFL_Float(9 . 23)"
    , Variant "Q_Float(9 . 23)") "Ex_Convert->Signed(3,3)"( Int "Signed(32)", MSB032 D_MSB032, Int "D_Signed(16)"
    , Fix32 "D_Fixed(16 . 16)", Float "D_Float(9 . 23)", Bit Go) ;  //_GUI 10,134
 Object Text;  //_GUI 39,19,To view and compile an example, double-click the preferred object from the options that follow.Arial,12,255,1
 Object ( Variant Out1, Bit Busy) Ex_ConvertStalls( Float Data
    , Bit I, Bit Wait) ;  //_GUI 14,85

 // Behavior Topology
}

Object ExposeCollect_Examples
//_Attributes TreeGroup=CoreLib_Examples\Exposers/Collectors\Examples,Icon=Example
{
// Description:
// Expose/Collect Object Examples
//
// Date:
// January 17, 2004
 //_ Object Prototypes
 Object Text;  //_GUI 55,5,Expose/Collect     ExamplesArial,20,8388608,1
 Object ( Variant Out1, Variant Out2, Variant Out3
    , Variant Out4, Variant Out5, Variant Out6, Variant Out7) Ex_PackBIN
    ( Variant In1, Variant In2, Variant In3, Variant In4
    , Variant In5, Variant In6) ;  //_GUI 16,44
 Object Text;  //_GUI 47,22,To view and compile an example, double-click the preferred object from the options that follow.Arial,12,255,1

 // Behavior Topology
}

Object Gates_Examples
//_Attributes TreeGroup=CoreLib_Examples\Gates\Examples,Icon=Example
{
// Description:
// Examples for Gates objects
//
// Date:
// January 17, 2004
 //_ Object Prototypes
 Object Text;  //_GUI 56,6,Gates  ExamplesArial,20,8388608,1
 Object ( Variant OUT_1a, Variant OUT_1b, Variant OUT_2a
    , Variant OUT_2b, Variant AND, Variant INVERT, Variant OR
    , Variant XOR) Ex_Gates1( MSB002 In_1, MSB002 In_2) ;  //_GUI 18,42
 Object ( Variant "#0a", Variant "#1a", Variant "#0b"
    , Variant "#1b", Variant "#0c", Variant "#1c", Variant "#0d"
    , Variant "#1d") Ex_SelectOut( Variant In1, Bit S, Variant In11
    , Variant In3, Bit S1, Variant In5, Bit S2) ;  //_GUI 75,42
 Object ( Variant O1, Variant O2, Variant O3
    , Variant O4, Variant Out5) Ex_ListXor( Variant D1, Variant D2
    , Variant D3, Bit B1, Bit B2, Bit B3
    , Bit B4, Bit B5, Bit B6, Bit B7
    , Bit B8) ;  //_GUI 46,42
 Object ( Variant Out1, Variant Out2, Variant Out3
    , Variant Out4, Variant Out5) Ex_XOR-NInput( Bit Bit, LSB008 LSB008
    , MSB008 MSB008, BIN008 BIN008, LSB008 LSB0081, Bit Bit1
    , MSB008 MSB0081, LSB008 LSB0082, BIN008 BIN0081, BIN008 BIN0082
    , Bit Bit2) ;  //_GUI 103,42
 Object Text;  //_GUI 42,20,To view and compile an example, double-click the preferred object from the options that follow.Arial,12,255,1

 // Behavior Topology
}

Object GrammaticalOps_Examples
//_Attributes TreeGroup=CoreLib_Examples\Grammar/Datasets\Examples,Icon=Example
{
// Description:
// GrammaticalOps Object Examples
//
// Date:
// Nov 15, 2004
 //_ Object Prototypes
 Object Text;  //_GUI 53,3,GrammaticalOps      ExamplesArial,20,8388608,1
 Object ( Variant "A/B", Variant "A*B", Variant "A+B"
    , Variant A-B) Ex_ArithmeticBitlength( MSB027 A_MSB027, MSB003 B_MSB003) ;  //_GUI 17,87
 Object ( Variant BitLength_MSB017, Variant BitLength_Float, Variant BitLength_4x_MSB004) Ex_Bitlength
    ( MSB017 MSB017, Float Float, MSB004 MSB004, MSB004 MSB0041
    , MSB004 MSB0042, MSB004 MSB0043) ;  //_GUI 44,86
 Object ( Variant ListSize) Ex_ListSize( Variant In1, Variant In2
    , Variant In3, Variant In4, Variant In5, Variant In6
    , Variant In7, Variant In8, Variant In9) ;  //_GUI 49,137
 Object ( Variant Out1, Variant Out2, Variant Out3
    , Variant Out4, Variant Out5, Variant Data, Variant List_Size) Ex_N_Bit_LSB_List
    ( MSB027 Data, MSB009 N, Variant In3, Variant In4
    , Variant In5, MSB008 Data_MSB008, MSB009 N_MSB009) ;  //_GUI 110,137
 Object ( Variant Reverse, Variant Forward) Ex_ReverseBits( Variant In1) ;  //_GUI 13,209
 Object ( Variant Out1, Variant Out2, Variant Out3
    , Variant Out4, Variant Out5) Ex_ReverseList1( MSB008 In1, MSB009 In2
    , MSB010 In3, MSB011 In4, MSB012 In5) ;  //_GUI 41,209
 Object ( Variant Out1, Variant Out2, Variant Out3
    , Variant Out4, Variant Out5, Variant Out11, Variant Out21
    , Variant Out31, Variant Out41) Ex_ReverseList2( MSB008 In1, MSB009 In2
    , MSB010 In3, MSB011 In4, MSB008 In11, MSB009 In21
    , MSB010 In31, MSB011 In41, MSB012 In5) ;  //_GUI 71,209
 Object ( BIN004 "BIN IN", Variant "LSB OUT", Bit Out3
    , Bit Out4, Bit Out5, Bit Out6, LSB004 "LSB IN"
    , Variant "MSB OUT", Bit Out9, Bit Out10, Bit Out11
    , Bit Out12, MSB004 "MSB IN", Variant "BIN OUT", Bit Out15
    , Bit Out16, Bit Out17, Bit Out18) Ex_MSB_LSB_BIN( Bit In1
    , Bit In2, Bit In3, Bit In4, Bit In5
    , Bit In6, Bit In7, Bit In8, Bit In9
    , Bit In10, Bit In11, Bit In12) ;  //_GUI 76,137
 Object ( Bit Bit, Bit Bit1, Bit Bit2) Ex_get_LSB_bit
    ( Bit In1, Bit In2, LSB002 In3) ;  //_GUI 105,210
 Object ( Variant Out1) Ex_Int2Gray( Variant In1) ;  //_GUI 15,258
 Object ( Variant Out1) Ex_Int2Gray-Gray2Int( Variant In1) ;  //_GUI 40,258
 Object ( Variant Out1, Variant Out2, Variant Out3
    , Variant Out4, Variant Out5, Variant Out6, Variant Out7
    , Variant Out8, Variant Out11, Variant Out21, Variant Out31
    , Variant Out41, Variant Out51, Variant Out61, Variant Out71
    , Variant Out81) Ex_BinListToMsbList( MSB008 In1, MSB008 In2, MSB008 In3
    , MSB008 In4, MSB008 In5, MSB008 In6, MSB008 In7
    , MSB008 In8) ;  //_GUI 71,258
 Object ( Variant El, Variant El1, Variant El2
    , Variant El3, Variant El4, Variant El5, Variant El6
    , Variant El7, Variant El8, Variant El9, Variant El10
    , Variant El11, Variant El12, Variant El13) Ex_get_MSB_List_element( MSB008 In1
    , MSB008 In2, Bit Hi_e, MSB008 In4, MSB008 In5) ;  //_GUI 111,258
 Object Text;  //_GUI 48,18,To view and compile an example, double-click the preferred object from the options that follow.Arial,12,255,1
 Object ( Variant BitLength1, Variant BitLength2, Variant BitLength3) Ex_BitA_Div_BitB
    ( MSB020 A_MSB020, MSB004 B_MSB004, MSB021 A_MSB021, MSB004 B_MSB004
    , Bit In14, Bit In15, Bit In14, Bit In15
    , Bit In14, Bit In15) ;  //_GUI 18,43
 Object ( Variant BitLength1, Variant BitLength2, Variant BitLength3) Ex_BitA_Mul_BitB
    ( MSB011 A_MSB011, MSB004 B_MSB004, LSB018 A_LSB018, Bit B_Bit
    , Bit In14, Bit In15, Bit In14, Bit In15
    , Bit In14, Bit In15) ;  //_GUI 48,43
 Object ( Variant "bit/NULL", Variant "NULL/bit", Variant "NULL/NULL"
    , Variant "bit/bit", Variant "LSB3/MSB3", Variant "LSB3/MSB6", Variant "LSB6/MSB3"
    , Variant "LSB15/MSB3", Variant "B3LOfB2LOfBit/B2LOfBit") Ex_BitA_Add_BitB( Bit A, NULL B
    , NULL A, Bit B, NULL A, NULL B
    , Bit A, Bit B, LSB003 A, MSB003 B
    , LSB003 A, MSB006 B, LSB006 A, MSB003 B
    , LSB015 A, MSB003 B, Bit In14, Bit In15
    , Bit In14, Bit In15, Bit In14, Bit In15) ;  //_GUI 82,42
 Object ( Variant "bit/NULL", Variant "NULL/bit", Variant "NULL/NULL"
    , Variant "bit/bit", Variant "LSB3/MSB3", Variant "LSB3/MSB6", Variant "LSB6/MSB3"
    , Variant "LSB15/MSB3", Variant "B3LOfB2LOfBit/B2LOfBit") Ex_BitA_Sub_BitB( Bit A, NULL B
    , NULL A, Bit B, NULL A, NULL B
    , Bit A, Bit B, LSB003 A, MSB003 B
    , LSB003 A, MSB006 B, LSB006 A, MSB003 B
    , LSB015 A, MSB003 B, Bit In14, Bit In15
    , Bit In14, Bit In15, Bit In14, Bit In15) ;  //_GUI 116,42
 Object ( Variant N_Bits, Variant BitLength, Variant N_Bits
    , Variant BitLength, Variant N_Bits, Variant BitLength) Ex_Constant_N_Bits( LSB008 Constant
    , LSB008 Constant, LSB008 Constant) ;  //_GUI 17,137
 Object ( Variant Nothing, Variant A, Variant B
    , Variant C, Variant "D E", Variant F, Variant "G H"
    , Variant I, Variant "J K L M N O P", Variant Q, Variant Other_Null
    , Variant LSB_Null, Variant Other_var, Variant LSB_var, Variant Other_list2
    , Variant LSB_list2, Variant Other_of_LSB_list, Variant LSB_of_LSB_list, Variant Other_of_MSB_list
    , Variant LSB_of_MSB_list, Variant Other1_Null, Variant Other2_Null, Variant LSB_Null
    , Variant Other1_var, Variant Other2_var, Variant LSB_var, Variant Other1_list2
    , Variant Other2_list2, Variant LSB_list2, Variant Other1_list3, Variant Other2_list3
    , Variant LSB_list3, Variant Other1_list4, Variant Other2_list4, Variant LSB_list4) Ex_ListPopLsb
    ( Variant A, Variant B, Variant C, Variant D
    , Variant E, Variant F, Variant G, Variant H
    , Variant I, Variant J, Variant K, Variant L
    , Variant M, Variant N, Variant O, Variant P
    , Variant Q) ;  //_GUI 10,317
 Object ( Variant Nothing, Variant Q, Variant P
    , Variant O, Variant "N M", Variant L, Variant "K J"
    , Variant I, Variant "H G F E D C B", Variant A, Variant Other_Null
    , Variant LSB_Null, Variant Other_var, Variant LSB_var, Variant Other_list2
    , Variant LSB_list2, Variant Other_of_LSB_list, Variant LSB_of_LSB_list, Variant Other_of_MSB_list
    , Variant LSB_of_MSB_list, Variant Other_of_BIN_list, Variant LSB_of_BIN_list) Ex_PopLsb( Bit Q
    , Bit P, Bit O, Bit N, Bit M
    , Bit L, Bit K, Bit J, Bit I
    , Bit H, Bit G, Bit F, Bit E
    , Bit D, Bit C, Bit B, Bit A) ;  //_GUI 40,317

 // Behavior Topology
}

Object Mux_Examples
//_Attributes TreeGroup=CoreLib_Examples\Multiplexors\Examples,Icon=Example
{
// Description:
// Example Sheet For Mux Objects
//
// Date:
// Nov 15, 2004
 //_ Object Prototypes
 Object Text;  //_GUI 27,11,MUX ExamplesArial,20,8388608,1
 Object Text;  //_GUI 19,20,To view and compile an example, double-click the preferred object from the options that follow.Arial,12,255,1
 Object ( Variant "M or Zero", Variant "K or L", Variant "H or I"
    , Variant "E F G or Zero", Variant "A B C or D", Variant "1 of 8", Variant "1 of 16") Ex_List_Mux_Sel
    ( LSB008 M, Bit Sel, LSB008 L, LSB008 K
    , Bit Sel, LSB008 J, LSB008 I, LSB008 H
    , Bit Sel, LSB008 G, LSB008 F, LSB008 E
    , LSB002 Sel, LSB008 D, LSB008 C, LSB008 B
    , LSB008 A, LSB002 Sel, LSB003 Sel, LSB004 Sel) ;  //_GUI 26,40
 Object ( Variant "Selected Data", Variant ORed_Data) Ex_List_Mux( LSB003 D
    , LSB003 C, LSB003 B, LSB003 A, LSB002 Sel
    , LSB003 Sel) ;  //_GUI 64,41

 // Behavior Topology
}

Object Register_Examples
//_Attributes TreeGroup=CoreLib_Examples\Registers\Examples,Icon=Example
{
// Description:
// Register objects example Sheet
//
// Date:
// January 17, 2004
 //_ Object Prototypes
 Object Text;  //_GUI 56,3,Register ExamplesArial,20,8388608,1
 Object ( Bit Q) Ex_RegToggle( Bit EN, Bit CLR) ;  //_GUI 16,41
 Object ( Bit Q) Ex_StickyReg( Bit D, Bit CLR) ;  //_GUI 41,41
 Object ( Variant Q1, Variant Q2, Variant Q3
    , Variant Busy1, Variant Busy2, Variant Busy3) Ex_SyncReg( MSB005 D1
    , MSB006 D2, MSB007 D3, Bit Go1, Bit Go2
    , Bit Go3, Bit Wait) ;  //_GUI 67,41
 Object Text;  //_GUI 43,17,To view and compile an example, double-click the preferred object from the options that follow.Arial,12,255,1

 // Behavior Topology
}

Object Shifting_Examples
//_Attributes TreeGroup=CoreLib_Examples\Shifts\Examples,Icon=Example
{
// Description:
// Object examples from Shifting directory
//
// Date:
// Nov 15, 2004
 //_ Object Prototypes
 Object Text;  //_GUI 45,6,Shifting ExamplesArial,20,8388608,1
 Object ( Variant Out1, Variant Out2) Ex_ShiftBy( BIN016 IN) ;  //_GUI 47,42
 Object ( Variant Out1, Variant BitLength, Bit Busy) "Ex_Parallel/Serial"
    ( Float Float, MSB004 S_Size, Bit Go, Bit Wait) ;  //_GUI 18,42
 Object Text;  //_GUI 43,14,To view and compile an example, double-click the preferred object from the options that follow.Arial,12,255,1
 Object ( Variant SToP_Data, Variant SToP_EnabledData, Variant SToP_StageMask
    , Variant SToP_Done, Variant SToP_Busy, Variant PToS_Data, Variant PToS_EnabledData
    , Variant PToS_StageMask, Variant PToS_Done, Variant PToS_Busy) Ex_PToS_Or_SToP( LSB004 Data
    , Bit ClkG, Bit CLR, Bit SToP_Go, Bit SToP_Wait
    , Bit PToS_Go, Bit PToS_Wait) ;  //_GUI 20,69
 Object ( Variant Data, Variant EnabledData, Variant StageMask
    , Bit Done, Bit Busy) "Ex_Parallel->Serial_Clr"( LSB004 Data, Bit ClkG
    , Bit AClr, Bit Go, Bit Wait) ;  //_GUI 65,42
 Object ( Variant Data, Variant EnabledData, Variant StageMask
    , Bit Done, Bit Busy) "Ex_Serial->Parallel_Clr"( LSB004 Data, Bit ClkG
    , Bit AClr, Bit Go, Bit Wait) ;  //_GUI 96,42

 // Behavior Topology
}

Object SynthInfo_Examples
//_Attributes TreeGroup=CoreLib_Examples\Grammar/Datasets\DatasetInfo\Examples,Icon=Example
{
// Description:
// Example sheet for objects contained in the Synthinfo directory of CoreLib.
//
// Date:
// January 17, 2004
 //_ Object Prototypes
 Object Text;  //_GUI 59,3,SynthInfoArial,20,8388608,1
 Object Text;  //_GUI 59,10,ExamplesArial,20,8388608,1
 Object ( Bit Floating, Bit Float) Ex_IsContextual( Float Float) ;  //_GUI 45,39
 Object ( Bit Bit, Bit MSB008) Ex_IsBit( MSB009 MSB009) ;  //_GUI 13,39
 Object ( Bit "List/List", Bit "Var/Var", Bit "Var/Bit List"
    , Bit "Var/Bit List1") Ex_SameListStruct( MSB004 MSB004, MSB004 In2, MSB004 In3
    , MSB004 In4, BIN004 BIN004, MSB004 In6, MSB004 In7
    , MSB004 In8, MSB003 MSB003, Bit Bit, Bit Bit1
    , Bit Bit2, MSB003 MSB0031, MSB003 MSB0032, MSB003 MSB0033
    , MSB003 MSB0034, MSB003 MSB0035, MSB003 MSB0036, MSB003 MSB0037
    , MSB003 MSB0038, MSB003 MSB0039, MSB003 MSB00310, MSB003 MSB00311
    , MSB003 MSB00312) ;  //_GUI 76,39
 Object Text;  //_GUI 46,18,To view and compile an example, double-click the preferred object from the options that follow.Arial,12,255,1

 // Behavior Topology
}

Object ( Variant Floating_Data, Variant NonSense) Ex_Context1( Float "Floating Data") 
//_Attributes TreeGroup=CoreLib_Examples\Converters/Extenders\Examples\Ex
{
// Ojbect Name:
// Ex_1
//
// Description:
// Context Example #1
//
//
//
//
// Date:
//
// 01/17/04
 //_ Object Prototypes
 Object ( Float "Floating Data") Input;  //_GUI 37,78
 Object Output( Variant Floating_Data) ;  //_GUI 164,72
 Object Output:A( Variant NonSense) ;  //_GUI 162,86
 Object ( Variant Out1) MSB( Variant In1) ;  //_GUI 78,76
 Object ( List Out) ListOut( Variant In1, Variant In2) ;  //_GUI 99,74
 Object ( Bit In) Input:A;  //_GUI 94,75
 //_Attributes Constant="*0"
 Object ( Variant Out1) MSB:A( Variant In1) ;  //_GUI 115,74
 Object ( Bit OFL, Variant Out1) StaticOut( Variant Type
    , Variant Data) ;  //_GUI 152,68
 Object ( Float Out1, Float Out2, Float Out3) Junction
    ( Float In0) ;  //_GUI 44,78
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:A
    ( Variant In0) ;  //_GUI 64,78
 Object ( Variant Out1) DynamicOut( Variant In1) ;  //_GUI 49,76
 Object Text;  //_GUI 21,90,We start with a Float input (static) and immediately create a Floating data set with a 9-bit characteristic and 23-bit mantissa via the DynamicOut.  This is done because Float is not a part of the data set grammar and as such is a foreign element necessary for input only.
 Object Text;  //_GUI 66,50,The bits that comprise our Floating data set are then arranged into an MSB data set, which is context-free.  The order of and data contents of all bits are maintained in the MSB; however, without the Floating context, the numerical value of our data is currently nonsensical.
 Object Text;  //_GUI 89,94,To make the situation even worse, we add a leading 0, increasing the size of the MSB data set by one Bit.
 Object Text;  //_GUI 132,52,The Context object takes the data and rearranges it into a Contextual data set, defined on the Type input.  The leading 0 is not a problem, as the Context object knows how to identify and remove it.
 Object Text;  //_GUI 25,11,Problem:Arial,14,8388608,1
 Object Text;  //_GUI 31,16,A Contextual data set is passed through an MSB, LSB of BIN object, creating a data set with identical bits but no context.  This may be done when a Contextual data set goes through a Serial->Parallel object for example.  How do we rebuild the Contextual Data Set?Arial,10,0,0
 Object Text;  //_GUI 20,84,1. Contextual Data Set in input.Arial,9,32768,1
 Object Text;  //_GUI 69,42,2. Bits are rearranged into context-free data set.Arial,9,32768,1
 Object Text;  //_GUI 89,90,3. Context-free data set is legally modified.Arial,9,32768,1
 Object Text;  //_GUI 133,43,4. Context object, correctly recovers Contextual data set, given original data set configuration.Arial,9,32768,1
 Object Text;  //_GUI 149,95,5. Contextual data set is output.Arial,9,32768,1
 Object Text;  //_GUI 150,99,We run the Floating data set through a StaticOut object with Type Float, in order to produce a display-friendly data set.
 Object ( Variant Out1) Context( Variant Type, Variant Data) ;  //_GUI 133,70
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:B
    ( Variant In0) ;  //_GUI 129,76
 Object Text;  //_GUI 54,6,Context Example #1Arial,8,255,1

 // Behavior Topology
 Output.0 = StaticOut.1;  
 Output:A.0 = Junction:B.2;  //_GUI 130,87
 MSB.0 = Junction:A.1;  
 ListOut.0 = MSB.0;  
 ListOut.1 = Input:A.0;  
 MSB:A.0 = ListOut.0;  
 StaticOut.0 = Junction.0;  //_GUI 147,70, 147,68, 45,68
 StaticOut.1 = Context.0;  
 Junction.0 = Input.0;  
 Junction:A.0 = DynamicOut.0;  
 DynamicOut.0 = Junction.1;  
 Context.0 = Junction:A.0;  //_GUI 65,72
 Context.1 = Junction:B.0;  //_GUI 130,75
 Junction:B.0 = MSB:A.0;  
}

Object ( Variant Signed, Variant UnSigned, Variant "UnSigned+Bit") Ex_Context2
    ( Int Int) 
//_Attributes TreeGroup=CoreLib_Examples\Converters/Extenders\Examples\Ex
{
//
//
// Description:
// Contextual Data Set Example
//
//
//
//
// Date:
//
// 01/17/04
 //_ Object Prototypes
 Object ( Int Int) Input;  //_GUI 34,35
 Object Output( Variant Signed) ;  //_GUI 133,31
 Object Output:A( Variant UnSigned) ;  //_GUI 128,41
 Object Output:B( Variant "UnSigned+Bit") ;  //_GUI 133,56
 Object ( Bit In) Input:A;  //_GUI 70,27
 //_Attributes Constant="*0"
 Object ( Variant Out1) Context( Variant Type, Variant Data) ;  //_GUI 102,29
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction
    ( Variant In0) ;  //_GUI 61,35
 Object ( Bit OFL, Variant Out1) StaticOut( Variant Type
    , Variant Data) ;  //_GUI 121,27
 Object ( Int Out1, Int Out2, Int Out3) Junction:A
    ( Int In0) ;  //_GUI 40,35
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:B
    ( Variant In0) ;  //_GUI 97,33
 Object ( Variant Out1) DynamicOut( Variant In1) ;  //_GUI 45,33
 Object ( Variant Out1) MSB( Variant In1) ;  //_GUI 65,33
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:C
    ( Variant In0) ;  //_GUI 78,35
 Object Text;  //_GUI 34,53,Here a Contextual Signed is created.  It is then passed through an MSB, making is context-free.  To add insult to injury, a leading 0 is added with no regard for 2's complement.  However the Context object still does its job correctly.  Make sure you enter a negative number on the Int input.Arial,10,0,0
 Object Text;  //_GUI 70,6,Context Example #2Arial,8,255,1
 Object ( Variant Out1) CollectMSB( Variant In2, Variant In3) ;  //_GUI 83,31

 // Behavior Topology
 Output.0 = StaticOut.1;  
 Output:A.0 = Junction:C.2;  //_GUI 79,42
 Output:B.0 = Junction:B.2;  //_GUI 98,57
 Context.0 = Junction.0;  //_GUI 99,31, 99,22, 62,22
 Context.1 = Junction:B.1;  
 Junction.0 = DynamicOut.0;  
 StaticOut.0 = Junction:A.0;  //_GUI 117,29, 117,18, 41,18
 StaticOut.1 = Context.0;  
 Junction:A.0 = Input.0;  
 Junction:B.0 = CollectMSB.0;  
 DynamicOut.0 = Junction:A.1;  
 MSB.0 = Junction.1;  
 Junction:C.0 = MSB.0;  
 CollectMSB.0 = Input:A.0;  //_GUI 80,33, 80,28
 CollectMSB.1 = Junction:C.1;  
}

Object ( Variant 4Bit_1, Variant 4Bit_2, Variant 4Bit_3
    , Variant 4Bit_4, Variant 16_Bit, Variant 32_Bit) Ex_Context3( MSB004 4Bit_1
    , MSB004 4Bit_2, MSB004 4Bit_3, MSB004 4Bit_4) 
//_Attributes TreeGroup=CoreLib_Examples\Converters/Extenders\Examples\Ex
{
//
// Description:
// Context Example #1
//
//
//
//
// Date:
//
// 01/17/04
 //_ Object Prototypes
 Object ( MSB004 4Bit_1) Input;  //_GUI 35,49
 Object ( MSB004 4Bit_2) Input:A;  //_GUI 35,52
 Object ( MSB004 4Bit_3) Input:B;  //_GUI 35,55
 Object ( MSB004 4Bit_4) Input:C;  //_GUI 35,58
 Object Output( Variant 4Bit_1) ;  //_GUI 162,45
 Object Output:A( Variant 4Bit_2) ;  //_GUI 162,48
 Object Output:B( Variant 4Bit_3) ;  //_GUI 162,51
 Object Output:C( Variant 4Bit_4) ;  //_GUI 162,54
 Object Output:D( Variant 16_Bit) ;  //_GUI 101,67
 Object Output:E( Variant 32_Bit) ;  //_GUI 141,80
 Object ( List Out) ListOut( Variant In1, Variant In2) ;  //_GUI 96,46
 Object ( Variant Out1) Zero( Variant In1) ;  //_GUI 79,41
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction
    ( Variant In0) ;  //_GUI 73,50
 Object ( Variant Out1) MSB( Variant In1) ;  //_GUI 112,46
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:A
    ( Variant In0) ;  //_GUI 124,48
 Object ( Variant Out1) MSB:A( Variant In1) ;  //_GUI 61,48
 Object ( Variant Out1, Variant Out2, Variant Out3
    , Variant Out4) UnPackBIN( Variant In1) ;  //_GUI 146,44
 Object ( List Out1) PackBIN( Variant In1, Variant In2
    , Variant In3, Variant In4) ;  //_GUI 43,48
 Object ( Variant Out1) Context( Variant Type, Variant Data) ;  //_GUI 131,44
 Object ( List Out1, List Out2, List Out3) Junction:B
    ( List In0) ;  //_GUI 56,50
 Object Text;  //_GUI 66,21,Here we start with a List of context free numbers.  Our list is made into a context-free data set, which is then doubled.  But we are still able to recover the original List.Arial,10,0,0
 Object Text;  //_GUI 71,8,Context Example #2Arial,8,255,1

 // Behavior Topology
 Output.0 = UnPackBIN.0;  
 Output:A.0 = UnPackBIN.1;  
 Output:B.0 = UnPackBIN.2;  
 Output:C.0 = UnPackBIN.3;  
 Output:D.0 = Junction.2;  //_GUI 74,68
 Output:E.0 = Junction:A.2;  //_GUI 125,81
 ListOut.0 = Junction.1;  
 ListOut.1 = Zero.0;  //_GUI 93,48, 93,44
 Zero.0 = Junction.0;  //_GUI 74,44
 Junction.0 = MSB:A.0;  
 MSB.0 = ListOut.0;  
 Junction:A.0 = MSB.0;  
 MSB:A.0 = Junction:B.1;  
 UnPackBIN.0 = Context.0;  
 PackBIN.0 = Input.0;  
 PackBIN.1 = Input:A.0;  
 PackBIN.2 = Input:B.0;  
 PackBIN.3 = Input:C.0;  
 Context.0 = Junction:B.0;  //_GUI 129,46, 129,38, 57,38
 Context.1 = Junction:A.1;  
 Junction:B.0 = PackBIN.0;  
}

Object ( Variant Out1, Variant Out2) Ex_SymmetrizeError( Float Float
    , MSB020 MSB020) 
//_Attributes TreeGroup=CoreLib_Examples\Converters/Extenders\Examples\Ex
{
//
//
// Description:
//
// This example demonstrate the behavior of a Symmetrize object when a data set carrying static type information is propogated to it.
//
//
//
//
//
// Date:
//
// 01/17/04
 //_ Object Prototypes
 Object ( Float Float) Input;  //_GUI 47,26
 Object ( MSB020 MSB020) Input:A;  //_GUI 47,29
 Object Output( Variant Out1) ;  //_GUI 76,26
 Object Output:A( Variant Out2) ;  //_GUI 76,29
 Object ( Variant Out1, Variant Out2) Symmetrize( Variant In1
    , Variant In2) ;  //_GUI 57,25
 Object Text;  //_GUI 49,35,This example demonstrates one reason why Contexutal Data Sets must be used to provide context rather than the deprecated data set type attribute.  The inputs to the Symmetrize are Float and MSB020.  The Symmetrize object will produce two 32-bit nums.  The floating point context is completely lost from the Float input.Arial,9,0,0
 Object Text;  //_GUI 46,13,Symmetrize Error ExampleArial,8,255,1

 // Behavior Topology
 Output.0 = Symmetrize.0;  
 Output:A.0 = Symmetrize.1;  
 Symmetrize.0 = Input.0;  
 Symmetrize.1 = Input:A.0;  
}

Object ( Variant P, Variant Q, Variant P) Ex_Context_on_list
    ( Fix32 A, LSB040 Binary) 
//_Attributes TreeGroup=CoreLib_Examples\Converters/Extenders\Examples\Ex
{
 //_ Object Prototypes
 Object ( Fix32 A) Input;  //_GUI 55,34
 Object ( LSB040 Binary) Input:A;  //_GUI 52,75
 Object Output( Variant P) ;  //_GUI 163,34
 Object Output:A( Variant Q) ;  //_GUI 130,45
 Object Output:B( Variant P) ;  //_GUI 171,75
 Object ( Variant Out1) LSB( Variant In1) ;  //_GUI 106,32
 Object ( List Out1, List Out2, List Out3) Junction
    ( List In0) ;  //_GUI 101,34
 Object ( Variant Out1) Context( Variant Type, Variant Data) ;  //_GUI 122,30
 Object ( Variant Out1) DynamicOut( Variant In1) ;  //_GUI 69,32
 Object ( Bit OFL, Variant Out1) StaticOut( Variant Type
    , Variant Data) ;  //_GUI 153,30
 Object ( Fixed Out) FixedOut( List In1) ;  //_GUI 139,32
 Object ( Fix32 Out1, Fix32 Out2, Fix32 Out3) Junction:A
    ( Fix32 In0) ;  //_GUI 63,34
 Object ( List Out1) FixedIn( Fixed In) ;  //_GUI 87,32
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:B
    ( Variant In0) ;  //_GUI 118,34
 Object ( Bit OFL, Variant Out1) StaticOut:A( Variant Type
    , Variant Data) ;  //_GUI 161,71
 Object ( Fixed Out) FixedOut:A( List In1) ;  //_GUI 147,73
 Object ( Variant Out1, Variant Out2) ListIn( List In) ;  //_GUI 44,61
 Object ( Variant C, Variant Out1) RCR( Variant In2
    , Variant C) ;  //_GUI 100,74
 //_Attributes Documentation=Bit_Carry
 Object ( List Out) ListOut( Variant In1, Variant In2) ;  //_GUI 64,64
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:C
    ( Variant In0) ;  //_GUI 59,65
 Object ( Variant Out1) LSB:A( Variant In1) ;  //_GUI 80,64
 Object ( List Out) ListOut:A( Variant In1, Variant In2) ;  //_GUI 129,73
 Object ( Variant Out1) Cast( Variant Type, Variant Data) ;  //_GUI 110,60
 Object Text;  //_GUI 187,32,Enter two numbers in A, multiply their Q in a calculator, put the calculator result into Binary, and see your multiply.

 // Behavior Topology
 Output.0 = StaticOut.1;  
 Output:A.0 = Junction:B.2;  //_GUI 119,46
 Output:B.0 = StaticOut:A.1;  
 LSB.0 = Junction.1;  
 Junction.0 = FixedIn.0;  
 Context.0 = Junction.0;  //_GUI 122,24, 102,24
 Context.1 = Junction:B.1;  
 DynamicOut.0 = Junction:A.1;  
 StaticOut.0 = Junction:A.0;  //_GUI 153,18, 64,18
 StaticOut.1 = FixedOut.0;  
 FixedOut.0 = Context.0;  //_GUI 139,33
 Junction:A.0 = Input.0;  
 FixedIn.0 = DynamicOut.0;  
 Junction:B.0 = LSB.0;  
 StaticOut:A.0 = Junction:A.2;  //_GUI 161,58, 64,58
 StaticOut:A.1 = FixedOut:A.0;  
 FixedOut:A.0 = ListOut:A.0;  
 ListIn.0 = Junction.2;  //_GUI 44,47, 102,47
 RCR.0 = Input:A.0;  
 RCR.1 = LSB:A.0;  //_GUI 90,79
 ListOut.0 = Junction:C.2;  //_GUI 60,69
 ListOut.1 = Junction:C.1;  
 Junction:C.0 = ListIn.0;  
 LSB:A.0 = ListOut.0;  
 ListOut:A.0 = Cast.0;  //_GUI 120,78
 ListOut:A.1 = RCR.1;  //_GUI 118,75, 118,79
 Cast.0 = Junction:C.0;  //_GUI 60,62
 Cast.1 = RCR.0;  
}

Object ( Bit OFL_MSB032, Variant Q_MSB032, Bit "OFL_Signed(16)"
    , Variant "Q_Signed(16)", Bit "OFL_Fixed(8. 8)", Variant "Q_Fixed(8. 8)", Bit "OFL_Float(9 . 23)"
    , Variant "Q_Float(9 . 23)") "Ex_Convert->Fixed(3,3)"( Fix32 "D_Fixed(16 . 16)", MSB032 D_MSB032, Int "D_Signed(16)"
    , Fix16 "D_Fixed(8. 8)", Float "D_Float(9 . 23)", Bit Go) 
//_Attributes TreeGroup=CoreLib_Examples\Converters/Extenders\Examples\Ex
{
// Date:
// 08 Feb 2003
 //_ Object Prototypes
 Object ( Fix32 "D_Fixed(16 . 16)") Input;  //_GUI 21,19
 Object ( MSB032 D_MSB032) Input:A;  //_GUI 39,25
 Object ( Int "D_Signed(16)") Input:B;  //_GUI 26,44
 Object ( Fix16 "D_Fixed(8. 8)") Input:C;  //_GUI 27,64
 Object ( Float "D_Float(9 . 23)") Input:D;  //_GUI 30,81
 Object ( Bit Go) Input:E;  //_GUI 29,90
 Object Output( Bit OFL_MSB032) ;  //_GUI 119,22
 Object Output:A( Variant Q_MSB032) ;  //_GUI 119,33
 Object Output:B( Bit "OFL_Signed(16)") ;  //_GUI 119,41
 Object Output:C( Variant "Q_Signed(16)") ;  //_GUI 118,52
 Object Output:D( Bit "OFL_Fixed(8. 8)") ;  //_GUI 119,61
 Object Output:E( Variant "Q_Fixed(8. 8)") ;  //_GUI 119,72
 Object Output:F( Bit "OFL_Float(9 . 23)") ;  //_GUI 119,78
 Object Output:G( Variant "Q_Float(9 . 23)") ;  //_GUI 118,89
 Object ( Variant Q) RegEn( Variant D, Bit ClkG
    , Bit EN) ;  //_GUI 85,63
 Object ( Variant Q) RegEn:A( Variant D, Bit ClkG
    , Bit EN) ;  //_GUI 85,80
 Object ( Variant Out1) DynamicOut( Variant In1) ;  //_GUI 35,62
 Object ( Variant Out1) DynamicOut:A( Variant In1) ;  //_GUI 36,79
 Object ( Bit OFL, Variant Out1, Bit ClkG
    , Bit Done, Bit Busy) Convert( Variant Type, Variant Data
    , Bit ClkG, Bit Go, Bit Wait) ;  //_GUI 62,77
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction
    ( Variant In1) ;  //_GUI 54,61
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:A
    ( Variant In0) ;  //_GUI 54,22
 Object ( Bit OFL, Variant Out1, Bit ClkG
    , Bit Done, Bit Busy) Convert:A( Variant Type, Variant Data
    , Bit ClkG, Bit Go, Bit Wait) ;  //_GUI 62,40
 Object ( Bit OFL, Variant Out1, Bit ClkG
    , Bit Done, Bit Busy) Convert:B( Variant Type, Variant Data
    , Bit ClkG, Bit Go, Bit Wait) ;  //_GUI 62,21
 Object ( Bit OFL, Variant Out1, Bit ClkG
    , Bit Done, Bit Busy) Convert:C( Variant Type, Variant Data
    , Bit ClkG, Bit Go, Bit Wait) ;  //_GUI 62,60
 Object ( Variant Q) RegEn:B( Variant D, Bit ClkG
    , Bit EN) ;  //_GUI 85,43
 Object ( Bit Pulse) OneShot( Bit I, Bit ClkG) ;  //_GUI 35,89
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:B
    ( Bit In3) ;  //_GUI 57,87
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:C
    ( Bit In3) ;  //_GUI 57,50
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:D
    ( Bit In3) ;  //_GUI 57,70
 Object ( Variant Q) RegEn:C( Variant D, Bit ClkG
    , Bit EN) ;  //_GUI 85,24
 Object ( Variant Out1) DynamicOut:B( Variant In1) ;  //_GUI 32,17
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:E
    ( Variant In1) ;  //_GUI 54,41
 Object ( Variant Out1) DynamicOut:C( Variant In1) ;  //_GUI 34,42
 Object ( Bit OFL, Variant Out1) StaticOut( Variant Type
    , Variant Data) ;  //_GUI 104,85
 Object ( Bit OFL, Variant Out1) StaticOut:A( Variant Type
    , Variant Data) ;  //_GUI 104,68
 Object ( Bit OFL, Variant Out1) StaticOut:B( Variant Type
    , Variant Data) ;  //_GUI 104,48
 Object ( Bit OFL, Variant Out1) StaticOut:C( Variant Type
    , Variant Data) ;  //_GUI 104,29
 Object ( Fix32 Out1, Fix32 Out2, Fix32 Out3) Junction:F
    ( Fix32 In0) ;  //_GUI 28,19
 Object ( Fix32 Out1, Fix32 Out2, Fix32 Out3) Junction:G
    ( Fix32 In1) ;  //_GUI 98,69
 Object ( Fix32 Out1, Fix32 Out2, Fix32 Out3) Junction:H
    ( Fix32 In1) ;  //_GUI 98,49
 Object ( Fix32 Out1, Fix32 Out2, Fix32 Out3) Junction:I
    ( Fix32 In1) ;  //_GUI 98,30

 // Behavior Topology
 Output.0 = Convert:B.0;  
 Output:A.0 = StaticOut:C.1;  
 Output:B.0 = Convert:A.0;  
 Output:C.0 = StaticOut:B.1;  
 Output:D.0 = Convert:C.0;  
 Output:E.0 = StaticOut:A.1;  
 Output:F.0 = Convert.0;  
 Output:G.0 = StaticOut.1;  
 RegEn.0 = Convert:C.1;  
 RegEn.2 = Convert:C.3;  
 RegEn:A.0 = Convert.1;  
 RegEn:A.2 = Convert.3;  
 DynamicOut.0 = Input:C.0;  
 DynamicOut:A.0 = Input:D.0;  
 Convert.0 = Junction.2;  //_GUI 55,79
 Convert.1 = DynamicOut:A.0;  
 Convert.3 = Junction:B.2;  
 Junction.0 = Junction:E.2;  
 Junction:A.0 = DynamicOut:B.0;  //_GUI 49,23, 49,20
 Convert:A.0 = Junction:E.1;  
 Convert:A.1 = DynamicOut:C.0;  
 Convert:A.3 = Junction:C.2;  
 Convert:B.0 = Junction:A.1;  
 Convert:B.1 = Input:A.0;  
 Convert:B.3 = Junction:C.1;  //_GUI 58,32
 Convert:C.0 = Junction.1;  
 Convert:C.1 = DynamicOut.0;  
 Convert:C.3 = Junction:D.2;  
 RegEn:B.0 = Convert:A.1;  
 RegEn:B.2 = Convert:A.3;  
 OneShot.0 = Input:E.0;  
 Junction:B.0 = OneShot.0;  //_GUI 58,92
 Junction:C.0 = Junction:D.1;  
 Junction:D.0 = Junction:B.1;  
 RegEn:C.0 = Convert:B.1;  
 RegEn:C.2 = Convert:B.3;  
 DynamicOut:B.0 = Junction:F.1;  
 Junction:E.0 = Junction:A.2;  
 DynamicOut:C.0 = Input:B.0;  
 StaticOut.0 = Junction:G.2;  //_GUI 99,87
 StaticOut.1 = RegEn:A.0;  //_GUI 100,90, 100,83
 StaticOut:A.0 = Junction:G.1;  
 StaticOut:A.1 = RegEn.0;  //_GUI 100,73, 100,66
 StaticOut:B.0 = Junction:H.1;  
 StaticOut:B.1 = RegEn:B.0;  //_GUI 100,53, 100,46
 StaticOut:C.0 = Junction:I.1;  
 StaticOut:C.1 = RegEn:C.0;  //_GUI 100,34, 100,27
 Junction:F.0 = Input.0;  
 Junction:G.0 = Junction:H.2;  
 Junction:H.0 = Junction:I.2;  
 Junction:I.0 = Junction:F.0;  //_GUI 99,14, 29,14
}

Object ( Bit OFL_MSB032, Variant Q_MSB032, Bit "OFL_Signed(16)"
    , Variant "Q_Signed(16)", Bit "OFL_Fixed(16 . 16)", Variant "Q_Fixed(16 . 16)", Bit "OFL_Float(11 . 53)"
    , Variant "Q_Float(11. 53)") "Ex_Convert->Floating(3,3)"( Float "D_Float(9 . 23)", MSB032 D_MSB032, Int "D_Signed(16)"
    , Fix32 "D_Fixed(16 . 16)", Double "D_Float(11. 53)", Bit Go) 
//_Attributes TreeGroup=CoreLib_Examples\Converters/Extenders\Examples\Ex
{
// Date:
// 08 Feb 2003
 //_ Object Prototypes
 Object ( Float "D_Float(9 . 23)") Input;  //_GUI 20,19
 Object ( MSB032 D_MSB032) Input:A;  //_GUI 39,25
 Object ( Int "D_Signed(16)") Input:B;  //_GUI 26,44
 Object ( Fix32 "D_Fixed(16 . 16)") Input:C;  //_GUI 29,63
 Object ( Double "D_Float(11. 53)") Input:D;  //_GUI 30,81
 Object ( Bit Go) Input:E;  //_GUI 29,90
 Object Output( Bit OFL_MSB032) ;  //_GUI 119,22
 Object Output:A( Variant Q_MSB032) ;  //_GUI 119,33
 Object Output:B( Bit "OFL_Signed(16)") ;  //_GUI 119,41
 Object Output:C( Variant "Q_Signed(16)") ;  //_GUI 118,52
 Object Output:D( Bit "OFL_Fixed(16 . 16)") ;  //_GUI 121,61
 Object Output:E( Variant "Q_Fixed(16 . 16)") ;  //_GUI 121,72
 Object Output:F( Bit "OFL_Float(11 . 53)") ;  //_GUI 119,78
 Object Output:G( Variant "Q_Float(11. 53)") ;  //_GUI 118,89
 Object ( Variant Out1) DynamicOut( Variant In1) ;  //_GUI 36,79
 Object ( Bit OFL, Variant Out1, Bit ClkG
    , Bit Done, Bit Busy) Convert( Variant Type, Variant Data
    , Bit ClkG, Bit Go, Bit Wait) ;  //_GUI 62,77
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction
    ( Variant In1) ;  //_GUI 54,61
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:A
    ( Variant In0) ;  //_GUI 54,22
 Object ( Bit OFL, Variant Out1, Bit ClkG
    , Bit Done, Bit Busy) Convert:A( Variant Type, Variant Data
    , Bit ClkG, Bit Go, Bit Wait) ;  //_GUI 62,40
 Object ( Bit OFL, Variant Out1, Bit ClkG
    , Bit Done, Bit Busy) Convert:B( Variant Type, Variant Data
    , Bit ClkG, Bit Go, Bit Wait) ;  //_GUI 62,21
 Object ( Bit OFL, Variant Out1, Bit ClkG
    , Bit Done, Bit Busy) Convert:C( Variant Type, Variant Data
    , Bit ClkG, Bit Go, Bit Wait) ;  //_GUI 62,60
 Object ( Variant Q) RegEn( Variant D, Bit ClkG
    , Bit EN) ;  //_GUI 85,80
 Object ( Bit Pulse) OneShot( Bit I, Bit ClkG) ;  //_GUI 35,89
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:B
    ( Bit In3) ;  //_GUI 57,87
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:C
    ( Bit In3) ;  //_GUI 57,50
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:D
    ( Bit In3) ;  //_GUI 57,70
 Object ( Variant Q) RegEn:A( Variant D, Bit ClkG
    , Bit EN) ;  //_GUI 85,24
 Object ( Variant Out1) DynamicOut:A( Variant In1) ;  //_GUI 32,17
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:E
    ( Variant In1) ;  //_GUI 54,41
 Object ( Variant Out1) DynamicOut:B( Variant In1) ;  //_GUI 34,42
 Object ( Bit OFL, Variant Out1) StaticOut( Variant Type
    , Variant Data) ;  //_GUI 104,85
 Object ( Bit OFL, Variant Out1) StaticOut:A( Variant Type
    , Variant Data) ;  //_GUI 104,68
 Object ( Bit OFL, Variant Out1) StaticOut:B( Variant Type
    , Variant Data) ;  //_GUI 104,48
 Object ( Bit OFL, Variant Out1) StaticOut:C( Variant Type
    , Variant Data) ;  //_GUI 104,29
 Object ( Float Out1, Float Out2, Float Out3) Junction:F
    ( Float In0) ;  //_GUI 28,19
 Object ( Float Out1, Float Out2, Float Out3) Junction:G
    ( Float In1) ;  //_GUI 98,69
 Object ( Float Out1, Float Out2, Float Out3) Junction:H
    ( Float In1) ;  //_GUI 98,49
 Object ( Float Out1, Float Out2, Float Out3) Junction:I
    ( Float In1) ;  //_GUI 98,30
 Object ( Variant Q) RegEn:B( Variant D, Bit ClkG
    , Bit EN) ;  //_GUI 85,43
 Object ( Variant Out1) DynamicOut:C( Variant In1) ;  //_GUI 35,61
 Object ( Variant Q) RegEn:C( Variant D, Bit ClkG
    , Bit EN) ;  //_GUI 85,63

 // Behavior Topology
 Output.0 = Convert:B.0;  
 Output:A.0 = StaticOut:C.1;  
 Output:B.0 = Convert:A.0;  
 Output:C.0 = StaticOut:B.1;  
 Output:D.0 = Convert:C.0;  
 Output:E.0 = StaticOut:A.1;  
 Output:F.0 = Convert.0;  
 Output:G.0 = StaticOut.1;  
 DynamicOut.0 = Input:D.0;  
 Convert.0 = Junction.2;  //_GUI 55,79
 Convert.1 = DynamicOut.0;  
 Convert.3 = Junction:B.2;  
 Junction.0 = Junction:E.2;  
 Junction:A.0 = DynamicOut:A.0;  //_GUI 49,23, 49,20
 Convert:A.0 = Junction:E.1;  
 Convert:A.1 = DynamicOut:B.0;  
 Convert:A.3 = Junction:C.2;  
 Convert:B.0 = Junction:A.1;  
 Convert:B.1 = Input:A.0;  
 Convert:B.3 = Junction:C.1;  //_GUI 58,32
 Convert:C.0 = Junction.1;  
 Convert:C.1 = DynamicOut:C.0;  //_GUI 48,65
 Convert:C.3 = Junction:D.2;  
 RegEn.0 = Convert.1;  
 RegEn.2 = Convert.3;  
 OneShot.0 = Input:E.0;  
 Junction:B.0 = OneShot.0;  //_GUI 58,92
 Junction:C.0 = Junction:D.1;  
 Junction:D.0 = Junction:B.1;  
 RegEn:A.0 = Convert:B.1;  
 RegEn:A.2 = Convert:B.3;  
 DynamicOut:A.0 = Junction:F.1;  
 Junction:E.0 = Junction:A.2;  
 DynamicOut:B.0 = Input:B.0;  
 StaticOut.0 = Junction:G.2;  //_GUI 99,87
 StaticOut.1 = RegEn.0;  //_GUI 100,90, 100,83
 StaticOut:A.0 = Junction:G.1;  
 StaticOut:A.1 = RegEn:C.0;  //_GUI 100,73, 100,66
 StaticOut:B.0 = Junction:H.1;  
 StaticOut:B.1 = RegEn:B.0;  //_GUI 100,53, 100,46
 StaticOut:C.0 = Junction:I.1;  
 StaticOut:C.1 = RegEn:A.0;  //_GUI 100,34, 100,27
 Junction:F.0 = Input.0;  
 Junction:G.0 = Junction:H.2;  
 Junction:H.0 = Junction:I.2;  
 Junction:I.0 = Junction:F.0;  //_GUI 99,14, 29,14
 RegEn:B.0 = Convert:A.1;  
 RegEn:B.2 = Convert:A.3;  
 DynamicOut:C.0 = Input:C.0;  
 RegEn:C.0 = Convert:C.1;  
 RegEn:C.2 = Convert:C.3;  
}

Object ( Bit OFL_MSB008, Variant Q_MSB008, Bit OFL_MSB032
    , Variant Q_MSB032, Bit "OFL_Signed(16)", Variant "Q_Signed(16)", Bit "OFL_Fixed(16 . 16)"
    , Variant "Q_Fixed(16 . 16)", Bit "OFL_Float(9 . 23)", Variant "Q_Float(9 . 23)") "Ex_Convert->Num(3,3)"( MSB008 D_MSB008
    , MSB032 D_MSB032, Int "D_Signed(16)", Fix32 "D_Fixed(16 . 16)", Float "D_Float(9 . 23)"
    , Bit Go) 
//_Attributes TreeGroup=CoreLib_Examples\Converters/Extenders\Examples\Ex
{
// Date:
// 08 Feb 2003
 //_ Object Prototypes
 Object ( MSB008 D_MSB008) Input;  //_GUI 40,25
 Object ( MSB032 D_MSB032) Input:A;  //_GUI 39,44
 Object ( Int "D_Signed(16)") Input:B;  //_GUI 27,62
 Object ( Fix32 "D_Fixed(16 . 16)") Input:C;  //_GUI 29,81
 Object ( Float "D_Float(9 . 23)") Input:D;  //_GUI 30,98
 Object ( Bit Go) Input:E;  //_GUI 29,107
 Object Output( Bit OFL_MSB008) ;  //_GUI 101,22
 Object Output:A( Variant Q_MSB008) ;  //_GUI 101,26
 Object Output:B( Bit OFL_MSB032) ;  //_GUI 101,41
 Object Output:C( Variant Q_MSB032) ;  //_GUI 101,45
 Object Output:D( Bit "OFL_Signed(16)") ;  //_GUI 101,59
 Object Output:E( Variant "Q_Signed(16)") ;  //_GUI 101,63
 Object Output:F( Bit "OFL_Fixed(16 . 16)") ;  //_GUI 101,78
 Object Output:G( Variant "Q_Fixed(16 . 16)") ;  //_GUI 101,82
 Object Output:H( Bit "OFL_Float(9 . 23)") ;  //_GUI 101,95
 Object Output:I( Variant "Q_Float(9 . 23)") ;  //_GUI 101,99
 Object ( MSB016 Out1, MSB016 Out2, MSB016 Out3) Junction
    ( MSB016 In1) ;  //_GUI 54,41
 Object ( Variant Q) RegEn( Variant D, Bit ClkG
    , Bit EN) ;  //_GUI 85,24
 Object ( Variant Q) RegEn:A( Variant D, Bit ClkG
    , Bit EN) ;  //_GUI 85,43
 Object ( Variant Q) RegEn:B( Variant D, Bit ClkG
    , Bit EN) ;  //_GUI 85,61
 Object ( Variant Q) RegEn:C( Variant D, Bit ClkG
    , Bit EN) ;  //_GUI 85,80
 Object ( Variant Q) RegEn:D( Variant D, Bit ClkG
    , Bit EN) ;  //_GUI 85,97
 Object ( Variant Out1) DynamicOut( Variant In1) ;  //_GUI 35,79
 Object ( Variant Out1) DynamicOut:A( Variant In1) ;  //_GUI 35,60
 Object ( Variant Out1) DynamicOut:B( Variant In1) ;  //_GUI 36,96
 Object ( Bit OFL, Variant Out1, Bit ClkG
    , Bit Done, Bit Busy) Convert( Variant Type, Variant Data
    , Bit ClkG, Bit Go, Bit Wait) ;  //_GUI 62,94
 Object ( MSB016 Out1, MSB016 Out2, MSB016 Out3) Junction:A
    ( MSB016 In1) ;  //_GUI 54,78
 Object ( MSB016 Out1, MSB016 Out2, MSB016 Out3) Junction:B
    ( MSB016 In0) ;  //_GUI 54,22
 Object ( Bit OFL, Variant Out1, Bit ClkG
    , Bit Done, Bit Busy) Convert:A( Variant Type, Variant Data
    , Bit ClkG, Bit Go, Bit Wait) ;  //_GUI 62,40
 Object ( Bit OFL, Variant Out1, Bit ClkG
    , Bit Done, Bit Busy) Convert:B( Variant Type, Variant Data
    , Bit ClkG, Bit Go, Bit Wait) ;  //_GUI 62,21
 Object ( Bit OFL, Variant Out1, Bit ClkG
    , Bit Done, Bit Busy) Convert:C( Variant Type, Variant Data
    , Bit ClkG, Bit Go, Bit Wait) ;  //_GUI 62,58
 Object ( Bit OFL, Variant Out1, Bit ClkG
    , Bit Done, Bit Busy) Convert:D( Variant Type, Variant Data
    , Bit ClkG, Bit Go, Bit Wait) ;  //_GUI 62,77
 Object ( MSB016 MSB016) Input:F;  //_GUI 41,19
 //_Attributes Constant="*0"
 Object ( MSB016 Out1, MSB016 Out2, MSB016 Out3) Junction:C
    ( MSB016 In1) ;  //_GUI 54,59
 Object ( Bit Pulse) OneShot( Bit I, Bit ClkG) ;  //_GUI 35,106
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:D
    ( Bit In3) ;  //_GUI 57,104
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:E
    ( Bit In3) ;  //_GUI 57,50
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:F
    ( Bit In3) ;  //_GUI 57,68
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:G
    ( Bit In3) ;  //_GUI 57,87

 // Behavior Topology
 Output.0 = Convert:B.0;  
 Output:A.0 = RegEn.0;  
 Output:B.0 = Convert:A.0;  
 Output:C.0 = RegEn:A.0;  
 Output:D.0 = Convert:C.0;  
 Output:E.0 = RegEn:B.0;  
 Output:F.0 = Convert:D.0;  
 Output:G.0 = RegEn:C.0;  
 Output:H.0 = Convert.0;  
 Output:I.0 = RegEn:D.0;  
 Junction.0 = Junction:B.2;  
 RegEn.0 = Convert:B.1;  
 RegEn.2 = Convert:B.3;  
 RegEn:A.0 = Convert:A.1;  
 RegEn:A.2 = Convert:A.3;  
 RegEn:B.0 = Convert:C.1;  
 RegEn:B.2 = Convert:C.3;  
 RegEn:C.0 = Convert:D.1;  
 RegEn:C.2 = Convert:D.3;  
 RegEn:D.0 = Convert.1;  
 RegEn:D.2 = Convert.3;  
 DynamicOut.0 = Input:C.0;  
 DynamicOut:A.0 = Input:B.0;  
 DynamicOut:B.0 = Input:D.0;  
 Convert.0 = Junction:A.2;  //_GUI 55,96
 Convert.1 = DynamicOut:B.0;  
 Convert.3 = Junction:D.2;  
 Junction:A.0 = Junction:C.2;  
 Junction:B.0 = Input:F.0;  //_GUI 49,23, 49,20
 Convert:A.0 = Junction.1;  
 Convert:A.1 = Input:A.0;  
 Convert:A.3 = Junction:E.2;  
 Convert:B.0 = Junction:B.1;  
 Convert:B.1 = Input.0;  
 Convert:B.3 = Junction:E.1;  //_GUI 58,32
 Convert:C.0 = Junction:C.1;  
 Convert:C.1 = DynamicOut:A.0;  
 Convert:C.3 = Junction:F.2;  
 Convert:D.0 = Junction:A.1;  
 Convert:D.1 = DynamicOut.0;  
 Convert:D.3 = Junction:G.2;  
 Junction:C.0 = Junction.2;  
 OneShot.0 = Input:E.0;  
 Junction:D.0 = OneShot.0;  //_GUI 58,109
 Junction:E.0 = Junction:F.1;  
 Junction:F.0 = Junction:G.1;  
 Junction:G.0 = Junction:D.1;  
}

Object ( Bit OFL_MSB032, Variant Q_MSB032, Bit "OFL_Signed(16)"
    , Variant "Q_Signed(16)", Bit "OFL_Fixed(16 . 16)", Variant "Q_Fixed(16 . 16)", Bit "OFL_Float(9 . 23)"
    , Variant "Q_Float(9 . 23)") "Ex_Convert->Signed(3,3)"( Int "Signed(32)", MSB032 D_MSB032, Int "D_Signed(16)"
    , Fix32 "D_Fixed(16 . 16)", Float "D_Float(9 . 23)", Bit Go) 
//_Attributes TreeGroup=CoreLib_Examples\Converters/Extenders\Examples\Ex
{
// Date:
// 08 Feb 2003
 //_ Object Prototypes
 Object ( Int "Signed(32)") Input;  //_GUI 23,19
 Object ( MSB032 D_MSB032) Input:A;  //_GUI 39,25
 Object ( Int "D_Signed(16)") Input:B;  //_GUI 26,44
 Object ( Fix32 "D_Fixed(16 . 16)") Input:C;  //_GUI 29,64
 Object ( Float "D_Float(9 . 23)") Input:D;  //_GUI 30,81
 Object ( Bit Go) Input:E;  //_GUI 29,90
 Object Output( Bit OFL_MSB032) ;  //_GUI 119,22
 Object Output:A( Variant Q_MSB032) ;  //_GUI 119,33
 Object Output:B( Bit "OFL_Signed(16)") ;  //_GUI 119,41
 Object Output:C( Variant "Q_Signed(16)") ;  //_GUI 118,52
 Object Output:D( Bit "OFL_Fixed(16 . 16)") ;  //_GUI 119,61
 Object Output:E( Variant "Q_Fixed(16 . 16)") ;  //_GUI 119,72
 Object Output:F( Bit "OFL_Float(9 . 23)") ;  //_GUI 119,78
 Object Output:G( Variant "Q_Float(9 . 23)") ;  //_GUI 118,89
 Object ( Variant Q) RegEn( Variant D, Bit ClkG
    , Bit EN) ;  //_GUI 85,63
 Object ( Variant Q) RegEn:A( Variant D, Bit ClkG
    , Bit EN) ;  //_GUI 85,80
 Object ( Variant Out1) DynamicOut( Variant In1) ;  //_GUI 35,62
 Object ( Variant Out1) DynamicOut:A( Variant In1) ;  //_GUI 36,79
 Object ( Bit OFL, Variant Out1, Bit ClkG
    , Bit Done, Bit Busy) Convert( Variant Type, Variant Data
    , Bit ClkG, Bit Go, Bit Wait) ;  //_GUI 62,77
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction
    ( Variant In1) ;  //_GUI 54,61
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:A
    ( Variant In0) ;  //_GUI 54,22
 Object ( Bit OFL, Variant Out1, Bit ClkG
    , Bit Done, Bit Busy) Convert:A( Variant Type, Variant Data
    , Bit ClkG, Bit Go, Bit Wait) ;  //_GUI 62,40
 Object ( Bit OFL, Variant Out1, Bit ClkG
    , Bit Done, Bit Busy) Convert:B( Variant Type, Variant Data
    , Bit ClkG, Bit Go, Bit Wait) ;  //_GUI 62,21
 Object ( Bit OFL, Variant Out1, Bit ClkG
    , Bit Done, Bit Busy) Convert:C( Variant Type, Variant Data
    , Bit ClkG, Bit Go, Bit Wait) ;  //_GUI 62,60
 Object ( Variant Q) RegEn:B( Variant D, Bit ClkG
    , Bit EN) ;  //_GUI 85,43
 Object ( Bit Pulse) OneShot( Bit I, Bit ClkG) ;  //_GUI 35,89
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:B
    ( Bit In3) ;  //_GUI 57,87
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:C
    ( Bit In3) ;  //_GUI 57,50
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:D
    ( Bit In3) ;  //_GUI 57,70
 Object ( Variant Q) RegEn:C( Variant D, Bit ClkG
    , Bit EN) ;  //_GUI 85,24
 Object ( Variant Out1) DynamicOut:B( Variant In1) ;  //_GUI 32,17
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:E
    ( Variant In1) ;  //_GUI 54,41
 Object ( Variant Out1) DynamicOut:C( Variant In1) ;  //_GUI 34,42
 Object ( Bit OFL, Variant Out1) StaticOut( Variant Type
    , Variant Data) ;  //_GUI 104,85
 Object ( Bit OFL, Variant Out1) StaticOut:A( Variant Type
    , Variant Data) ;  //_GUI 104,68
 Object ( Bit OFL, Variant Out1) StaticOut:B( Variant Type
    , Variant Data) ;  //_GUI 104,48
 Object ( Bit OFL, Variant Out1) StaticOut:C( Variant Type
    , Variant Data) ;  //_GUI 104,29
 Object ( Int Out1, Int Out2, Int Out3) Junction:F
    ( Int In0) ;  //_GUI 28,19
 Object ( Int Out1, Int Out2, Int Out3) Junction:G
    ( Int In1) ;  //_GUI 98,69
 Object ( Int Out1, Int Out2, Int Out3) Junction:H
    ( Int In1) ;  //_GUI 98,49
 Object ( Int Out1, Int Out2, Int Out3) Junction:I
    ( Int In1) ;  //_GUI 98,30

 // Behavior Topology
 Output.0 = Convert:B.0;  
 Output:A.0 = StaticOut:C.1;  
 Output:B.0 = Convert:A.0;  
 Output:C.0 = StaticOut:B.1;  
 Output:D.0 = Convert:C.0;  
 Output:E.0 = StaticOut:A.1;  
 Output:F.0 = Convert.0;  
 Output:G.0 = StaticOut.1;  
 RegEn.0 = Convert:C.1;  
 RegEn.2 = Convert:C.3;  
 RegEn:A.0 = Convert.1;  
 RegEn:A.2 = Convert.3;  
 DynamicOut.0 = Input:C.0;  
 DynamicOut:A.0 = Input:D.0;  
 Convert.0 = Junction.2;  //_GUI 55,79
 Convert.1 = DynamicOut:A.0;  
 Convert.3 = Junction:B.2;  
 Junction.0 = Junction:E.2;  
 Junction:A.0 = DynamicOut:B.0;  //_GUI 49,23, 49,20
 Convert:A.0 = Junction:E.1;  
 Convert:A.1 = DynamicOut:C.0;  
 Convert:A.3 = Junction:C.2;  
 Convert:B.0 = Junction:A.1;  
 Convert:B.1 = Input:A.0;  
 Convert:B.3 = Junction:C.1;  //_GUI 58,32
 Convert:C.0 = Junction.1;  
 Convert:C.1 = DynamicOut.0;  
 Convert:C.3 = Junction:D.2;  
 RegEn:B.0 = Convert:A.1;  
 RegEn:B.2 = Convert:A.3;  
 OneShot.0 = Input:E.0;  
 Junction:B.0 = OneShot.0;  //_GUI 58,92
 Junction:C.0 = Junction:D.1;  
 Junction:D.0 = Junction:B.1;  
 RegEn:C.0 = Convert:B.1;  
 RegEn:C.2 = Convert:B.3;  
 DynamicOut:B.0 = Junction:F.1;  
 Junction:E.0 = Junction:A.2;  
 DynamicOut:C.0 = Input:B.0;  
 StaticOut.0 = Junction:G.2;  //_GUI 99,87
 StaticOut.1 = RegEn:A.0;  //_GUI 100,90, 100,83
 StaticOut:A.0 = Junction:G.1;  
 StaticOut:A.1 = RegEn.0;  //_GUI 100,73, 100,66
 StaticOut:B.0 = Junction:H.1;  
 StaticOut:B.1 = RegEn:B.0;  //_GUI 100,53, 100,46
 StaticOut:C.0 = Junction:I.1;  
 StaticOut:C.1 = RegEn:C.0;  //_GUI 100,34, 100,27
 Junction:F.0 = Input.0;  
 Junction:G.0 = Junction:H.2;  
 Junction:H.0 = Junction:I.2;  
 Junction:I.0 = Junction:F.0;  //_GUI 99,14, 29,14
}

Object ( Variant Out1, Variant Out2, Variant Out3
    , Variant Out4, Variant Out5, Variant Out6, Variant Out7) Ex_PackBIN
    ( Variant In1, Variant In2, Variant In3, Variant In4
    , Variant In5, Variant In6) 
//_Attributes TreeGroup=CoreLib_Examples\Exposers/Collectors\Examples\Ex
{
// Object Name:
// Ex_PackBIN
//
// Description:
// PackBin Example
//
//
//
//
// Date:
//
// 01/17/04
 //_ Object Prototypes
 Object ( Variant In1) Input;  //_GUI 44,30
 Object ( Variant In2) Input:A;  //_GUI 44,33
 Object ( Variant In3) Input:B;  //_GUI 44,36
 Object ( Variant In4) Input:C;  //_GUI 44,39
 Object ( Variant In5) Input:D;  //_GUI 44,42
 Object ( Variant In6) Input:E;  //_GUI 44,45
 Object Output( Variant Out1) ;  //_GUI 86,30
 Object Output:A( Variant Out2) ;  //_GUI 86,33
 Object Output:B( Variant Out3) ;  //_GUI 86,36
 Object Output:C( Variant Out4) ;  //_GUI 86,39
 Object Output:D( Variant Out5) ;  //_GUI 86,42
 Object Output:E( Variant Out6) ;  //_GUI 86,45
 Object Output:F( Variant Out7) ;  //_GUI 86,48
 Object ( List Out1) PackBIN( Variant In1, Variant In2
    , Variant In3, Variant In4, Variant In5, Variant In6) ;  //_GUI 52,29
 Object ( Variant Out1, Variant Out2, Variant Out3
    , Variant Out4, Variant Out5, Variant Out6, Variant Out7) UnPackBIN
    ( Variant In1) ;  //_GUI 70,29
 Object Text;  //_GUI 47,54,An UnPack object will only expose a List.  If your List does not match the UnPack object, it will generally UnPack the List it is given, removing some ouput nodes and raising a warning message.  In this example, you will only get 6 outputs, matching the 6 inputs.
 Object Text;  //_GUI 56,20,PackBin ExampleArial,10,255,1

 // Behavior Topology
 Output.0 = UnPackBIN.0;  
 Output:A.0 = UnPackBIN.1;  
 Output:B.0 = UnPackBIN.2;  
 Output:C.0 = UnPackBIN.3;  
 Output:D.0 = UnPackBIN.4;  
 Output:E.0 = UnPackBIN.5;  
 Output:F.0 = UnPackBIN.6;  
 PackBIN.0 = Input.0;  
 PackBIN.1 = Input:A.0;  
 PackBIN.2 = Input:B.0;  
 PackBIN.3 = Input:C.0;  
 PackBIN.4 = Input:D.0;  
 PackBIN.5 = Input:E.0;  
 UnPackBIN.0 = PackBIN.0;  
}

Object ( Variant OUT_1a, Variant OUT_1b, Variant OUT_2a
    , Variant OUT_2b, Variant AND, Variant INVERT, Variant OR
    , Variant XOR) Ex_Gates1( MSB002 In_1, MSB002 In_2) 
//_Attributes TreeGroup=CoreLib_Examples\Gates\Examples\Ex
{
// Description:
// Basic Gates example sheet.
//
//
//
//
// Date:
//
// 01/20/04
 //_ Object Prototypes
 Object ( MSB002 In_1) Input;  //_GUI 12,35
 Object ( MSB002 In_2) Input:A;  //_GUI 12,38
 Object Output( Variant OUT_1a) ;  //_GUI 77,15
 Object Output:A( Variant OUT_1b) ;  //_GUI 77,18
 Object Output:B( Variant OUT_2a) ;  //_GUI 77,24
 Object Output:C( Variant OUT_2b) ;  //_GUI 77,27
 Object Output:D( Variant AND) ;  //_GUI 45,36
 Object Output:E( Variant INVERT) ;  //_GUI 44,52
 Object Output:F( Variant OR) ;  //_GUI 45,67
 Object Output:G( Variant XOR) ;  //_GUI 44,83
 Object ( MSB002 Out1, MSB002 Out2, MSB002 Out3) Junction
    ( MSB002 In1) ;  //_GUI 28,52
 Object ( MSB002 Out1, MSB002 Out2, MSB002 Out3) Junction:A
    ( MSB002 In1) ;  //_GUI 28,69
 Object ( MSB002 Out1, MSB002 Out2, MSB002 Out3) Junction:B
    ( MSB002 In0) ;  //_GUI 24,35
 Object ( MSB002 Out1, MSB002 Out2, MSB002 Out3) Junction:C
    ( MSB002 In1) ;  //_GUI 24,66
 Object ( Variant Out1) INVERT( Variant In1) ;  //_GUI 32,50
 Object ( MSB002 Out1, MSB002 Out2, MSB002 Out3) Junction:D
    ( MSB002 In0) ;  //_GUI 28,38
 Object Text;  //_GUI 57,6,Example: GatesArial,10,16711680,1
 Object Text;  //_GUI 79,52,This is a simple example to show the function of the "Var" versions of basic logic gates.  By toggling the inputs the resultant outputs can be compared the input values.  The default data type applied to the input is MSB002.  To see how these gates function with other data sets the input  types can be changed to the desired data sets.
 Object ( Variant Out1) OR( Variant In1, Variant In2) ;  //_GUI 34,65
 Object ( Variant Out1) XOR( Variant In1, Variant In2) ;  //_GUI 33,81
 Object ( Variant Out1, Variant Out11) ExposeMSB( Variant In1) ;  //_GUI 62,14
 //_Attributes Documentation=Error
 Object ( Variant Out1) AND( Variant In1, Variant In2) ;  //_GUI 33,34
 Object ( Variant Out1, Variant Out11) ExposeMSB:A( Variant In1) ;  //_GUI 62,23
 //_Attributes Documentation=Error
 Object Text;  //_GUI 91,19,These outputs show the input values broken into single bit chunks.

 // Behavior Topology
 Output.0 = ExposeMSB.0;  
 Output:A.0 = ExposeMSB.1;  
 Output:B.0 = ExposeMSB:A.0;  
 Output:C.0 = ExposeMSB:A.1;  
 Output:D.0 = AND.0;  
 Output:E.0 = INVERT.0;  
 Output:F.0 = OR.0;  
 Output:G.0 = XOR.0;  
 Junction.0 = Junction:D.2;  
 Junction:A.0 = Junction.2;  
 Junction:B.0 = Input.0;  
 Junction:C.0 = Junction:B.2;  
 INVERT.0 = Junction.1;  
 Junction:D.0 = Input:A.0;  
 OR.0 = Junction:C.1;  
 OR.1 = Junction:A.1;  
 XOR.0 = Junction:C.2;  //_GUI 25,83
 XOR.1 = Junction:A.2;  //_GUI 29,86
 ExposeMSB.0 = Junction:B.0;  //_GUI 25,17
 AND.0 = Junction:B.1;  
 AND.1 = Junction:D.1;  
 ExposeMSB:A.0 = Junction:D.0;  //_GUI 29,26
}

Object ( Variant "#0a", Variant "#1a", Variant "#0b"
    , Variant "#1b", Variant "#0c", Variant "#1c", Variant "#0d"
    , Variant "#1d") Ex_SelectOut( Variant In1, Bit S, Variant In1
    , Variant In3, Bit S, Variant In5, Bit S) 
//_Attributes TreeGroup=CoreLib_Examples\Gates\Examples\Ex
{
// Description:
// Example Sheet for the $SelectOut object.
//
//
//
//
// Date:
//
// 01/30/04
 //_ Object Prototypes
 Object ( Variant In1) Input;  //_GUI 9,17
 Object ( Bit S) Input:A;  //_GUI 10,28
 //_Attributes Constant="1"
 Object ( Variant In1) Input:B;  //_GUI 10,37
 Object ( Variant In3) Input:C;  //_GUI 11,64
 //_Attributes Constant="2"
 Object ( Bit S) Input:D;  //_GUI 11,71
 //_Attributes Constant="0"
 Object ( Variant In5) Input:E;  //_GUI 11,85
 //_Attributes Constant="3"
 Object ( Bit S) Input:F;  //_GUI 11,92
 //_Attributes Constant="1"
 Object Output( Variant "#0a") ;  //_GUI 58,14
 Object Output:A( Variant "#1a") ;  //_GUI 58,28
 Object Output:B( Variant "#0b") ;  //_GUI 59,34
 Object Output:C( Variant "#1b") ;  //_GUI 59,48
 Object Output:D( Variant "#0c") ;  //_GUI 50,61
 Object Output:E( Variant "#1c") ;  //_GUI 50,75
 Object Output:F( Variant "#0d") ;  //_GUI 50,82
 Object Output:G( Variant "#1d") ;  //_GUI 50,96
 Object Text;  //_GUI 71,20,S == 1, Out 1 == plugged in value
 Object Text;  //_GUI 71,69,S == 0, #0 == 2
 Object Text;  //_GUI 72,91,S == 1, #1 == 3
 Object Text;  //_GUI 42,104,Notice that only Selected Outputs compile and appear  on widget form.Arial,8,255,1
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction
    ( Bit In0) ;  //_GUI 20,28
 Object ( Bit Out) INVERT( Bit In1) ;  //_GUI 29,43
 Object ( Variant "#0", Variant "#1") $SelectOut( Variant In1
    , Bit S) ;  //_GUI 31,86
 Object ( Variant "#0", Variant "#1") $SelectOut:A( Variant In1
    , Bit S) ;  //_GUI 31,65
 Object ( Variant "#0", Variant "#1") $SelectOut:B( Variant In1
    , Bit S) ;  //_GUI 39,18
 Object ( Variant "#0", Variant "#1") $SelectOut:C( Variant In1
    , Bit S) ;  //_GUI 40,38
 Object Text;  //_GUI 71,41,S == 0, Out 0 == plugged in value
 Object Text;  //_GUI 51,6,Example: SelectOutArial,8,255,1
 Object Text;  //_GUI 89,53,This object enables the user to create an object which
 Object ( Variant Out) $Select( Variant "#0", Variant "#1"
    , Bit S) ;  //_GUI 103,20

 // Behavior Topology
 Output.0 = $SelectOut:B.0;  //_GUI 51,15
 Output:A.0 = $SelectOut:B.1;  //_GUI 51,29
 Output:B.0 = $SelectOut:C.0;  //_GUI 52,35
 Output:C.0 = $SelectOut:C.1;  //_GUI 52,49
 Output:D.0 = $SelectOut:A.0;  //_GUI 43,62
 Output:E.0 = $SelectOut:A.1;  //_GUI 43,76
 Output:F.0 = $SelectOut.0;  //_GUI 43,83
 Output:G.0 = $SelectOut.1;  //_GUI 43,97
 Junction.0 = Input:A.0;  
 INVERT.0 = Junction.2;  //_GUI 21,46
 $SelectOut.0 = Input:E.0;  //_GUI 31,86
 $SelectOut.1 = Input:F.0;  //_GUI 31,93
 $SelectOut:A.0 = Input:C.0;  //_GUI 31,65
 $SelectOut:A.1 = Input:D.0;  //_GUI 31,72
 $SelectOut:B.0 = Input.0;  //_GUI 39,18
 $SelectOut:B.1 = Junction.1;  //_GUI 39,29
 $SelectOut:C.0 = Input:B.0;  //_GUI 40,38
 $SelectOut:C.1 = INVERT.0;  //_GUI 40,46
}

Object ( Variant O1, Variant O2, Variant O3
    , Variant O4, Variant Out5) Ex_ListXor( Variant D1, Variant D2
    , Variant D3, Bit B1, Bit B2, Bit B3
    , Bit B4, Bit B5, Bit B6, Bit B7
    , Bit B8) 
//_Attributes TreeGroup=CoreLib_Examples\Gates\Examples\Ex
{
// Description:
// Example Sheet for ListMux
//
//
//
//
// Date:
//
// 01/30/04
 //_ Object Prototypes
 Object ( Variant D1) Input;  //_GUI 36,31
 Object ( Variant D2) Input:A;  //_GUI 36,34
 Object ( Variant D3) Input:B;  //_GUI 36,41
 Object ( Bit B1) Input:C;  //_GUI 36,60
 Object ( Bit B2) Input:D;  //_GUI 36,63
 Object ( Bit B3) Input:E;  //_GUI 36,66
 Object ( Bit B4) Input:F;  //_GUI 36,69
 Object ( Bit B5) Input:G;  //_GUI 36,72
 Object ( Bit B6) Input:H;  //_GUI 36,75
 Object ( Bit B7) Input:I;  //_GUI 36,78
 Object ( Bit B8) Input:J;  //_GUI 36,81
 Object Output( Variant O1) ;  //_GUI 81,38
 Object Output:A( Variant O2) ;  //_GUI 81,41
 Object Output:B( Variant O3) ;  //_GUI 81,50
 Object Output:C( Variant O4) ;  //_GUI 81,53
 Object Output:D( Variant Out5) ;  //_GUI 81,61
 Object ( Variant Out1) CollectMSB( Variant In1, Variant In2
    , Variant In3, Variant In4, Variant In5, Variant In6
    , Variant In7, Variant In8) ;  //_GUI 55,59
 Object ( Variant Out1, Variant Out2) ListIn( List In) ;  //_GUI 70,49
 Object ( List Out) ListOut( Variant In1, Variant In2) ;  //_GUI 40,30
 Object ( List Out1) XOR( List In1, Variant In2) ;  //_GUI 60,37
 //_Attributes Documentation=List/Variant
 Object ( List Out1) XOR:A( Variant In1, List In2) ;  //_GUI 60,49
 //_Attributes Documentation=Variant/List
 Object ( Variant Out1, Variant Out2) ListIn:A( List In) ;  //_GUI 70,37
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction
    ( Variant In0) ;  //_GUI 50,41
 Object ( List Out1, List Out2, List Out3) Junction:A
    ( List In1) ;  //_GUI 54,38
 Object ( Variant Out1) XOR-NInput( Variant In1) ;  //_GUI 68,59
 Object Text;  //_GUI 50,13,Example: ListXorArial,10,8388608,1

 // Behavior Topology
 Output.0 = ListIn:A.1;  
 Output:A.0 = ListIn:A.0;  
 Output:B.0 = ListIn.1;  
 Output:C.0 = ListIn.0;  
 Output:D.0 = XOR-NInput.0;  
 CollectMSB.0 = Input:C.0;  
 CollectMSB.1 = Input:D.0;  
 CollectMSB.2 = Input:E.0;  
 CollectMSB.3 = Input:F.0;  
 CollectMSB.4 = Input:G.0;  
 CollectMSB.5 = Input:H.0;  
 CollectMSB.6 = Input:I.0;  
 CollectMSB.7 = Input:J.0;  
 ListIn.0 = XOR:A.0;  
 ListOut.0 = Input:A.0;  
 ListOut.1 = Input.0;  
 XOR.0 = Junction:A.1;  
 XOR.1 = Junction.1;  
 XOR:A.0 = Junction.2;  //_GUI 51,51
 XOR:A.1 = Junction:A.2;  //_GUI 55,54
 ListIn:A.0 = XOR.0;  
 Junction.0 = Input:B.0;  
 Junction:A.0 = ListOut.0;  //_GUI 55,33
 XOR-NInput.0 = CollectMSB.0;  
}

Object ( Variant Out1, Variant Out2, Variant Out3
    , Variant Out4, Variant Out5) Ex_XOR-NInput( Bit Bit, LSB008 LSB008
    , MSB008 MSB008, BIN008 BIN008, LSB008 LSB008, Bit Bit
    , MSB008 MSB008, LSB008 LSB008, BIN008 BIN008, BIN008 BIN008
    , Bit Bit) 
//_Attributes TreeGroup=CoreLib_Examples\Gates\Examples\Ex
{
 //_ Object Prototypes
 Object ( Bit Bit) Input;  //_GUI 25,24
 Object ( LSB008 LSB008) Input:A;  //_GUI 25,34
 Object ( MSB008 MSB008) Input:B;  //_GUI 25,42
 Object ( BIN008 BIN008) Input:C;  //_GUI 25,50
 Object ( LSB008 LSB008) Input:D;  //_GUI 50,69
 Object ( Bit Bit) Input:E;  //_GUI 50,72
 Object ( MSB008 MSB008) Input:F;  //_GUI 22,75
 Object ( LSB008 LSB008) Input:G;  //_GUI 50,76
 Object ( BIN008 BIN008) Input:H;  //_GUI 22,78
 Object ( BIN008 BIN008) Input:I;  //_GUI 22,86
 Object ( Bit Bit) Input:J;  //_GUI 22,89
 Object Output( Variant Out1) ;  //_GUI 46,24
 Object Output:A( Variant Out2) ;  //_GUI 46,34
 Object Output:B( Variant Out3) ;  //_GUI 46,42
 Object Output:C( Variant Out4) ;  //_GUI 46,50
 Object Output:D( Variant Out5) ;  //_GUI 99,76
 Object ( Variant Out1) XOR-NInput( Variant In1) ;  //_GUI 84,74
 Object ( Variant Out1) XOR-NInput:A( Variant In1) ;  //_GUI 31,48
 Object ( List Out) ListOut( Variant In1, Variant In2) ;  //_GUI 70,74
 Object ( List Out) ListOut:A( Variant In1, Variant In2) ;  //_GUI 56,76
 Object ( List Out) ListOut:B( Variant In1, Variant In2) ;  //_GUI 42,78
 Object ( List Out) ListOut:C( Variant In1, Variant In2) ;  //_GUI 28,74
 Object ( List Out) ListOut:D( Variant In1, Variant In2) ;  //_GUI 28,85
 Object ( List Out) ListOut:E( Variant In1, Variant In2) ;  //_GUI 56,68
 Object ( Variant Out1) XOR-NInput:B( Variant In1) ;  //_GUI 31,32
 Object ( Variant Out1) XOR-NInput:C( Variant In1) ;  //_GUI 31,22
 Object ( Variant Out1) XOR-NInput:D( Variant In1) ;  //_GUI 31,40

 // Behavior Topology
 Output.0 = XOR-NInput:C.0;  
 Output:A.0 = XOR-NInput:B.0;  
 Output:B.0 = XOR-NInput:D.0;  
 Output:C.0 = XOR-NInput:A.0;  
 Output:D.0 = XOR-NInput.0;  
 XOR-NInput.0 = ListOut.0;  
 XOR-NInput:A.0 = Input:C.0;  
 ListOut.0 = ListOut:A.0;  
 ListOut.1 = ListOut:E.0;  //_GUI 69,76, 69,71
 ListOut:A.0 = ListOut:B.0;  
 ListOut:A.1 = Input:G.0;  //_GUI 55,78, 55,77
 ListOut:B.0 = ListOut:D.0;  //_GUI 41,83, 41,88
 ListOut:B.1 = ListOut:C.0;  //_GUI 41,80, 41,77
 ListOut:C.0 = Input:H.0;  
 ListOut:C.1 = Input:F.0;  
 ListOut:D.0 = Input:J.0;  
 ListOut:D.1 = Input:I.0;  
 ListOut:E.0 = Input:E.0;  
 ListOut:E.1 = Input:D.0;  
 XOR-NInput:B.0 = Input:A.0;  
 XOR-NInput:C.0 = Input.0;  
 XOR-NInput:D.0 = Input:B.0;  
}

Object ( Variant "A/B", Variant "A*B", Variant "A+B"
    , Variant A-B) Ex_ArithmeticBitlength( MSB027 A_MSB027, MSB003 B_MSB003) 
//_Attributes TreeGroup=CoreLib_Examples\Grammar/Datasets\Examples\Ex
{
// Object Name:
// Ex_ArithmeticBitlength
//
// Description:
// ArithmeticBitlength example sheet
//
//
//
//
// Date:
//
// 11/15/04
 //_ Object Prototypes
 Object ( MSB027 A_MSB027) Input;  //_GUI 53,25
 Object ( MSB003 B_MSB003) Input:A;  //_GUI 53,28
 Object Output( Variant "A/B") ;  //_GUI 106,26
 Object Output:A( Variant "A*B") ;  //_GUI 106,36
 Object Output:B( Variant "A+B") ;  //_GUI 106,47
 Object Output:C( Variant A-B) ;  //_GUI 106,60
 Object ( Variant N) BitA_Mul_BitB( Variant A, Variant B) ;  //_GUI 69,34
 Object ( MSB003 Out1, MSB003 Out2, MSB003 Out3) Junction
    ( MSB003 In0) ;  //_GUI 59,28
 Object ( MSB027 Out1, MSB027 Out2, MSB027 Out3) Junction:A
    ( MSB027 In0) ;  //_GUI 62,25
 Object ( MSB003 Out1, MSB003 Out2, MSB003 Out3) Junction:B
    ( MSB003 In1) ;  //_GUI 59,38
 Object ( MSB027 Out1, MSB027 Out2, MSB027 Out3) Junction:C
    ( MSB027 In1) ;  //_GUI 62,35
 Object ( MSB003 Out1, MSB003 Out2, MSB003 Out3) Junction:D
    ( MSB003 In1) ;  //_GUI 59,49
 Object ( MSB027 Out1, MSB027 Out2, MSB027 Out3) Junction:E
    ( MSB027 In1) ;  //_GUI 62,46
 Object ( Variant Out1) BitLength( Variant Type) ;  //_GUI 91,24
 Object ( Variant N) BitA_Div_BitB( Variant A, Variant B) ;  //_GUI 69,24
 Object ( Variant Out1) BitLength:A( Variant Type) ;  //_GUI 91,34
 Object ( Variant Out1) BitLength:B( Variant Type) ;  //_GUI 91,45
 Object ( Variant Out1) BitLength:C( Variant Type) ;  //_GUI 91,58
 Object Text;  //_GUI 61,11,Arithmetic Bitlength ExampleArial,10,255,1
 Object ( Variant N) BitA_Add_BitB( Variant A, Variant B) ;  //_GUI 69,45
 Object ( Variant N) BitA_Sub_BitB( Variant A, Variant B) ;  //_GUI 69,58

 // Behavior Topology
 Output.0 = BitLength.0;  
 Output:A.0 = BitLength:A.0;  
 Output:B.0 = BitLength:B.0;  
 Output:C.0 = BitLength:C.0;  
 BitA_Mul_BitB.0 = Junction:C.1;  
 BitA_Mul_BitB.1 = Junction:B.1;  
 Junction.0 = Input:A.0;  
 Junction:A.0 = Input.0;  
 Junction:B.0 = Junction.2;  
 Junction:C.0 = Junction:A.2;  
 Junction:D.0 = Junction:B.2;  
 Junction:E.0 = Junction:C.2;  
 BitLength.0 = BitA_Div_BitB.0;  
 BitA_Div_BitB.0 = Junction:A.1;  
 BitA_Div_BitB.1 = Junction.1;  
 BitLength:A.0 = BitA_Mul_BitB.0;  
 BitLength:B.0 = BitA_Add_BitB.0;  
 BitLength:C.0 = BitA_Sub_BitB.0;  
 BitA_Add_BitB.0 = Junction:E.1;  
 BitA_Add_BitB.1 = Junction:D.1;  
 BitA_Sub_BitB.0 = Junction:E.2;  //_GUI 63,60
 BitA_Sub_BitB.1 = Junction:D.2;  //_GUI 60,63
}

Object ( Variant BitLength_MSB017, Variant BitLength_Float, Variant BitLength_4x_MSB004) Ex_Bitlength
    ( MSB017 MSB017, Float Float, MSB004 MSB004, MSB004 MSB004
    , MSB004 MSB004, MSB004 MSB004) 
//_Attributes TreeGroup=CoreLib_Examples\Grammar/Datasets\Examples\Ex
{
// Object Name:
// Ex_Bitlength
//
// Description:
// Bitlength Example
//
//
//
//
// Date:
//
// 01/17/04
 //_ Object Prototypes
 Object ( MSB017 MSB017) Input;  //_GUI 38,27
 Object ( Float Float) Input:A;  //_GUI 38,45
 Object ( MSB004 MSB004) Input:B;  //_GUI 38,63
 Object ( MSB004 MSB004) Input:C;  //_GUI 38,66
 Object ( MSB004 MSB004) Input:D;  //_GUI 38,69
 Object ( MSB004 MSB004) Input:E;  //_GUI 38,72
 Object Output( Variant BitLength_MSB017) ;  //_GUI 84,27
 Object Output:A( Variant BitLength_Float) ;  //_GUI 84,45
 Object Output:B( Variant BitLength_4x_MSB004) ;  //_GUI 84,64
 Object ( List Out1) PackBIN( Variant In1, Variant In2
    , Variant In3, Variant In4) ;  //_GUI 46,62
 Object ( Variant Out1) BitLength( Variant Type) ;  //_GUI 69,43
 Object ( Variant Out1) DynamicOut( Variant In1) ;  //_GUI 49,43
 Object ( Variant Out1) BitLength:A( Variant Type) ;  //_GUI 69,62
 Object ( Variant Out1) BitLength:B( Variant Type) ;  //_GUI 51,25
 Object Text;  //_GUI 40,15,BitLength can hadle Context-Free data setsArial,10,8388608,0
 Object Text;  //_GUI 40,35,and Contextual data setsArial,10,8388608,0
 Object Text;  //_GUI 42,55,and ListsArial,10,8388608,0
 Object Text;  //_GUI 43,80,etc...Arial,10,8388608,0
 Object Text;  //_GUI 50,6,Bitlength ExampleArial,10,255,1

 // Behavior Topology
 Output.0 = BitLength:B.0;  
 Output:A.0 = BitLength.0;  
 Output:B.0 = BitLength:A.0;  
 PackBIN.0 = Input:B.0;  
 PackBIN.1 = Input:C.0;  
 PackBIN.2 = Input:D.0;  
 PackBIN.3 = Input:E.0;  
 BitLength.0 = DynamicOut.0;  
 DynamicOut.0 = Input:A.0;  
 BitLength:A.0 = PackBIN.0;  
 BitLength:B.0 = Input.0;  
}

Object ( Variant ListSize) Ex_ListSize( Variant In1, Variant In2
    , Variant In3, Variant In4, Variant In5, Variant In6
    , Variant In7, Variant In8, Variant In9) 
//_Attributes TreeGroup=CoreLib_Examples\Grammar/Datasets\Examples\Ex
{
// Object Name:
// Ex_ListSize
//
// Description:
// ListSize Example
//
//
//
//
// Date:
//
// 01/17/04
 //_ Object Prototypes
 Object ( Variant In1) Input;  //_GUI 33,43
 Object ( Variant In2) Input:A;  //_GUI 33,46
 Object ( Variant In3) Input:B;  //_GUI 33,49
 Object ( Variant In4) Input:C;  //_GUI 33,52
 Object ( Variant In5) Input:D;  //_GUI 33,55
 Object ( Variant In6) Input:E;  //_GUI 33,58
 Object ( Variant In7) Input:F;  //_GUI 33,61
 Object ( Variant In8) Input:G;  //_GUI 33,64
 Object ( Variant In9) Input:H;  //_GUI 33,67
 Object Output( Variant ListSize) ;  //_GUI 107,39
 Object ( Variant Size) ListSize( List List) ;  //_GUI 77,37
 Object ( List Out1) PackBIN( Variant In1, Variant In2
    , Variant In3, Variant In4, Variant In5, Variant In6
    , Variant In7, Variant In8, Variant In9) ;  //_GUI 42,42
 Object ( Variant Out1) BitLength( Variant Type) ;  //_GUI 92,37
 Object ( List Out1) PackLSB( Variant In1, Variant In2
    , Variant In3) ;  //_GUI 63,37
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction
    ( Variant In0) ;  //_GUI 39,43
 Object ( List Out1, List Out2, List Out3) Junction:A
    ( List In0) ;  //_GUI 57,44
 Object Text;  //_GUI 51,28,This rather odd List contains 19 elements.Arial,9,8388608,1
 Object Text;  //_GUI 64,22,ListSize ExampleArial,10,255,1

 // Behavior Topology
 Output.0 = BitLength.0;  
 ListSize.0 = PackLSB.0;  
 PackBIN.0 = Junction.1;  
 PackBIN.1 = Input:A.0;  
 PackBIN.2 = Input:B.0;  
 PackBIN.3 = Input:C.0;  
 PackBIN.4 = Input:D.0;  
 PackBIN.5 = Input:E.0;  
 PackBIN.6 = Input:F.0;  
 PackBIN.7 = Input:G.0;  
 PackBIN.8 = Input:H.0;  
 BitLength.0 = ListSize.0;  
 PackLSB.0 = Junction.0;  //_GUI 40,39
 PackLSB.1 = Junction:A.0;  //_GUI 58,42
 PackLSB.2 = Junction:A.1;  
 Junction.0 = Input.0;  
 Junction:A.0 = PackBIN.0;  
}

Object ( Variant Out1, Variant Out2, Variant Out3
    , Variant Out4, Variant Out5, Variant Data, Variant List_Size) Ex_N_Bit_LSB_List
    ( MSB027 Data, MSB009 N, Variant In3, Variant In4
    , Variant In5, MSB008 Data_MSB008, MSB009 N_MSB009) 
//_Attributes TreeGroup=CoreLib_Examples\Grammar/Datasets\Examples\Ex
{
// Object Name:
// Ex_N_Bit_LSB_List
//
// Description:
// N_Bit_LSB_LIST example
//
//
//
//
//
// Date:
//
// 01/17/04
 //_ Object Prototypes
 Object ( MSB027 Data) Input;  //_GUI 58,47
 //_Attributes WidgetLeft=20,WidgetTop=5,WidgetWidth=129,WidgetHeight=41,Widget=TextBox
 Object ( MSB009 N) Input:A;  //_GUI 59,50
 Object ( Variant In3) Input:B;  //_GUI 60,71
 Object ( Variant In4) Input:C;  //_GUI 60,74
 Object ( Variant In5) Input:D;  //_GUI 60,77
 Object ( MSB008 Data_MSB008) Input:E;  //_GUI 39,121
 Object ( MSB009 N_MSB009) Input:F;  //_GUI 39,124
 Object Output( Variant Out1) ;  //_GUI 113,35
 Object Output:A( Variant Out2) ;  //_GUI 113,38
 Object Output:B( Variant Out3) ;  //_GUI 113,41
 Object Output:C( Variant Out4) ;  //_GUI 94,50
 Object Output:D( Variant Out5) ;  //_GUI 92,72
 //_Attributes WidgetLeft=340,WidgetTop=225,WidgetWidth=129,WidgetHeight=41,Widget=TextBox
 Object Output:E( Variant Data) ;  //_GUI 84,121
 Object Output:F( Variant List_Size) ;  //_GUI 90,138
 Object ( Variant Out1, Variant Out2, Variant Out3) UnPackLSB
    ( List In1) ;  //_GUI 98,34
 Object Text;  //_GUI 57,23,N_Bit_LSB_List_ExampleArial,10,255,1
 Object ( List Out1) PackLSB( Variant In1, Variant In2
    , Variant In3) ;  //_GUI 66,70
 Object ( Variant Data, Variant Size) N_Bit_LSB_List( Variant Data
    , Variant N) ;  //_GUI 63,46
 Object ( Variant Out1) MSB( Variant In1) ;  //_GUI 80,70
 Object ( Variant Out1) BitLength( Variant Type) ;  //_GUI 81,48
 Object ( Variant Out1) BitLength:A( Variant Type) ;  //_GUI 75,136
 Object ( Variant Data, Variant Size) N_Bit_LSB_List:A( Variant Data
    , Variant N) ;  //_GUI 51,120
 Object Text;  //_GUI 37,148,Here we have a strange set of circumstances where the bitlength of N is greater than the bitlength of Data.  The Data output is a single data set, not a List, which has been padded to have N's bitlength.Arial,10,0,0
 Object Text;  //_GUI 47,103,N_Bit_LSB_List  Example #2Arial,10,255,1

 // Behavior Topology
 Output.0 = UnPackLSB.0;  
 Output:A.0 = UnPackLSB.1;  
 Output:B.0 = UnPackLSB.2;  
 Output:C.0 = BitLength.0;  
 Output:D.0 = MSB.0;  
 Output:E.0 = N_Bit_LSB_List:A.0;  
 Output:F.0 = BitLength:A.0;  
 UnPackLSB.0 = N_Bit_LSB_List.0;  //_GUI 82,37, 82,48
 PackLSB.0 = Input:B.0;  
 PackLSB.1 = Input:C.0;  
 PackLSB.2 = Input:D.0;  
 N_Bit_LSB_List.0 = Input.0;  
 N_Bit_LSB_List.1 = Input:A.0;  
 MSB.0 = PackLSB.0;  
 BitLength.0 = N_Bit_LSB_List.1;  
 BitLength:A.0 = N_Bit_LSB_List:A.1;  //_GUI 68,139, 68,125
 N_Bit_LSB_List:A.0 = Input:E.0;  
 N_Bit_LSB_List:A.1 = Input:F.0;  
}

Object ( Variant Reverse, Variant Forward) Ex_ReverseBits( Variant In1) 
//_Attributes TreeGroup=CoreLib_Examples\Grammar/Datasets\Examples\Ex
{
// Object Name:
// Ex_ReverseBits
//
// Description:
// ReverseBits example
//
//
//
//
//
// Date:
//
// 01/17/04
 //_ Object Prototypes
 Object ( Variant In1) Input;  //_GUI 32,31
 Object Output( Variant Reverse) ;  //_GUI 72,21
 Object Output:A( Variant Forward) ;  //_GUI 79,31
 Object ( Variant Out1) ReverseBits( Variant In1) ;  //_GUI 40,29
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction
    ( Variant In0) ;  //_GUI 57,31
 Object ( Variant Out1) ReverseBits:A( Variant In1) ;  //_GUI 62,29
 Object Text;  //_GUI 83,38,Forward will reflect the input data.Arial,8,0,1
 Object Text;  //_GUI 74,11,The Reverse output's most significant bit is the least significant bit of the input data set.Arial,8,0,1
 Object Text;  //_GUI 50,6,ReverseBits ExamplesArial,10,255,1

 // Behavior Topology
 Output.0 = Junction.0;  //_GUI 58,22
 Output:A.0 = ReverseBits:A.0;  
 ReverseBits.0 = Input.0;  
 Junction.0 = ReverseBits.0;  
 ReverseBits:A.0 = Junction.1;  
}

Object ( Variant Out1, Variant Out2, Variant Out3
    , Variant Out4, Variant Out5) Ex_ReverseList1( MSB008 In1, MSB009 In2
    , MSB010 In3, MSB011 In4, MSB012 In5) 
//_Attributes TreeGroup=CoreLib_Examples\Grammar/Datasets\Examples\Ex
{
// Object Name:
// Ex_ReverseList1
//
// Description:
// N_Bit_LSB_LIST example
//
//
//
//
//
// Date:
//
// 01/17/04
 //_ Object Prototypes
 Object ( MSB008 In1) Input;  //_GUI 34,32
 Object ( MSB009 In2) Input:A;  //_GUI 34,35
 Object ( MSB010 In3) Input:B;  //_GUI 34,38
 Object ( MSB011 In4) Input:C;  //_GUI 34,41
 Object ( MSB012 In5) Input:D;  //_GUI 34,44
 Object Output( Variant Out1) ;  //_GUI 96,32
 Object Output:A( Variant Out2) ;  //_GUI 96,35
 Object Output:B( Variant Out3) ;  //_GUI 96,38
 Object Output:C( Variant Out4) ;  //_GUI 96,41
 Object Output:D( Variant Out5) ;  //_GUI 96,44
 Object ( Variant Out1) ReverseList( Variant In1) ;  //_GUI 59,31
 Object ( List Out1) PackMSB( Variant In1, Variant In2
    , Variant In3, Variant In4, Variant In5) ;  //_GUI 42,31
 Object ( Variant Out1, Variant Out2, Variant Out3
    , Variant Out4, Variant Out5) UnPackLSB( Variant In1) ;  //_GUI 77,31
 Object Text;  //_GUI 30,21,The output List is a mirror image of the input List.Arial,12,0,1
 Object Text;  //_GUI 34,55,If the input List is an MSB-shaped List, the output List will be an LSB-shaped List (and vice versa).Arial,12,0,1
 Object Text;  //_GUI 44,11,ReverseList Example #1Arial,10,255,1

 // Behavior Topology
 Output.0 = UnPackLSB.0;  
 Output:A.0 = UnPackLSB.1;  
 Output:B.0 = UnPackLSB.2;  
 Output:C.0 = UnPackLSB.3;  
 Output:D.0 = UnPackLSB.4;  
 ReverseList.0 = PackMSB.0;  
 PackMSB.0 = Input.0;  
 PackMSB.1 = Input:A.0;  
 PackMSB.2 = Input:B.0;  
 PackMSB.3 = Input:C.0;  
 PackMSB.4 = Input:D.0;  
 UnPackLSB.0 = ReverseList.0;  
}

Object ( Variant Out1, Variant Out2, Variant Out3
    , Variant Out4, Variant Out5, Variant Out1, Variant Out2
    , Variant Out3, Variant Out4) Ex_ReverseList2( MSB008 In1, MSB009 In2
    , MSB010 In3, MSB011 In4, MSB008 In1, MSB009 In2
    , MSB010 In3, MSB011 In4, MSB012 In5) 
//_Attributes TreeGroup=CoreLib_Examples\Grammar/Datasets\Examples\Ex
{
// Object Name:
// Ex_ReverseList2
//
// Description:
// ReverseList example
//
//
//
//
//
// Date:
//
// 01/17/04
 //_ Object Prototypes
 Object ( MSB008 In1) Input;  //_GUI 34,32
 Object ( MSB009 In2) Input:A;  //_GUI 34,35
 Object ( MSB010 In3) Input:B;  //_GUI 34,38
 Object ( MSB011 In4) Input:C;  //_GUI 34,41
 Object ( MSB008 In1) Input:D;  //_GUI 35,48
 Object ( MSB009 In2) Input:E;  //_GUI 35,51
 Object ( MSB010 In3) Input:F;  //_GUI 35,54
 Object ( MSB011 In4) Input:G;  //_GUI 35,57
 Object ( MSB012 In5) Input:H;  //_GUI 35,60
 Object Output( Variant Out1) ;  //_GUI 172,30
 Object Output:A( Variant Out2) ;  //_GUI 172,33
 Object Output:B( Variant Out3) ;  //_GUI 172,36
 Object Output:C( Variant Out4) ;  //_GUI 172,39
 Object Output:D( Variant Out5) ;  //_GUI 172,42
 Object Output:E( Variant Out1) ;  //_GUI 171,48
 Object Output:F( Variant Out2) ;  //_GUI 171,51
 Object Output:G( Variant Out3) ;  //_GUI 171,54
 Object Output:H( Variant Out4) ;  //_GUI 171,57
 Object Text;  //_GUI 67,60,The output List is a mirror image of the input List.Arial,12,0,1
 Object ( Variant Out1) ReverseList( Variant In1) ;  //_GUI 80,32
 Object Text;  //_GUI 119,22,Why can we not use an UnPackBIN here?Arial,12,0,1
 Object ( List Out1) PackLSB( Variant In1, Variant In2
    , Variant In3, Variant In4) ;  //_GUI 43,31
 Object ( List Out1) PackBIN( Variant In1, Variant In2
    , Variant In3, Variant In4, Variant In5) ;  //_GUI 43,47
 Object ( List Out) ListOut( Variant In1, Variant In2) ;  //_GUI 62,32
 Object ( Variant Out1, Variant Out2) ListIn( List In) ;  //_GUI 99,32
 Object ( Variant Out1, Variant Out2) ListIn:A( List In) ;  //_GUI 134,30
 Object ( Variant Out1, Variant Out2) ListIn:B( List In) ;  //_GUI 118,31
 Object ( Variant Out1, Variant Out2) ListIn:C( List In) ;  //_GUI 153,38
 Object ( Variant Out1, Variant Out2) ListIn:D( List In) ;  //_GUI 153,29
 Object ( Variant Out1, Variant Out2, Variant Out3
    , Variant Out4) UnPackMSB( Variant In1) ;  //_GUI 151,47
 Object Text;  //_GUI 57,13,ReverseList Example #2Arial,10,255,1

 // Behavior Topology
 Output.0 = ListIn:D.1;  
 Output:A.0 = ListIn:D.0;  
 Output:B.0 = ListIn:A.0;  //_GUI 149,37, 149,35
 Output:C.0 = ListIn:C.1;  
 Output:D.0 = ListIn:C.0;  
 Output:E.0 = UnPackMSB.0;  
 Output:F.0 = UnPackMSB.1;  
 Output:G.0 = UnPackMSB.2;  
 Output:H.0 = UnPackMSB.3;  
 ReverseList.0 = ListOut.0;  
 PackLSB.0 = Input.0;  
 PackLSB.1 = Input:A.0;  
 PackLSB.2 = Input:B.0;  
 PackLSB.3 = Input:C.0;  
 PackBIN.0 = Input:D.0;  
 PackBIN.1 = Input:E.0;  
 PackBIN.2 = Input:F.0;  
 PackBIN.3 = Input:G.0;  
 PackBIN.4 = Input:H.0;  
 ListOut.0 = PackBIN.0;  //_GUI 56,37, 56,50
 ListOut.1 = PackLSB.0;  
 ListIn.0 = ReverseList.0;  
 ListIn:A.0 = ListIn:B.1;  
 ListIn:B.0 = ListIn.1;  
 ListIn:C.0 = ListIn:B.0;  //_GUI 132,41, 132,36
 ListIn:D.0 = ListIn:A.1;  
 UnPackMSB.0 = ListIn.0;  //_GUI 117,50, 117,37
}

Object ( BIN004 "BIN IN", Variant "LSB OUT", Bit Out3
    , Bit Out4, Bit Out5, Bit Out6, LSB004 "LSB IN"
    , Variant "MSB OUT", Bit Out9, Bit Out10, Bit Out11
    , Bit Out12, MSB004 "MSB IN", Variant "BIN OUT", Bit Out15
    , Bit Out16, Bit Out17, Bit Out18) Ex_MSB_LSB_BIN( Bit In1
    , Bit In2, Bit In3, Bit In4, Bit In5
    , Bit In6, Bit In7, Bit In8, Bit In9
    , Bit In10, Bit In11, Bit In12) 
//_Attributes TreeGroup=CoreLib_Examples\Grammar/Datasets\Examples\Ex
{
// Object Name:
// Ex_MSB_LSB_BIN
//
// Description:
// Test Sheet for the MSB, LSB, and BIN objects.
//
//
//
//
// Date:
//
// 01/19/04
 //_ Object Prototypes
 Object ( Bit In1) Input;  //_GUI 21,55
 Object ( Bit In2) Input:A;  //_GUI 21,58
 Object ( Bit In3) Input:B;  //_GUI 21,64
 Object ( Bit In4) Input:C;  //_GUI 21,67
 Object ( Bit In5) Input:D;  //_GUI 14,114
 Object ( Bit In6) Input:E;  //_GUI 14,117
 Object ( Bit In7) Input:F;  //_GUI 14,120
 Object ( Bit In8) Input:G;  //_GUI 14,123
 Object ( Bit In9) Input:H;  //_GUI 22,170
 Object ( Bit In10) Input:I;  //_GUI 22,176
 Object ( Bit In11) Input:J;  //_GUI 22,182
 Object ( Bit In12) Input:K;  //_GUI 22,185
 Object Output( BIN004 "BIN IN") ;  //_GUI 108,45
 Object Output:A( Variant "LSB OUT") ;  //_GUI 108,49
 Object Output:B( Bit Out3) ;  //_GUI 108,53
 Object Output:C( Bit Out4) ;  //_GUI 108,56
 Object Output:D( Bit Out5) ;  //_GUI 108,59
 Object Output:E( Bit Out6) ;  //_GUI 108,62
 Object Output:F( LSB004 "LSB IN") ;  //_GUI 102,110
 Object Output:G( Variant "MSB OUT") ;  //_GUI 102,114
 Object Output:H( Bit Out9) ;  //_GUI 102,120
 Object Output:I( Bit Out10) ;  //_GUI 102,124
 Object Output:J( Bit Out11) ;  //_GUI 102,128
 Object Output:K( Bit Out12) ;  //_GUI 102,131
 Object Output:L( MSB004 "MSB IN") ;  //_GUI 108,159
 Object Output:M( Variant "BIN OUT") ;  //_GUI 108,162
 Object Output:N( Bit Out15) ;  //_GUI 108,166
 Object Output:O( Bit Out16) ;  //_GUI 108,169
 Object Output:P( Bit Out17) ;  //_GUI 108,176
 Object Output:Q( Bit Out18) ;  //_GUI 108,179
 Object ( BIN004 Out) BIN004Out( BIN002 In1, BIN002 In2) ;  //_GUI 38,58
 Object ( Bit Out1, Bit Out2) BIN002In( BIN002 In) ;  //_GUI 94,165
 Object ( BIN002 Out1, BIN002 Out2) BIN004In( BIN004 In) ;  //_GUI 81,170
 Object ( Bit Out1, Bit Out2) BIN002In:A( BIN002 In) ;  //_GUI 94,175
 Object ( LSB002 Out) LSB002Out( Bit In1, Bit In2) ;  //_GUI 19,113
 Object ( LSB003 Out) LSB003Out( Bit In1, LSB002 In2) ;  //_GUI 31,116
 Object ( LSB004 Out) LSB004Out( Bit In1, LSB003 In2) ;  //_GUI 43,119
 Object ( Variant Out1) LSB( Variant In1) ;  //_GUI 51,58
 Object ( Bit Out1, LSB003 Out2) LSB004In( LSB004 In) ;  //_GUI 75,58
 Object ( Bit Out1, LSB002 Out2) LSB003In( LSB003 In) ;  //_GUI 86,55
 Object ( Bit Out1, Bit Out2) LSB002In( LSB002 In) ;  //_GUI 97,52
 Object ( Variant Out1) BIN( Variant In1) ;  //_GUI 68,170
 Object ( Bit Out1, Bit Out2) MSB002In( MSB002 In) ;  //_GUI 90,127
 Object ( MSB002 Out1, Bit Out2) MSB003In( MSB003 In) ;  //_GUI 79,123
 Object ( MSB003 Out1, Bit Out2) MSB004In( MSB004 In) ;  //_GUI 68,119
 Object ( MSB002 Out) MSB002Out( Bit In1, Bit In2) ;  //_GUI 28,181
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction
    ( Variant In0) ;  //_GUI 72,60
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:A
    ( Variant In0) ;  //_GUI 66,121
 Object ( BIN002 Out) BIN002Out( Bit In1, Bit In2) ;  //_GUI 26,54
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:B
    ( Variant In0) ;  //_GUI 79,172
 Object ( Variant Out1) MSB( Variant In1) ;  //_GUI 56,119
 Object ( BIN004 Out1, BIN004 Out2, BIN004 Out3) Junction:C
    ( BIN004 In0) ;  //_GUI 49,60
 Object ( MSB003 Out) MSB003Out( MSB002 In1, Bit In2) ;  //_GUI 41,175
 Object ( MSB004 Out) MSB004Out( MSB003 In1, Bit In2) ;  //_GUI 54,169
 Object Text;  //_GUI 115,171,4 Bit BIN OutputArial,16,8388608,1
 Object Text;  //_GUI 108,125,4 Bit MSB OutputArial,16,8388608,1
 Object Text;  //_GUI 114,56,4 Bit LSB OutputArial,16,8388608,1
 Object ( BIN002 Out) BIN002Out:A( Bit In1, Bit In2) ;  //_GUI 26,63
 Object ( LSB004 Out1, LSB004 Out2, LSB004 Out3) Junction:D
    ( LSB004 In0) ;  //_GUI 54,121
 Object ( MSB004 Out1, MSB004 Out2, MSB004 Out3) Junction:E
    ( MSB004 In0) ;  //_GUI 66,171
 Object Text;  //_GUI 21,48,4 Bit BIN InputArial,16,8388608,1
 Object Text;  //_GUI 24,162,4 Bit MSB InputArial,16,8388608,1
 Object Text;  //_GUI 15,107,4 Bit LSB InputArial,16,8388608,1
 Object Text;  //_GUI 45,31,4 single bit inputs are converted into a BIN004.  At the LSB object, the input BIN shaped var is converted to an LSB004.  Notice the arrangements of the inputs versus the 4 lower bit outputs
 Object Text;  //_GUI 46,96,4 single bit inputs are converted into a LSB004.  At the MSB object, the input LSB shaped var is converted to an MSB004.  Notice the arrangements of the inputs versus the 4 lower bit outputs
 Object Text;  //_GUI 46,146,4 single bit inputs are converted into a MSB004.  At the BIN object, the input MSB shaped var is converted to an BIN004.  Notice the arrangements of the inputs versus the 4 lower bit outputs
 Object Text;  //_GUI 55,22,Example: BIN To LSBArial,10,8388608,1
 Object Text;  //_GUI 50,90,Example: LSB To MSBArial,10,8388608,1
 Object Text;  //_GUI 52,140,Example: MSB To BINArial,10,8388608,1
 Object Text;  //_GUI 53,1,Example: LSB, MSB, BINArial,16,8388608,1

 // Behavior Topology
 Output.0 = Junction:C.0;  //_GUI 50,46
 Output:A.0 = Junction.0;  //_GUI 73,50
 Output:B.0 = LSB002In.1;  
 Output:C.0 = LSB002In.0;  
 Output:D.0 = LSB003In.0;  
 Output:E.0 = LSB004In.0;  
 Output:F.0 = Junction:D.0;  //_GUI 55,111
 Output:G.0 = Junction:A.0;  //_GUI 67,115
 Output:H.0 = MSB004In.1;  
 Output:I.0 = MSB003In.1;  
 Output:J.0 = MSB002In.1;  
 Output:K.0 = MSB002In.0;  
 Output:L.0 = Junction:E.0;  //_GUI 67,160
 Output:M.0 = Junction:B.0;  //_GUI 80,163
 Output:N.0 = BIN002In.1;  
 Output:O.0 = BIN002In.0;  
 Output:P.0 = BIN002In:A.1;  
 Output:Q.0 = BIN002In:A.0;  
 BIN004Out.0 = BIN002Out:A.0;  
 BIN004Out.1 = BIN002Out.0;  
 BIN002In.0 = BIN004In.1;  //_GUI 94,172
 BIN004In.0 = Junction:B.1;  
 BIN002In:A.0 = BIN004In.0;  //_GUI 94,175
 LSB002Out.0 = Input:E.0;  
 LSB002Out.1 = Input:D.0;  
 LSB003Out.0 = Input:F.0;  
 LSB003Out.1 = LSB002Out.0;  
 LSB004Out.0 = Input:G.0;  
 LSB004Out.1 = LSB003Out.0;  //_GUI 45,121, 45,119
 LSB.0 = Junction:C.1;  
 LSB004In.0 = Junction.1;  
 LSB003In.0 = LSB004In.1;  
 LSB002In.0 = LSB003In.1;  
 BIN.0 = Junction:E.1;  
 MSB002In.0 = MSB003In.0;  
 MSB003In.0 = MSB004In.0;  
 MSB004In.0 = Junction:A.1;  
 MSB002Out.0 = Input:K.0;  
 MSB002Out.1 = Input:J.0;  
 Junction.0 = LSB.0;  
 Junction:A.0 = MSB.0;  
 BIN002Out.0 = Input:A.0;  
 BIN002Out.1 = Input.0;  
 Junction:B.0 = BIN.0;  
 MSB.0 = Junction:D.1;  
 Junction:C.0 = BIN004Out.0;  
 MSB003Out.0 = MSB002Out.0;  
 MSB003Out.1 = Input:I.0;  
 MSB004Out.0 = MSB003Out.0;  
 MSB004Out.1 = Input:H.0;  
 BIN002Out:A.0 = Input:C.0;  
 BIN002Out:A.1 = Input:B.0;  
 Junction:D.0 = LSB004Out.0;  
 Junction:E.0 = MSB004Out.0;  
}

Object ( Bit Bit, Bit Bit, Bit Bit) Ex_get_LSB_bit
    ( Bit In1, Bit In2, LSB002 In3) 
//_Attributes TreeGroup=CoreLib_Examples\Grammar/Datasets\Examples\Ex
{
 //_ Object Prototypes
 Object ( Bit In1) Input;  //_GUI 44,21
 Object ( Bit In2) Input:A;  //_GUI 44,31
 Object ( LSB002 In3) Input:B;  //_GUI 44,41
 Object Output( Bit Bit) ;  //_GUI 65,19
 Object Output:A( Bit Bit) ;  //_GUI 65,29
 Object Output:B( Bit Bit) ;  //_GUI 65,39
 Object ( Bit Bit) get_LSB_bit( Variant Data, Variant Lo_e) ;  //_GUI 50,27
 Object ( LSB002 Data) Input:C;  //_GUI 44,28
 //_Attributes Constant="*2"
 Object ( Bit Data) Input:D;  //_GUI 44,18
 //_Attributes Constant="*1"
 Object ( Bit Bit) get_LSB_bit:A( Variant Data, Variant Lo_e) ;  //_GUI 50,37
 Object ( LSB002 Data) Input:E;  //_GUI 44,38
 //_Attributes Constant="*2"
 Object ( Bit Bit) get_LSB_bit:B( Variant Data, Variant Lo_e) ;  //_GUI 50,17

 // Behavior Topology
 Output.0 = get_LSB_bit:B.0;  
 Output:A.0 = get_LSB_bit.0;  
 Output:B.0 = get_LSB_bit:A.0;  
 get_LSB_bit.0 = Input:C.0;  
 get_LSB_bit.1 = Input:A.0;  
 get_LSB_bit:A.0 = Input:E.0;  
 get_LSB_bit:A.1 = Input:B.0;  
 get_LSB_bit:B.0 = Input:D.0;  
 get_LSB_bit:B.1 = Input.0;  
}

Object ( Variant Out1) Ex_Int2Gray( Variant In1) 
//_Attributes TreeGroup=CoreLib_Examples\Grammar/Datasets\Examples\Ex
{
 //_ Object Prototypes
 Object ( Variant In1) Input;  //_GUI 26,26
 Object Output( Variant Out1) ;  //_GUI 44,26
 Object ( Variant Out1) Int2Gray( Variant In1) ;  //_GUI 32,24

 // Behavior Topology
 Output.0 = Int2Gray.0;  
 Int2Gray.0 = Input.0;  
}

Object ( Variant Out1) Ex_Int2Gray-Gray2Int( Variant In1) 
//_Attributes TreeGroup=CoreLib_Examples\Grammar/Datasets\Examples\Ex
{
 //_ Object Prototypes
 Object ( Variant In1) Input;  //_GUI 26,26
 //_Attributes WidgetLeft=20,WidgetTop=5,WidgetWidth=149,WidgetHeight=42,Widget=SpinEdit
 Object Output( Variant Out1) ;  //_GUI 56,26
 Object ( Variant Out1) Gray2Int( Variant In1) ;  //_GUI 44,24
 Object ( Variant Out1) Int2Gray( Variant In1) ;  //_GUI 32,24

 // Behavior Topology
 Output.0 = Gray2Int.0;  
 Gray2Int.0 = Int2Gray.0;  
 Int2Gray.0 = Input.0;  
}

Object ( Variant Out1, Variant Out2, Variant Out3
    , Variant Out4, Variant Out5, Variant Out6, Variant Out7
    , Variant Out8, Variant Out1, Variant Out2, Variant Out3
    , Variant Out4, Variant Out5, Variant Out6, Variant Out7
    , Variant Out8) Ex_BinListToMsbList( MSB008 In1, MSB008 In2, MSB008 In3
    , MSB008 In4, MSB008 In5, MSB008 In6, MSB008 In7
    , MSB008 In8) 
//_Attributes TreeGroup=CoreLib_Examples\Grammar/Datasets\Examples\Ex
{
 //_ Object Prototypes
 Object ( MSB008 In1) Input;  //_GUI 8,51
 Object ( MSB008 In2) Input:A;  //_GUI 8,54
 Object ( MSB008 In3) Input:B;  //_GUI 8,57
 Object ( MSB008 In4) Input:C;  //_GUI 8,60
 Object ( MSB008 In5) Input:D;  //_GUI 8,63
 Object ( MSB008 In6) Input:E;  //_GUI 8,66
 Object ( MSB008 In7) Input:F;  //_GUI 8,69
 Object ( MSB008 In8) Input:G;  //_GUI 8,72
 Object Output( Variant Out1) ;  //_GUI 64,13
 Object Output:A( Variant Out2) ;  //_GUI 64,16
 Object Output:B( Variant Out3) ;  //_GUI 64,19
 Object Output:C( Variant Out4) ;  //_GUI 64,22
 Object Output:D( Variant Out5) ;  //_GUI 64,25
 Object Output:E( Variant Out6) ;  //_GUI 64,28
 Object Output:F( Variant Out7) ;  //_GUI 64,31
 Object Output:G( Variant Out8) ;  //_GUI 64,34
 Object Output:H( Variant Out1) ;  //_GUI 64,51
 Object Output:I( Variant Out2) ;  //_GUI 64,54
 Object Output:J( Variant Out3) ;  //_GUI 64,57
 Object Output:K( Variant Out4) ;  //_GUI 64,60
 Object Output:L( Variant Out5) ;  //_GUI 64,63
 Object Output:M( Variant Out6) ;  //_GUI 64,66
 Object Output:N( Variant Out7) ;  //_GUI 64,69
 Object Output:O( Variant Out8) ;  //_GUI 64,72
 Object ( MSB008 In) Input:H;  //_GUI 8,19
 //_Attributes Constant="*2"
 Object ( MSB008 In) Input:I;  //_GUI 8,22
 //_Attributes Constant="*3"
 Object ( MSB008 In) Input:J;  //_GUI 8,25
 //_Attributes Constant="*4"
 Object ( MSB008 In) Input:K;  //_GUI 8,28
 //_Attributes Constant="*5"
 Object ( MSB008 In) Input:L;  //_GUI 8,31
 //_Attributes Constant="*6"
 Object ( MSB008 In) Input:M;  //_GUI 8,34
 //_Attributes Constant="*7"
 Object ( MSB008 In) Input:N;  //_GUI 8,13
 //_Attributes Constant="*0"
 Object ( Variant MsbList) BinListToMsbList( Variant BinList) ;  //_GUI 28,12
 Object ( MSB008 In) Input:O;  //_GUI 8,16
 //_Attributes Constant="*1"
 Object ( List Out1) PackBIN( Variant In1, Variant In2
    , Variant In3, Variant In4, Variant In5, Variant In6
    , Variant In7, Variant In8) ;  //_GUI 14,50
 Object ( Variant Out1, Variant Out2, Variant Out3
    , Variant Out4, Variant Out5, Variant Out6, Variant Out7
    , Variant Out8) UnPackMSB( Variant In1) ;  //_GUI 48,50
 Object ( Variant MsbList) BinListToMsbList:A( Variant BinList) ;  //_GUI 28,50
 Object ( List Out1) PackBIN:A( Variant In1, Variant In2
    , Variant In3, Variant In4, Variant In5, Variant In6
    , Variant In7, Variant In8) ;  //_GUI 14,12
 Object ( Variant Out1, Variant Out2, Variant Out3
    , Variant Out4, Variant Out5, Variant Out6, Variant Out7
    , Variant Out8) UnPackMSB:A( Variant In1) ;  //_GUI 48,12

 // Behavior Topology
 Output.0 = UnPackMSB:A.0;  
 Output:A.0 = UnPackMSB:A.1;  
 Output:B.0 = UnPackMSB:A.2;  
 Output:C.0 = UnPackMSB:A.3;  
 Output:D.0 = UnPackMSB:A.4;  
 Output:E.0 = UnPackMSB:A.5;  
 Output:F.0 = UnPackMSB:A.6;  
 Output:G.0 = UnPackMSB:A.7;  
 Output:H.0 = UnPackMSB.0;  
 Output:I.0 = UnPackMSB.1;  
 Output:J.0 = UnPackMSB.2;  
 Output:K.0 = UnPackMSB.3;  
 Output:L.0 = UnPackMSB.4;  
 Output:M.0 = UnPackMSB.5;  
 Output:N.0 = UnPackMSB.6;  
 Output:O.0 = UnPackMSB.7;  
 BinListToMsbList.0 = PackBIN:A.0;  
 PackBIN.0 = Input.0;  
 PackBIN.1 = Input:A.0;  
 PackBIN.2 = Input:B.0;  
 PackBIN.3 = Input:C.0;  
 PackBIN.4 = Input:D.0;  
 PackBIN.5 = Input:E.0;  
 PackBIN.6 = Input:F.0;  
 PackBIN.7 = Input:G.0;  
 UnPackMSB.0 = BinListToMsbList:A.0;  
 BinListToMsbList:A.0 = PackBIN.0;  
 PackBIN:A.0 = Input:N.0;  
 PackBIN:A.1 = Input:O.0;  
 PackBIN:A.2 = Input:H.0;  
 PackBIN:A.3 = Input:I.0;  
 PackBIN:A.4 = Input:J.0;  
 PackBIN:A.5 = Input:K.0;  
 PackBIN:A.6 = Input:L.0;  
 PackBIN:A.7 = Input:M.0;  
 UnPackMSB:A.0 = BinListToMsbList.0;  
}

Object ( Variant El, Variant El, Variant El
    , Variant El, Variant El, Variant El, Variant El
    , Variant El, Variant El, Variant El, Variant El
    , Variant El, Variant El, Variant El) Ex_get_MSB_List_element( MSB008 In1
    , MSB008 In2, Bit Hi_e, MSB008 In4, MSB008 In5) 
//_Attributes TreeGroup=CoreLib_Examples\Grammar/Datasets\Examples\Ex
{
 //_ Object Prototypes
 Object ( MSB008 In1) Input;  //_GUI 43,26
 //_Attributes Constant="0"
 Object ( MSB008 In2) Input:A;  //_GUI 43,29
 //_Attributes Constant="1"
 Object ( Bit Hi_e) Input:B;  //_GUI 72,30
 Object ( MSB008 In4) Input:C;  //_GUI 43,32
 //_Attributes Constant="2"
 Object ( MSB008 In5) Input:D;  //_GUI 43,35
 //_Attributes Constant="3"
 Object Output( Variant El) ;  //_GUI 102,28
 Object Output:A( Variant El) ;  //_GUI 102,46
 Object Output:B( Variant El) ;  //_GUI 102,65
 Object Output:C( Variant El) ;  //_GUI 102,82
 Object Output:D( Variant El) ;  //_GUI 102,100
 Object Output:E( Variant El) ;  //_GUI 102,125
 Object Output:F( Variant El) ;  //_GUI 102,143
 Object Output:G( Variant El) ;  //_GUI 102,162
 Object Output:H( Variant El) ;  //_GUI 102,179
 Object Output:I( Variant El) ;  //_GUI 102,199
 Object Output:J( Variant El) ;  //_GUI 102,217
 Object Output:K( Variant El) ;  //_GUI 102,233
 Object Output:L( Variant El) ;  //_GUI 102,256
 Object Output:M( Variant El) ;  //_GUI 102,272
 Object ( Variant El) get_MSB_List_element( Variant Data, Variant Hi_e) ;  //_GUI 78,254
 Object ( Variant El) get_MSB_List_element:A( Variant Data, Variant Hi_e) ;  //_GUI 78,44
 Object ( MSB002 Hi_e) Input:E;  //_GUI 72,48
 //_Attributes Constant="*0"
 Object ( Bit Hi_e) Input:F;  //_GUI 72,258
 //_Attributes Constant="*0"
 Object ( Variant El) get_MSB_List_element:B( Variant Data, Variant Hi_e) ;  //_GUI 78,63
 Object ( MSB003 Hi_e) Input:G;  //_GUI 72,67
 //_Attributes Constant="*0"
 Object ( Variant El) get_MSB_List_element:C( Variant Data, Variant Hi_e) ;  //_GUI 78,80
 Object ( MSB004 Hi_e) Input:H;  //_GUI 72,84
 //_Attributes Constant="*0"
 Object ( MSB008 Data) Input:I;  //_GUI 72,255
 //_Attributes Constant="*0"
 Object ( Variant El) get_MSB_List_element:D( Variant Data, Variant Hi_e) ;  //_GUI 78,98
 Object ( MSB005 Hi_e) Input:J;  //_GUI 72,102
 //_Attributes Constant="*0"
 Object Text;  //_GUI 11,30,List (4), 1st element
 Object Text;  //_GUI 10,48,List (4), 2nd element
 Object Text;  //_GUI 10,68,List (4), 3rd element
 Object Text;  //_GUI 9,85,List (4), 4th element
 Object Text;  //_GUI 5,103,List (4), 5th elementWill produce 1 compile-time error
 Object Text;  //_GUI 2,7,These test cases also test for errors.  When compiling you will get 4 errors.  You should continue and run and the outputs for these errors should be ignored.  We show use of variable and constant inputs.
 Object Text;  //_GUI 13,255,Single element list (variant)Get the first element
 Object ( Variant El) get_MSB_List_element:E( Variant Data, Variant Hi_e) ;  //_GUI 78,26
 Object ( Variant El) get_MSB_List_element:F( Variant Data, Variant Hi_e) ;  //_GUI 78,123
 Object ( Bit Hi_e) Input:K;  //_GUI 72,127
 //_Attributes Constant="*0"
 Object ( MSB008 In) Input:L;  //_GUI 43,123
 //_Attributes Constant="*0"
 Object ( MSB008 In) Input:M;  //_GUI 43,126
 //_Attributes Constant="*1"
 Object ( MSB008 In) Input:N;  //_GUI 43,129
 //_Attributes Constant="*2"
 Object ( Variant El) get_MSB_List_element:G( Variant Data, Variant Hi_e) ;  //_GUI 78,141
 Object ( MSB002 Hi_e) Input:O;  //_GUI 72,145
 //_Attributes Constant="*0"
 Object ( MSB008 In) Input:P;  //_GUI 43,141
 //_Attributes Constant="*0"
 Object ( MSB008 In) Input:Q;  //_GUI 43,144
 //_Attributes Constant="*1"
 Object ( MSB008 In) Input:R;  //_GUI 43,147
 //_Attributes Constant="*2"
 Object ( Variant El) get_MSB_List_element:H( Variant Data, Variant Hi_e) ;  //_GUI 78,160
 Object ( MSB003 Hi_e) Input:S;  //_GUI 72,164
 //_Attributes Constant="*0"
 Object ( MSB008 In) Input:T;  //_GUI 43,160
 //_Attributes Constant="*0"
 Object ( MSB008 In) Input:U;  //_GUI 43,163
 //_Attributes Constant="*1"
 Object ( MSB008 In) Input:V;  //_GUI 43,166
 //_Attributes Constant="*2"
 Object ( Variant El) get_MSB_List_element:I( Variant Data, Variant Hi_e) ;  //_GUI 78,177
 Object ( MSB004 Hi_e) Input:W;  //_GUI 72,181
 //_Attributes Constant="*0"
 Object ( MSB008 In) Input:X;  //_GUI 43,177
 //_Attributes Constant="*0"
 Object ( MSB008 In) Input:Y;  //_GUI 43,180
 //_Attributes Constant="*1"
 Object ( MSB008 In) Input:Z;  //_GUI 43,183
 //_Attributes Constant="*2"
 Object Text;  //_GUI 11,127,List (3), 1st element
 Object Text;  //_GUI 10,145,List (3), 2nd element
 Object Text;  //_GUI 10,165,List (3), 3rd element
 Object Text;  //_GUI 4,181,List (3), 4th elementWill produce 1 compile-time error
 Object ( List Out1) PackMSB( Variant In1, Variant In2
    , Variant In3) ;  //_GUI 49,122
 Object ( List Out1) PackMSB:A( Variant In1, Variant In2
    , Variant In3) ;  //_GUI 49,140
 Object ( List Out1) PackMSB:B( Variant In1, Variant In2
    , Variant In3) ;  //_GUI 49,159
 Object ( List Out1) PackMSB:C( Variant In1, Variant In2
    , Variant In3) ;  //_GUI 49,176
 Object ( List Out1) PackMSB:D( Variant In1, Variant In2
    , Variant In3, Variant In4) ;  //_GUI 49,25
 Object ( Variant El) get_MSB_List_element:J( Variant Data, Variant Hi_e) ;  //_GUI 78,197
 Object ( Bit Hi_e) Input:a;  //_GUI 72,201
 //_Attributes Constant="*0"
 Object ( MSB008 In) Input:b;  //_GUI 43,197
 //_Attributes Constant="*0"
 Object ( MSB008 In) Input:c;  //_GUI 43,200
 //_Attributes Constant="*1"
 Object ( Variant El) get_MSB_List_element:K( Variant Data, Variant Hi_e) ;  //_GUI 78,215
 Object ( MSB002 Hi_e) Input:d;  //_GUI 72,219
 //_Attributes Constant="*0"
 Object ( MSB008 In) Input:e;  //_GUI 43,215
 //_Attributes Constant="*0"
 Object ( MSB008 In) Input:f;  //_GUI 43,218
 //_Attributes Constant="*1"
 Object ( Variant El) get_MSB_List_element:L( Variant Data, Variant Hi_e) ;  //_GUI 78,231
 Object ( MSB004 Hi_e) Input:AA;  //_GUI 72,235
 //_Attributes Constant="*0"
 Object ( MSB008 In) Input:BA;  //_GUI 43,231
 //_Attributes Constant="*0"
 Object ( MSB008 In) Input:CA;  //_GUI 43,234
 //_Attributes Constant="*1"
 Object Text;  //_GUI 11,201,List (2), 1st element
 Object Text;  //_GUI 10,219,List (2), 2nd element
 Object Text;  //_GUI 4,235,List (2), 3rd elementWill produce 1 compile-time error
 Object ( List Out) ListOut( Variant In1, Variant In2) ;  //_GUI 49,196
 Object ( List Out) ListOut:A( Variant In1, Variant In2) ;  //_GUI 49,214
 Object ( List Out) ListOut:B( Variant In1, Variant In2) ;  //_GUI 49,230
 Object Text;  //_GUI 13,271,Single element list (variant)Get the 2nd elementWill produce 1 compile-time error
 Object ( Variant El) get_MSB_List_element:M( Variant Data, Variant Hi_e) ;  //_GUI 78,270
 Object ( MSB002 Hi_e) Input:DA;  //_GUI 72,274
 //_Attributes Constant="*0"
 Object ( MSB008 Data) Input:EA;  //_GUI 72,271
 //_Attributes Constant="*0"
 Object Text;  //_GUI 67,6,Expected results are 4 reported errors at compile time and results of 0,1,2,3,3(ignore),0,1,2,2(ignore),0,1,1(ignore),0,0(ignore)
 Object ( List Out1, List Out2, List Out3) Junction
    ( List In0) ;  //_GUI 62,27
 Object ( List Out1, List Out2, List Out3) Junction:A
    ( List In1) ;  //_GUI 62,81
 Object ( List Out1, List Out2, List Out3) Junction:B
    ( List In1) ;  //_GUI 62,64
 Object ( List Out1, List Out2, List Out3) Junction:C
    ( List In1) ;  //_GUI 62,45

 // Behavior Topology
 Output.0 = get_MSB_List_element:E.0;  
 Output:A.0 = get_MSB_List_element:A.0;  
 Output:B.0 = get_MSB_List_element:B.0;  
 Output:C.0 = get_MSB_List_element:C.0;  
 Output:D.0 = get_MSB_List_element:D.0;  
 Output:E.0 = get_MSB_List_element:F.0;  
 Output:F.0 = get_MSB_List_element:G.0;  
 Output:G.0 = get_MSB_List_element:H.0;  
 Output:H.0 = get_MSB_List_element:I.0;  
 Output:I.0 = get_MSB_List_element:J.0;  
 Output:J.0 = get_MSB_List_element:K.0;  
 Output:K.0 = get_MSB_List_element:L.0;  
 Output:L.0 = get_MSB_List_element.0;  
 Output:M.0 = get_MSB_List_element:M.0;  
 get_MSB_List_element.0 = Input:I.0;  
 get_MSB_List_element.1 = Input:F.0;  
 get_MSB_List_element:A.0 = Junction:C.1;  
 get_MSB_List_element:A.1 = Input:E.0;  
 get_MSB_List_element:B.0 = Junction:B.1;  
 get_MSB_List_element:B.1 = Input:G.0;  
 get_MSB_List_element:C.0 = Junction:A.1;  
 get_MSB_List_element:C.1 = Input:H.0;  
 get_MSB_List_element:D.0 = Junction:A.2;  //_GUI 63,100
 get_MSB_List_element:D.1 = Input:J.0;  
 get_MSB_List_element:E.0 = Junction.1;  
 get_MSB_List_element:E.1 = Input:B.0;  
 get_MSB_List_element:F.0 = PackMSB.0;  
 get_MSB_List_element:F.1 = Input:K.0;  
 get_MSB_List_element:G.0 = PackMSB:A.0;  
 get_MSB_List_element:G.1 = Input:O.0;  
 get_MSB_List_element:H.0 = PackMSB:B.0;  
 get_MSB_List_element:H.1 = Input:S.0;  
 get_MSB_List_element:I.0 = PackMSB:C.0;  
 get_MSB_List_element:I.1 = Input:W.0;  
 PackMSB.0 = Input:L.0;  
 PackMSB.1 = Input:M.0;  
 PackMSB.2 = Input:N.0;  
 PackMSB:A.0 = Input:P.0;  
 PackMSB:A.1 = Input:Q.0;  
 PackMSB:A.2 = Input:R.0;  
 PackMSB:B.0 = Input:T.0;  
 PackMSB:B.1 = Input:U.0;  
 PackMSB:B.2 = Input:V.0;  
 PackMSB:C.0 = Input:X.0;  
 PackMSB:C.1 = Input:Y.0;  
 PackMSB:C.2 = Input:Z.0;  
 PackMSB:D.0 = Input.0;  
 PackMSB:D.1 = Input:A.0;  
 PackMSB:D.2 = Input:C.0;  
 PackMSB:D.3 = Input:D.0;  
 get_MSB_List_element:J.0 = ListOut.0;  
 get_MSB_List_element:J.1 = Input:a.0;  
 get_MSB_List_element:K.0 = ListOut:A.0;  
 get_MSB_List_element:K.1 = Input:d.0;  
 get_MSB_List_element:L.0 = ListOut:B.0;  
 get_MSB_List_element:L.1 = Input:AA.0;  
 ListOut.0 = Input:c.0;  
 ListOut.1 = Input:b.0;  
 ListOut:A.0 = Input:f.0;  
 ListOut:A.1 = Input:e.0;  
 ListOut:B.0 = Input:CA.0;  
 ListOut:B.1 = Input:BA.0;  
 get_MSB_List_element:M.0 = Input:EA.0;  
 get_MSB_List_element:M.1 = Input:DA.0;  
 Junction.0 = PackMSB:D.0;  
 Junction:A.0 = Junction:B.2;  
 Junction:B.0 = Junction:C.2;  
 Junction:C.0 = Junction.2;  
}

Object ( Bit Q) Ex_RegToggle( Bit EN, Bit CLR) 
//_Attributes TreeGroup=CoreLib_Examples\Registers\Examples\Ex
{
// Object Name:
// Ex_RegToggle
//
// Description:
// RegToggle Examples
//
//
//
//
// Date:
//
// 01/17/04
 //_ Object Prototypes
 Object ( Bit EN) Input;  //_GUI 34,30
 Object ( Bit CLR) Input:A;  //_GUI 49,39
 Object Output( Bit Q) ;  //_GUI 73,29
 Object ( Bit Q) RegToggle( Bit ClkG, Bit EN
    , Bit CLR) ;  //_GUI 58,27
 Object ( Bit Pulse) OneShot( Bit I, Bit ClkG) ;  //_GUI 40,29
 Object Text;  //_GUI 38,20,Toggle the EN input a few times...Arial,8,0,1
 Object Text;  //_GUI 48,6,Example: RegToggleArial,10,255,1

 // Behavior Topology
 Output.0 = RegToggle.0;  
 RegToggle.1 = OneShot.0;  
 RegToggle.2 = Input:A.0;  //_GUI 54,35, 54,40
 OneShot.0 = Input.0;  
}

Object ( Bit Q) Ex_StickyReg( Bit D, Bit CLR) 
//_Attributes TreeGroup=CoreLib_Examples\Registers\Examples\Ex
{
// Object Name:
// Ex_StickyReg
//
// Description:
// StickyReg Examples
//
//
//
//
// Date:
//
// 01/17/04
 //_ Object Prototypes
 Object ( Bit D) Input;  //_GUI 26,26
 Object ( Bit CLR) Input:A;  //_GUI 26,33
 Object Output( Bit Q) ;  //_GUI 71,28
 Object ( Bit Pulse) OneShot( Bit I, Bit ClkG) ;  //_GUI 38,25
 Object ( Bit Q) StickyReg( Bit D, Bit ClkG
    , Bit CLR) ;  //_GUI 54,26
 Object Text;  //_GUI 30,11,StickyReg gets its name from the fact that 1s stick to it.  Once a 1has been received on the D input, the Q output will remain asserted until the StickyReg receives a CLR.Arial,8,0,1
 Object Text;  //_GUI 41,6,StickyReg ExampleArial,8,255,1

 // Behavior Topology
 Output.0 = StickyReg.0;  
 OneShot.0 = Input.0;  
 StickyReg.0 = OneShot.0;  
 StickyReg.2 = Input:A.0;  
}

Object ( Variant Q1, Variant Q2, Variant Q3
    , Variant Busy1, Variant Busy2, Variant Busy3) Ex_SyncReg( MSB005 D1
    , MSB006 D2, MSB007 D3, Bit Go1, Bit Go2
    , Bit Go3, Bit Wait) 
//_Attributes TreeGroup=CoreLib_Examples\Registers\Examples\Ex
{
// Object Name:
// Ex_SyncReg
//
// Description:
// SyncReg Examples
//
//
//
//
// Date:
//
// 01/17/04
 //_ Object Prototypes
 Object ( MSB005 D1) Input;  //_GUI 47,34
 Object ( MSB006 D2) Input:A;  //_GUI 47,37
 Object ( MSB007 D3) Input:B;  //_GUI 47,40
 Object ( Bit Go1) Input:C;  //_GUI 31,55
 Object ( Bit Go2) Input:D;  //_GUI 31,63
 Object ( Bit Go3) Input:E;  //_GUI 31,71
 Object ( Bit Wait) Input:F;  //_GUI 94,85
 Object Output( Variant Q1) ;  //_GUI 154,51
 Object Output:A( Variant Q2) ;  //_GUI 154,54
 Object Output:B( Variant Q3) ;  //_GUI 154,57
 Object Output:C( Variant Busy1) ;  //_GUI 100,94
 Object Output:D( Variant Busy2) ;  //_GUI 100,97
 Object Output:E( Variant Busy3) ;  //_GUI 100,100
 Object ( Variant Out1, Variant Out2, Variant Out3) UnPackMSB
    ( List In1) ;  //_GUI 84,93
 Object ( List Out1) PackMSB( Variant In1, Variant In2
    , Variant In3) ;  //_GUI 53,33
 Object ( Variant Out1, Variant Out2, Variant Out3) UnPackMSB:A
    ( List In1) ;  //_GUI 136,50
 Object ( Bit Pulse) OneShot( Bit I, Bit ClkG) ;  //_GUI 37,62
 Object ( Bit Pulse) OneShot:A( Bit I, Bit ClkG) ;  //_GUI 37,54
 Object ( Bit Pulse) OneShot:B( Bit I, Bit ClkG) ;  //_GUI 37,70
 Object ( Variant Q) RegEn( Variant D, Bit ClkG
    , Bit EN) ;  //_GUI 116,50
 Object ( List Out1) PackMSB:A( Variant In1, Variant In2
    , Variant In3) ;  //_GUI 63,55
 Object Text;  //_GUI 85,26,Enter data on the three data inputs (D1-D3).  Toggle Go1.  Notice Busy1 is now asserted.  Toggle Go2.  Notice Busy2 is now asserted.Toggle Go3.  Now all Gos have been received, so Done is fired and all Busys are low.Arial,8,0,1
 Object Text;  //_GUI 25,79,Note that Go Signals and the corresponding data are wrapped up into Lists with identical shapes.  Also note that Busy is produced as a List with the same shape.
 Object Text;  //_GUI 53,18,SyncReg ExampleArial,8,255,1
 Object ( Variant Data, Bit ClkG, Bit AClr
    , Variant Done, Variant Busy) SyncRegClr( Variant Data, Bit ClkG
    , Bit AClr, Variant Go, Bit Wait) ;  //_GUI 83,47
 //_Attributes Documentation=List/List

 // Behavior Topology
 Output.0 = UnPackMSB:A.0;  
 Output:A.0 = UnPackMSB:A.1;  
 Output:B.0 = UnPackMSB:A.2;  
 Output:C.0 = UnPackMSB.0;  
 Output:D.0 = UnPackMSB.1;  
 Output:E.0 = UnPackMSB.2;  
 UnPackMSB.0 = SyncRegClr.4;  //_GUI 78,96, 78,61
 PackMSB.0 = Input.0;  
 PackMSB.1 = Input:A.0;  
 PackMSB.2 = Input:B.0;  
 UnPackMSB:A.0 = RegEn.0;  
 OneShot.0 = Input:D.0;  
 OneShot:A.0 = Input:C.0;  
 OneShot:B.0 = Input:E.0;  
 RegEn.0 = SyncRegClr.0;  //_GUI 105,52, 105,49
 RegEn.2 = SyncRegClr.3;  
 PackMSB:A.0 = OneShot:A.0;  
 PackMSB:A.1 = OneShot.0;  //_GUI 51,60, 51,65
 PackMSB:A.2 = OneShot:B.0;  //_GUI 55,63, 55,73
 SyncRegClr.0 = PackMSB.0;  //_GUI 73,49, 73,36
 SyncRegClr.3 = PackMSB:A.0;  
 SyncRegClr.4 = Input:F.0;  //_GUI 98,61
}

Object ( Variant Out1, Variant Out2) Ex_ShiftBy( BIN016 IN) 
//_Attributes TreeGroup=CoreLib_Examples\Shifts\Examples\Ex
{
// Object Name:
// Ex_ShiftBy
//
// Description:
// ShiftBy 2  Example
//
//
//
//
// Date:
//
// 01/17/04
 //_ Object Prototypes
 Object ( BIN016 IN) Input;  //_GUI 27,28
 Object Output( Variant Out1) ;  //_GUI 84,31
 Object Output:A( Variant Out2) ;  //_GUI 81,51
 Object ( Bit OFL, Variant Out1) ShiftLeftBy( Variant Data
    , Variant ShiftBy) ;  //_GUI 70,27
 Object ( Variant C, Variant Out2) RCL( Variant In1
    , Variant C) ;  //_GUI 68,47
 Object ( BIN016 Out1, BIN016 Out2, BIN016 Out3) Junction
    ( BIN016 In0) ;  //_GUI 58,28
 Object ( MSB005 ShiftBy) Input:A;  //_GUI 48,31
 //_Attributes Constant="*3"
 Object ( LSB003 C_LSB003) Input:B;  //_GUI 61,51
 //_Attributes Constant="*0"
 Object Text;  //_GUI 33,11,These are equivalent statements and create equivalent circuitry.  The ShiftLeftBy object's implementation will actually be a 3-bit RCL.  Drill into ShiftLeftBy to see how constants are handled.Arial,9,0,0
 Object Text;  //_GUI 32,61,Both ouputs will reflect the input multiplied by 8.Arial,9,0,1
 Object Text;  //_GUI 65,2,Example: ShiftByArial,8,255,1

 // Behavior Topology
 Output.0 = ShiftLeftBy.1;  
 Output:A.0 = RCL.1;  
 ShiftLeftBy.0 = Junction.1;  
 ShiftLeftBy.1 = Input:A.0;  
 RCL.0 = Junction.2;  //_GUI 59,49
 RCL.1 = Input:B.0;  
 Junction.0 = Input.0;  
}

Object ( Variant Out1, Variant BitLength, Bit Busy) "Ex_Parallel/Serial"
    ( Float Float, MSB004 S_Size, Bit Go, Bit Wait) 
//_Attributes TreeGroup=CoreLib_Examples\Shifts\Examples\Ex
{
// Object Name:
// Ex_Parallel/Serial
//
// Description:
// Parallel/Serial Example
//
//
//
//
// Date:
//
// 11/15/04
 //_ Object Prototypes
 Object ( Float Float) Input;  //_GUI 18,45
 Object ( MSB004 S_Size) Input:A;  //_GUI 47,48
 Object ( Bit Go) Input:B;  //_GUI 13,56
 Object ( Bit Wait) Input:C;  //_GUI 139,63
 Object Output( Variant Out1) ;  //_GUI 152,49
 Object Output:A( Variant BitLength) ;  //_GUI 129,76
 Object Output:B( Bit Busy) ;  //_GUI 51,91
 Object ( Bit Pulse) OneShot( Bit I, Bit ClkG) ;  //_GUI 27,55
 Object ( Bit OFL, Variant Out1) StaticOut( Variant Type
    , Variant Data) ;  //_GUI 115,41
 Object ( Variant Out1) DynamicOut( Variant In1) ;  //_GUI 28,43
 Object ( Float Out1, Float Out2, Float Out3) Junction
    ( Float In0) ;  //_GUI 24,45
 Object ( Variant Q) RegEn( Variant D, Bit ClkG
    , Bit EN) ;  //_GUI 130,47
 Object Text;  //_GUI 50,24,The P_Type output/input carries information about the context of the input data set, as well as its size.  This information is used in rebuilding the Contextual data set after re-parallelization.Arial,9,0,0
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:A
    ( Variant In0) ;  //_GUI 109,45
 Object ( Variant Out1) BitLength( Variant Type) ;  //_GUI 116,74
 Object Text;  //_GUI 67,9,Example: Parallel/SerialArial,8,255,1
 Object ( Variant P_Data, Variant S_Type, Variant StageMsk
    , Bit Done, Bit Busy) "Serial->Parallel_Clr"( Variant S_Data, Variant P_Type
    , Bit ClkG, Bit AClr, Bit Go, Bit Wait) ;  //_GUI 85,44
 Object ( Variant S_Data, Variant P_Type, Variant StageMsk
    , Bit Done, Bit Busy) "Parallel->Serial_Clr"( Variant P_Data, Variant S_Type
    , Bit ClkG, Bit AClr, Bit Go, Bit Wait) ;  //_GUI 54,44

 // Behavior Topology
 Output.0 = RegEn.0;  
 Output:A.0 = BitLength.0;  
 Output:B.0 = "Parallel->Serial_Clr".4;  //_GUI 46,92, 46,61
 OneShot.0 = Input:B.0;  
 StaticOut.0 = Junction.0;  //_GUI 110,43, 110,39, 25,39
 StaticOut.1 = Junction:A.1;  
 DynamicOut.0 = Junction.1;  
 Junction.0 = Input.0;  
 RegEn.0 = StaticOut.1;  //_GUI 128,49, 128,46
 RegEn.2 = "Serial->Parallel_Clr".3;  //_GUI 119,55, 119,58
 Junction:A.0 = "Serial->Parallel_Clr".0;  
 BitLength.0 = Junction:A.2;  //_GUI 110,77
 "Serial->Parallel_Clr".0 = "Parallel->Serial_Clr".0;  
 "Serial->Parallel_Clr".1 = "Parallel->Serial_Clr".1;  
 "Serial->Parallel_Clr".4 = "Parallel->Serial_Clr".3;  
 "Serial->Parallel_Clr".5 = Input:C.0;  //_GUI 150,61, 150,64
 "Parallel->Serial_Clr".0 = DynamicOut.0;  
 "Parallel->Serial_Clr".1 = Input:A.0;  
 "Parallel->Serial_Clr".4 = OneShot.0;  
 "Parallel->Serial_Clr".5 = "Serial->Parallel_Clr".4;  
}

Object ( Bit Floating, Bit Float) Ex_IsContextual( Float Float) 
//_Attributes TreeGroup=CoreLib_Examples\Grammar/Datasets\DatasetInfo\Examples\Ex
{
// Object Name:
// Ex_IsContextual
//
// Description:
// IsContextual Examples
//
//
//
//
// Date:
//
// 01/17/04
 //_ Object Prototypes
 Object ( Float Float) Input;  //_GUI 35,24
 Object Output( Bit Floating) ;  //_GUI 93,24
 Object Output:A( Bit Float) ;  //_GUI 92,33
 Object ( Bit Out1) IsContextual( Variant In1) ;  //_GUI 76,31
 Object ( Bit Out1) IsContextual:A( Variant In1) ;  //_GUI 76,22
 Object ( Variant Out1) DynamicOut( Variant In1) ;  //_GUI 52,22
 Object ( Float Out1, Float Out2, Float Out3) Junction
    ( Float In0) ;  //_GUI 45,24
 Object Text;  //_GUI 39,40,Note:  When a constant 0 is propogated to an output, the output is considered sourceless and is removed.Arial,8,255,1
 Object Text;  //_GUI 50,65,Contextual data sets are single-child data sets, whose child is either a Variant or a List.  Single-child data sets are actually implemented as data sets with 2 children, where the most significant is NULL.  This is done so that Variant Exposers can work on Contextual data sets.  Any object to which NULL is propogated is immediately removed, unless that object has a NULL footprint overload.Arial,9,0,1
 Object Text;  //_GUI 113,45,Examples of Contextual Data Sets:SignedFixedFloatingComplexPipelinedArial,9,32768,1
 Object Text;  //_GUI 60,5,Example: IsContextualArial,8,255,1

 // Behavior Topology
 Output.0 = IsContextual:A.0;  
 Output:A.0 = IsContextual.0;  
 IsContextual.0 = Junction.2;  //_GUI 46,34
 IsContextual:A.0 = DynamicOut.0;  
 DynamicOut.0 = Junction.1;  
 Junction.0 = Input.0;  
}

Object ( Bit Bit, Bit MSB008) Ex_IsBit( MSB009 MSB009) 
//_Attributes TreeGroup=CoreLib_Examples\Grammar/Datasets\DatasetInfo\Examples\Ex
{
// Object Name:
// Ex_IsBit
//
// Description:
// IsBit Examples
//
//
//
//
// Date:
//
// 01/17/04
 //_ Object Prototypes
 Object ( MSB009 MSB009) Input;  //_GUI 39,28
 Object Output( Bit Bit) ;  //_GUI 84,23
 Object Output:A( Bit MSB008) ;  //_GUI 84,30
 Object Text;  //_GUI 39,40,Note:  When a constant 0 is propogated to an output, the output is considered sourceless and is removed.Arial,8,255,1
 Object ( Bit Out1) IsBit( Variant Type) ;  //_GUI 69,21
 Object ( Variant Out1, Variant Out2) VariantIn( Variant In) ;  //_GUI 46,26
 Object ( Bit Out1) IsBit:A( Variant Type) ;  //_GUI 68,28
 Object Text;  //_GUI 55,5,Example: IsBitArial,8,255,1

 // Behavior Topology
 Output.0 = IsBit.0;  
 Output:A.0 = IsBit:A.0;  
 IsBit.0 = VariantIn.1;  //_GUI 65,24, 65,28
 VariantIn.0 = Input.0;  
 IsBit:A.0 = VariantIn.0;  
}

Object ( Bit "List/List", Bit "Var/Var", Bit "Var/Bit List"
    , Bit "Var/Bit List") Ex_SameListStruct( MSB004 MSB004, MSB004 In2, MSB004 In3
    , MSB004 In4, BIN004 BIN004, MSB004 In6, MSB004 In7
    , MSB004 In8, MSB003 MSB003, Bit Bit, Bit Bit
    , Bit Bit, MSB003 MSB003, MSB003 MSB003, MSB003 MSB003
    , MSB003 MSB003, MSB003 MSB003, MSB003 MSB003, MSB003 MSB003
    , MSB003 MSB003, MSB003 MSB003, MSB003 MSB003, MSB003 MSB003
    , MSB003 MSB003) 
//_Attributes TreeGroup=CoreLib_Examples\Grammar/Datasets\DatasetInfo\Examples\Ex
{
// Object Name:
// Ex_SameListStruct
//
// Description:
// SameListStruct example sheet
//
//
//
//
// Date:
//
// 01/30/04
 //_ Object Prototypes
 Object ( MSB004 MSB004) Input;  //_GUI 23,16
 Object ( MSB004 In2) Input:A;  //_GUI 23,19
 Object ( MSB004 In3) Input:B;  //_GUI 23,22
 Object ( MSB004 In4) Input:C;  //_GUI 23,25
 Object ( BIN004 BIN004) Input:D;  //_GUI 23,34
 Object ( MSB004 In6) Input:E;  //_GUI 23,37
 Object ( MSB004 In7) Input:F;  //_GUI 23,40
 Object ( MSB004 In8) Input:G;  //_GUI 23,43
 Object ( MSB003 MSB003) Input:H;  //_GUI 19,55
 Object ( Bit Bit) Input:I;  //_GUI 19,62
 Object ( Bit Bit) Input:J;  //_GUI 19,65
 Object ( Bit Bit) Input:K;  //_GUI 19,68
 Object ( MSB003 MSB003) Input:L;  //_GUI 17,91
 Object ( MSB003 MSB003) Input:M;  //_GUI 17,94
 Object ( MSB003 MSB003) Input:N;  //_GUI 17,99
 Object ( MSB003 MSB003) Input:O;  //_GUI 17,105
 Object ( MSB003 MSB003) Input:P;  //_GUI 17,108
 Object ( MSB003 MSB003) Input:Q;  //_GUI 17,111
 Object ( MSB003 MSB003) Input:R;  //_GUI 18,131
 Object ( MSB003 MSB003) Input:S;  //_GUI 18,134
 Object ( MSB003 MSB003) Input:T;  //_GUI 18,137
 Object ( MSB003 MSB003) Input:U;  //_GUI 17,144
 Object ( MSB003 MSB003) Input:V;  //_GUI 17,147
 Object ( MSB003 MSB003) Input:W;  //_GUI 17,150
 Object Output( Bit "List/List") ;  //_GUI 75,33
 Object Output:A( Bit "Var/Var") ;  //_GUI 73,56
 Object Output:B( Bit "Var/Bit List") ;  //_GUI 69,100
 Object Output:C( Bit "Var/Bit List") ;  //_GUI 79,136
 Object ( Bit Out1) SameListStruct( Variant In1, Variant In2) ;  //_GUI 54,31
 //_Attributes Documentation=list/list
 Object Text;  //_GUI 64,14,Note: Output depends on the data type applied at the inputj and not on a specified value.  No inputs will show on the widget.  Only outputs at a stable value.Arial,8,255,1
 Object ( Variant Out1) CollectMSB( Variant In1, Variant In2
    , Variant In3) ;  //_GUI 25,104
 Object Text;  //_GUI 96,32,Output wil = 1
 Object Text;  //_GUI 95,57,Output wil = 1
 Object Text;  //_GUI 89,99,Output wil = 0
 Object Text;  //_GUI 101,136,Output wil = 0
 Object ( Bit Out1) SameListStruct:A( Variant In1, Variant In2) ;  //_GUI 60,134
 //_Attributes Documentation=list/list
 Object ( Variant Out1) CollectMSB:A( Variant In1, Variant In2
    , Variant In3) ;  //_GUI 24,61
 Object ( Bit Out1) SameListStruct:B( Variant In1, Variant In2) ;  //_GUI 42,54
 //_Attributes Documentation=list/list
 Object Text;  //_GUI 68,42,SameListStruct object views these (above and below) inpus as being 2 vars which is equal to 2 lists of one element each
 Object ( List Out) ListOut( Variant In1, Variant In2) ;  //_GUI 34,95
 Object ( List Out) ListOut:A( Variant In1, Variant In2) ;  //_GUI 22,90
 Object ( Bit Out1) SameListStruct:C( Variant In1, Variant In2) ;  //_GUI 49,98
 //_Attributes Documentation=list/list
 Object Text;  //_GUI 50,6,Example: SameListStructArial,10,16711680,1
 Object ( Variant Out1) CollectMSB:B( Variant In1, Variant In2
    , Variant In3, Variant In4) ;  //_GUI 29,33
 Object Text;  //_GUI 73,89,The following example is viewed as one list of 3 elements and a second list of 1 element.
 Object ( List Out) ListOut:B( Variant In1, Variant In2) ;  //_GUI 38,133
 Object ( List Out) ListOut:C( Variant In1, Variant In2) ;  //_GUI 26,130
 Object ( Variant Out1) CollectMSB:C( Variant In1, Variant In2
    , Variant In3, Variant In4) ;  //_GUI 29,15
 Object ( List Out) ListOut:D( Variant In1, Variant In2) ;  //_GUI 38,144
 Object ( List Out) ListOut:E( Variant In1, Variant In2) ;  //_GUI 25,146
 Object Text;  //_GUI 73,123,The upper list is MSB shaped while the lower list is LSB shaped.  The SameListStruct will recognize these as unmatched.

 // Behavior Topology
 Output.0 = SameListStruct.0;  
 Output:A.0 = SameListStruct:B.0;  
 Output:B.0 = SameListStruct:C.0;  
 Output:C.0 = SameListStruct:A.0;  
 SameListStruct.0 = CollectMSB:C.0;  //_GUI 47,33, 47,18
 SameListStruct.1 = CollectMSB:B.0;  
 CollectMSB.0 = Input:O.0;  
 CollectMSB.1 = Input:P.0;  
 CollectMSB.2 = Input:Q.0;  
 SameListStruct:A.0 = ListOut:B.0;  
 SameListStruct:A.1 = ListOut:D.0;  //_GUI 55,139, 55,147
 CollectMSB:A.0 = Input:I.0;  
 CollectMSB:A.1 = Input:J.0;  
 CollectMSB:A.2 = Input:K.0;  
 SameListStruct:B.0 = Input:H.0;  
 SameListStruct:B.1 = CollectMSB:A.0;  //_GUI 41,59, 41,64
 ListOut.0 = Input:N.0;  
 ListOut.1 = ListOut:A.0;  //_GUI 34,93
 ListOut:A.0 = Input:M.0;  
 ListOut:A.1 = Input:L.0;  
 SameListStruct:C.0 = ListOut.0;  //_GUI 48,100, 48,98
 SameListStruct:C.1 = CollectMSB.0;  //_GUI 49,107
 CollectMSB:B.0 = Input:D.0;  
 CollectMSB:B.1 = Input:E.0;  
 CollectMSB:B.2 = Input:F.0;  
 CollectMSB:B.3 = Input:G.0;  
 ListOut:B.0 = Input:T.0;  
 ListOut:B.1 = ListOut:C.0;  //_GUI 38,133
 ListOut:C.0 = Input:S.0;  
 ListOut:C.1 = Input:R.0;  
 CollectMSB:C.0 = Input.0;  
 CollectMSB:C.1 = Input:A.0;  
 CollectMSB:C.2 = Input:B.0;  
 CollectMSB:C.3 = Input:C.0;  
 ListOut:D.0 = ListOut:E.0;  
 ListOut:D.1 = Input:U.0;  //_GUI 38,145
 ListOut:E.0 = Input:W.0;  
 ListOut:E.1 = Input:V.0;  
}

Object Ex_SameListStruct
//_Attributes TreeGroup=CoreLib_Examples\Grammar/Datasets\DatasetInfo\Examples\Ex
{
 //_ Object Prototypes
 Object ( List Out1) PackMSB( Variant In1, Variant In2
    , Variant In3, Variant In4) ;  //_GUI 36,22
 Object ( List Out1) PackMSB:A( Variant In1, Variant In2
    , Variant In3, Variant In4) ;  //_GUI 36,38
 Object ( LSB003 In) Input;  //_GUI 30,23
 //_Attributes Constant="*0"
 Object ( LSB003 In) Input:A;  //_GUI 30,26
 //_Attributes Constant="*0"
 Object ( LSB003 In) Input:B;  //_GUI 30,29
 //_Attributes Constant="*0"
 Object ( LSB003 In) Input:C;  //_GUI 30,32
 //_Attributes Constant="*0"
 Object ( Bit In) Input:D;  //_GUI 30,39
 //_Attributes Constant="*0"
 Object ( Bit In) Input:E;  //_GUI 30,42
 //_Attributes Constant="*0"
 Object ( Bit In) Input:F;  //_GUI 30,45
 //_Attributes Constant="*0"
 Object ( Bit In) Input:G;  //_GUI 30,48
 //_Attributes Constant="*0"
 Object ( Bit Out1) SameListStruct( Variant In1, Variant In2) ;  //_GUI 54,31
 //_Attributes Documentation=list/list
 Object ( Bit Out) INVERT( Bit In1) ;  //_GUI 71,31
 Object Output( Bit Trap) ;  //_GUI 85,33
 //_Attributes Trap=Trap 1: List structures differ.
 Object Text;  //_GUI 97,33,Trap 1: List structures differ.
 Object ( List Out1) PackMSB:B( Variant In1, Variant In2
    , Variant In3, Variant In4) ;  //_GUI 36,70
 Object ( LSB003 In) Input:H;  //_GUI 30,55
 //_Attributes Constant="*0"
 Object ( LSB003 In) Input:I;  //_GUI 30,58
 //_Attributes Constant="*0"
 Object ( LSB003 In) Input:J;  //_GUI 30,61
 //_Attributes Constant="*0"
 Object ( LSB003 In) Input:K;  //_GUI 30,64
 //_Attributes Constant="*0"
 Object ( Bit In) Input:L;  //_GUI 30,71
 //_Attributes Constant="*0"
 Object ( Bit In) Input:M;  //_GUI 30,74
 //_Attributes Constant="*0"
 Object ( Bit In) Input:N;  //_GUI 30,77
 //_Attributes Constant="*0"
 Object ( Bit In) Input:O;  //_GUI 30,80
 //_Attributes Constant="*0"
 Object ( Bit Out1) SameListStruct:A( Variant In1, Variant In2) ;  //_GUI 54,63
 //_Attributes Documentation=list/list
 Object ( Bit Out) INVERT:A( Bit In1) ;  //_GUI 71,63
 Object Output:A( Bit Trap) ;  //_GUI 85,65
 //_Attributes Trap=Trap 2: List structures differ.
 Object Text;  //_GUI 97,65,Trap 2: List structures differ.
 Object Text;  //_GUI 82,25,Should not trap.
 Object ( List Out1) PackLSB( Variant In1, Variant In2
    , Variant In3, Variant In4) ;  //_GUI 36,54
 Object Text;  //_GUI 81,57,Should trap.
 Object ( LSB003 In) Input:P;  //_GUI 30,87
 //_Attributes Constant="*0"
 Object ( LSB003 In) Input:Q;  //_GUI 30,90
 //_Attributes Constant="*0"
 Object ( LSB003 In) Input:R;  //_GUI 30,93
 //_Attributes Constant="*0"
 Object ( LSB003 In) Input:S;  //_GUI 30,96
 //_Attributes Constant="*0"
 Object ( Bit In) Input:T;  //_GUI 30,103
 //_Attributes Constant="*0"
 Object ( Bit In) Input:U;  //_GUI 30,106
 //_Attributes Constant="*0"
 Object ( Bit In) Input:V;  //_GUI 30,109
 //_Attributes Constant="*0"
 Object ( Bit In) Input:W;  //_GUI 30,112
 //_Attributes Constant="*0"
 Object ( Bit Out1) SameListStruct:B( Variant In1, Variant In2) ;  //_GUI 54,95
 //_Attributes Documentation=list/list
 Object ( Bit Out) INVERT:B( Bit In1) ;  //_GUI 71,95
 Object Output:B( Bit Trap) ;  //_GUI 85,97
 //_Attributes Trap=Trap 3: List structures differ.
 Object Text;  //_GUI 97,97,Trap 3: List structures differ.
 Object ( List Out1) PackLSB:A( Variant In1, Variant In2
    , Variant In3, Variant In4) ;  //_GUI 36,86
 Object Text;  //_GUI 81,89,Should trap.
 Object ( List Out1) PackLSB:B( Variant In1, Variant In2
    , Variant In3, Variant In4, Variant In5) ;  //_GUI 36,102
 Object ( Bit In) Input:X;  //_GUI 30,115
 //_Attributes Constant="*0"

 // Behavior Topology
 PackMSB.0 = Input.0;  
 PackMSB.1 = Input:A.0;  
 PackMSB.2 = Input:B.0;  
 PackMSB.3 = Input:C.0;  
 PackMSB:A.0 = Input:D.0;  
 PackMSB:A.1 = Input:E.0;  
 PackMSB:A.2 = Input:F.0;  
 PackMSB:A.3 = Input:G.0;  
 SameListStruct.0 = PackMSB.0;  //_GUI 49,33, 49,25
 SameListStruct.1 = PackMSB:A.0;  //_GUI 49,36, 49,41
 INVERT.0 = SameListStruct.0;  
 Output.0 = INVERT.0;  
 PackMSB:B.0 = Input:L.0;  
 PackMSB:B.1 = Input:M.0;  
 PackMSB:B.2 = Input:N.0;  
 PackMSB:B.3 = Input:O.0;  
 SameListStruct:A.0 = PackLSB.0;  //_GUI 49,65, 49,57
 SameListStruct:A.1 = PackMSB:B.0;  //_GUI 49,68, 49,73
 INVERT:A.0 = SameListStruct:A.0;  
 Output:A.0 = INVERT:A.0;  
 PackLSB.0 = Input:H.0;  
 PackLSB.1 = Input:I.0;  
 PackLSB.2 = Input:J.0;  
 PackLSB.3 = Input:K.0;  
 SameListStruct:B.0 = PackLSB:A.0;  //_GUI 49,97, 49,89
 SameListStruct:B.1 = PackLSB:B.0;  //_GUI 49,100, 49,105
 INVERT:B.0 = SameListStruct:B.0;  
 Output:B.0 = INVERT:B.0;  
 PackLSB:A.0 = Input:P.0;  
 PackLSB:A.1 = Input:Q.0;  
 PackLSB:A.2 = Input:R.0;  
 PackLSB:A.3 = Input:S.0;  
 PackLSB:B.0 = Input:T.0;  
 PackLSB:B.1 = Input:U.0;  
 PackLSB:B.2 = Input:V.0;  
 PackLSB:B.3 = Input:W.0;  
 PackLSB:B.4 = Input:X.0;  
}

Object ( Bit SPO, Bit DPO) "Test ram16x1d"( Bit WE
    , Bit D, Bit ClkG, MSB004 PortAAddr, MSB004 PortBAddr) 
//_Attributes TreeGroup=CoreLib_Examples\Memory\Examples
{
 //_ Object Prototypes
 Object ( Bit WE) Input;  //_GUI 22,23
 Object ( Bit D) Input:A;  //_GUI 52,27
 Object ( Bit ClkG) Input:B;  //_GUI 52,30
 //_Attributes Resource=*Global
 Object ( MSB004 PortAAddr) Input:C;  //_GUI 42,34
 Object ( MSB004 PortBAddr) Input:D;  //_GUI 42,46
 Object Output( Bit SPO) ;  //_GUI 94,24
 Object Output:A( Bit DPO) ;  //_GUI 94,27
 Object ( Variant Out1, Variant Out2, Variant Out3
    , Variant Out4) ExposeMSB( Variant In1) ;  //_GUI 52,32
 Object ( Bit Pulse) OneShot( Bit I, Bit ClkG) ;  //_GUI 35,22
 Object ( Variant Out1, Variant Out2, Variant Out3
    , Variant Out4) ExposeMSB:A( Variant In1) ;  //_GUI 52,44
 Object ( Bit SPO, Bit DPO) RAM16X1D( Bit WE
    , Bit D, Bit WCLK, Bit A3, Bit A2
    , Bit A1, Bit A0, Bit DPRA3, Bit DPRA2
    , Bit DPRA1, Bit DPRA0) ;  //_GUI 67,23
 //_Attributes Primitive,System=PEn,Resource=Generic,LibRef=RAM16X1D

 // Behavior Topology
 Output.0 = RAM16X1D.0;  
 Output:A.0 = RAM16X1D.1;  
 ExposeMSB.0 = Input:C.0;  
 OneShot.0 = Input.0;  
 ExposeMSB:A.0 = Input:D.0;  
 RAM16X1D.0 = OneShot.0;  
 RAM16X1D.1 = Input:A.0;  
 RAM16X1D.2 = Input:B.0;  
 RAM16X1D.3 = ExposeMSB.0;  
 RAM16X1D.4 = ExposeMSB.1;  
 RAM16X1D.5 = ExposeMSB.2;  
 RAM16X1D.6 = ExposeMSB.3;  
 RAM16X1D.7 = ExposeMSB:A.0;  
 RAM16X1D.8 = ExposeMSB:A.1;  
 RAM16X1D.9 = ExposeMSB:A.2;  
 RAM16X1D.10 = ExposeMSB:A.3;  
}

Object ( Bit SPO, Bit DPO) "Test ram32x1d"( Bit WE
    , Bit D, Bit ClkG, MSB005 PortAAddr, MSB005 PortBAddr) 
//_Attributes TreeGroup=CoreLib_Examples\Memory\Examples
{
 //_ Object Prototypes
 Object ( Bit WE) Input;  //_GUI 22,23
 Object ( Bit D) Input:A;  //_GUI 52,27
 Object ( Bit ClkG) Input:B;  //_GUI 52,30
 //_Attributes Resource=*Global
 Object ( MSB005 PortAAddr) Input:C;  //_GUI 40,34
 Object ( MSB005 PortBAddr) Input:D;  //_GUI 40,49
 Object Output( Bit SPO) ;  //_GUI 95,24
 Object Output:A( Bit DPO) ;  //_GUI 95,27
 Object ( Bit Pulse) OneShot( Bit I, Bit ClkG) ;  //_GUI 35,22
 Object ( Bit SPO, Bit DPO) RAM32X1D( Bit WE
    , Bit D, Bit WCLK, Bit A4, Bit A3
    , Bit A2, Bit A1, Bit A0, Bit DPRA4
    , Bit DPRA3, Bit DPRA2, Bit DPRA1, Bit DPRA0) ;  //_GUI 68,23
 //_Attributes Primitive,System=PEn,Resource=Generic,LibRef=RAM32X1D
 Object ( Variant Out1, Variant Out2, Variant Out3
    , Variant Out4, Variant Out5) ExposeMSB( Variant In1) ;  //_GUI 53,32
 Object ( Variant Out1, Variant Out2, Variant Out3
    , Variant Out4, Variant Out5) ExposeMSB:A( Variant In1) ;  //_GUI 53,47

 // Behavior Topology
 Output.0 = RAM32X1D.0;  
 Output:A.0 = RAM32X1D.1;  
 OneShot.0 = Input.0;  
 RAM32X1D.0 = OneShot.0;  
 RAM32X1D.1 = Input:A.0;  
 RAM32X1D.2 = Input:B.0;  
 RAM32X1D.3 = ExposeMSB.0;  
 RAM32X1D.4 = ExposeMSB.1;  
 RAM32X1D.5 = ExposeMSB.2;  
 RAM32X1D.6 = ExposeMSB.3;  
 RAM32X1D.7 = ExposeMSB.4;  
 RAM32X1D.8 = ExposeMSB:A.0;  
 RAM32X1D.9 = ExposeMSB:A.1;  
 RAM32X1D.10 = ExposeMSB:A.2;  
 RAM32X1D.11 = ExposeMSB:A.3;  
 RAM32X1D.12 = ExposeMSB:A.4;  
 ExposeMSB.0 = Input:C.0;  
 ExposeMSB:A.0 = Input:D.0;  
}

Object ( Bit SPO, Bit DPO) "Test ram64x1d"( Bit Start
    , Bit ClkG, MSB006 PortAAddr, MSB006 PortBAddr, Bit "Write/Read") 
//_Attributes TreeGroup=CoreLib_Examples\Memory\Examples
{
 //_ Object Prototypes
 Object ( Bit Start) Input;  //_GUI 28,32
 Object ( Bit ClkG) Input:A;  //_GUI 119,39
 //_Attributes Resource=*Global
 Object ( MSB006 PortAAddr) Input:B;  //_GUI 39,45
 Object ( MSB006 PortBAddr) Input:C;  //_GUI 38,63
 Object ( Bit "Write/Read") Input:D;  //_GUI 38,66
 Object Output( Bit SPO) ;  //_GUI 162,33
 Object Output:A( Bit DPO) ;  //_GUI 162,36
 Object ( Variant Iteration, Bit LastDone, Bit Done
    , Variant Busy) DoneForN_Up( Variant Iterations, Bit ClkG, Bit AClr
    , Variant Go, Bit Wait) ;  //_GUI 54,23
 Object ( Variant O) Mux( Variant A, Variant B
    , Bit S) ;  //_GUI 87,41
 Object ( Variant O) Mux:A( Variant A, Variant B
    , Bit S) ;  //_GUI 87,59
 Object ( Variant Out1, Variant Out2, Variant Out3
    , Variant Out4, Variant Out5, Variant Out6) ExposeMSB( Variant In1) ;  //_GUI 103,41
 Object ( Variant Out1, Variant Out2, Variant Out3
    , Variant Out4, Variant Out5, Variant Out6) ExposeMSB:A( Variant In1) ;  //_GUI 103,59
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction
    ( Variant In1) ;  //_GUI 81,42
 Object ( Bit SPO, Bit DPO) RAM64X1D( Bit WE
    , Bit D, Bit WCLK, Bit A5, Bit A4
    , Bit A3, Bit A2, Bit A1, Bit A0
    , Bit DPRA5, Bit DPRA4, Bit DPRA3, Bit DPRA2
    , Bit DPRA1, Bit DPRA0) ;  //_GUI 136,32
 //_Attributes Primitive,System=PEn,Resource=Generic,LibRef=RAM64X1D
 Object ( Variant Out1, Variant Out11) ExposeLSB( Variant In1) ;  //_GUI 86,22
 //_Attributes Documentation=Error
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:A
    ( Variant In0) ;  //_GUI 81,24
 Object ( Bit Pulse) OneShot( Bit I, Bit ClkG) ;  //_GUI 37,31
 Object ( MSB006 Iter) Input:E;  //_GUI 48,24
 //_Attributes Constant="*63"
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:B
    ( Bit In0) ;  //_GUI 79,66

 // Behavior Topology
 Output.0 = RAM64X1D.0;  
 Output:A.0 = RAM64X1D.1;  
 DoneForN_Up.0 = Input:E.0;  
 DoneForN_Up.3 = OneShot.0;  
 Mux.0 = Junction.1;  
 Mux.1 = Input:B.0;  
 Mux.2 = Junction:B.0;  //_GUI 80,49
 Mux:A.0 = Junction.2;  //_GUI 82,61
 Mux:A.1 = Input:C.0;  
 Mux:A.2 = Junction:B.1;  
 ExposeMSB.0 = Mux.0;  
 ExposeMSB:A.0 = Mux:A.0;  
 Junction.0 = Junction:A.2;  
 RAM64X1D.0 = DoneForN_Up.2;  
 RAM64X1D.1 = ExposeLSB.1;  //_GUI 119,37, 119,27
 RAM64X1D.2 = Input:A.0;  
 RAM64X1D.3 = ExposeMSB.0;  
 RAM64X1D.4 = ExposeMSB.1;  
 RAM64X1D.5 = ExposeMSB.2;  
 RAM64X1D.6 = ExposeMSB.3;  
 RAM64X1D.7 = ExposeMSB.4;  
 RAM64X1D.8 = ExposeMSB.5;  
 RAM64X1D.9 = ExposeMSB:A.0;  
 RAM64X1D.10 = ExposeMSB:A.1;  
 RAM64X1D.11 = ExposeMSB:A.2;  
 RAM64X1D.12 = ExposeMSB:A.3;  
 RAM64X1D.13 = ExposeMSB:A.4;  
 RAM64X1D.14 = ExposeMSB:A.5;  
 ExposeLSB.0 = Junction:A.1;  
 Junction:A.0 = DoneForN_Up.0;  
 OneShot.0 = Input.0;  
 Junction:B.0 = Input:D.0;  
}

Object ( Bit O) "Test RAM32X1S"( Bit WE, Bit D
    , Bit ClkG, MSB005 Addr) 
//_Attributes TreeGroup=CoreLib_Examples\Memory\Examples
{
 //_ Object Prototypes
 Object ( Bit WE) Input;  //_GUI 78,38
 Object ( Bit D) Input:A;  //_GUI 115,41
 Object ( Bit ClkG) Input:B;  //_GUI 125,44
 //_Attributes Resource=*Global
 Object ( MSB005 Addr) Input:C;  //_GUI 78,48
 Object Output( Bit O) ;  //_GUI 154,39
 Object ( Bit O) RAM32X1S( Bit WE, Bit D
    , Bit WCLK, Bit A4, Bit A3, Bit A2
    , Bit A1, Bit A0) ;  //_GUI 139,37
 //_Attributes Primitive,System=PEn,Resource=Generic,LibRef=RAM32X1S
 Object ( Variant Out1, Variant Out2, Variant Out3
    , Variant Out4, Variant Out5) ExposeMSB( Variant In1) ;  //_GUI 106,46

 // Behavior Topology
 Output.0 = RAM32X1S.0;  
 RAM32X1S.0 = Input.0;  
 RAM32X1S.1 = Input:A.0;  
 RAM32X1S.2 = Input:B.0;  
 RAM32X1S.3 = ExposeMSB.0;  
 RAM32X1S.4 = ExposeMSB.1;  
 RAM32X1S.5 = ExposeMSB.2;  
 RAM32X1S.6 = ExposeMSB.3;  
 RAM32X1S.7 = ExposeMSB.4;  
 ExposeMSB.0 = Input:C.0;  
}

Object ( Bit O) "Test RAM64X1S"( Bit WE, Bit D
    , Bit ClkG, MSB006 Addr) 
//_Attributes TreeGroup=CoreLib_Examples\Memory\Examples
{
 //_ Object Prototypes
 Object ( Bit WE) Input;  //_GUI 78,38
 Object ( Bit D) Input:A;  //_GUI 115,41
 Object ( Bit ClkG) Input:B;  //_GUI 125,44
 //_Attributes Resource=*Global
 Object ( MSB006 Addr) Input:C;  //_GUI 78,48
 Object Output( Bit O) ;  //_GUI 154,39
 Object ( Bit O) RAM64X1S( Bit WE, Bit D
    , Bit WCLK, Bit A5, Bit A4, Bit A3
    , Bit A2, Bit A1, Bit A0) ;  //_GUI 138,37
 //_Attributes Primitive,System=PEn,Resource=Generic,LibRef=RAM64X1S
 Object ( Variant Out1, Variant Out2, Variant Out3
    , Variant Out4, Variant Out5, Variant Out6) ExposeMSB( Variant In1) ;  //_GUI 106,46

 // Behavior Topology
 Output.0 = RAM64X1S.0;  
 RAM64X1S.0 = Input.0;  
 RAM64X1S.1 = Input:A.0;  
 RAM64X1S.2 = Input:B.0;  
 RAM64X1S.3 = ExposeMSB.0;  
 RAM64X1S.4 = ExposeMSB.1;  
 RAM64X1S.5 = ExposeMSB.2;  
 RAM64X1S.6 = ExposeMSB.3;  
 RAM64X1S.7 = ExposeMSB.4;  
 RAM64X1S.8 = ExposeMSB.5;  
 ExposeMSB.0 = Input:C.0;  
}

Object ( Bit O) "Test RAM128X1S"( Bit Start, Bit ClkG
    , MSB007 PortAAddr, Bit "Write/Read") 
//_Attributes TreeGroup=CoreLib_Examples\Memory\Examples
{
 //_ Object Prototypes
 Object ( Bit Start) Input;  //_GUI 29,38
 Object ( Bit ClkG) Input:A;  //_GUI 120,45
 //_Attributes Resource=*Global
 Object ( MSB007 PortAAddr) Input:B;  //_GUI 40,51
 Object ( Bit "Write/Read") Input:C;  //_GUI 40,54
 Object Output( Bit O) ;  //_GUI 163,40
 Object ( Variant Iteration, Bit LastDone, Bit Done
    , Variant Busy) DoneForN_Up( Variant Iterations, Bit ClkG, Bit AClr
    , Variant Go, Bit Wait) ;  //_GUI 55,29
 Object ( Variant O) Mux( Variant A, Variant B
    , Bit S) ;  //_GUI 88,47
 Object ( Variant Out1, Variant Out11) ExposeLSB( Variant In1) ;  //_GUI 87,28
 //_Attributes Documentation=Error
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction
    ( Variant In0) ;  //_GUI 82,30
 Object ( Bit Pulse) OneShot( Bit I, Bit ClkG) ;  //_GUI 38,37
 Object ( MSB007 Iter) Input:D;  //_GUI 49,30
 //_Attributes Constant="*127"
 Object ( Bit O) RAM128X1S( Bit WE, Bit D
    , Bit WCLK, Bit A6, Bit A5, Bit A4
    , Bit A3, Bit A2, Bit A1, Bit A0) ;  //_GUI 137,38
 //_Attributes Primitive,System=PEn,Resource=Generic,LibRef=RAM128X1S
 Object ( Variant Out1, Variant Out2, Variant Out3
    , Variant Out4, Variant Out5, Variant Out6, Variant Out7) ExposeMSB
    ( Variant In1) ;  //_GUI 104,47

 // Behavior Topology
 Output.0 = RAM128X1S.0;  
 DoneForN_Up.0 = Input:D.0;  
 DoneForN_Up.3 = OneShot.0;  
 Mux.0 = Junction.2;  //_GUI 83,49
 Mux.1 = Input:B.0;  
 Mux.2 = Input:C.0;  
 ExposeLSB.0 = Junction.1;  
 Junction.0 = DoneForN_Up.0;  
 OneShot.0 = Input.0;  
 RAM128X1S.0 = DoneForN_Up.2;  
 RAM128X1S.1 = ExposeLSB.1;  //_GUI 120,43, 120,33
 RAM128X1S.2 = Input:A.0;  
 RAM128X1S.3 = ExposeMSB.0;  
 RAM128X1S.4 = ExposeMSB.1;  
 RAM128X1S.5 = ExposeMSB.2;  
 RAM128X1S.6 = ExposeMSB.3;  
 RAM128X1S.7 = ExposeMSB.4;  
 RAM128X1S.8 = ExposeMSB.5;  
 RAM128X1S.9 = ExposeMSB.6;  
 ExposeMSB.0 = Mux.0;  
}

Object ( Variant DOA, Variant DOB) "Test RAMB16_S2_S2"( Bit Start
    , Bit ClkG, MSB013 PortAAddr, MSB013 PortBAddr, Bit "Write/Read") 
//_Attributes TreeGroup=CoreLib_Examples\Memory\Examples
{
 //_ Object Prototypes
 Object ( Bit Start) Input;  //_GUI 28,32
 Object ( Bit ClkG) Input:A;  //_GUI 51,42
 //_Attributes Resource=*Global
 Object ( MSB013 PortAAddr) Input:B;  //_GUI 39,48
 Object ( MSB013 PortBAddr) Input:C;  //_GUI 38,105
 Object ( Bit "Write/Read") Input:D;  //_GUI 38,108
 Object Output( Variant DOA) ;  //_GUI 180,34
 Object Output:A( Variant DOB) ;  //_GUI 180,40
 Object ( Variant O) Mux( Variant A, Variant B
    , Bit S) ;  //_GUI 82,44
 Object ( Variant O) Mux:A( Variant A, Variant B
    , Bit S) ;  //_GUI 82,101
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction
    ( Variant In1) ;  //_GUI 76,45
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:A
    ( Variant In0) ;  //_GUI 76,24
 Object ( Bit Pulse) OneShot( Bit I, Bit ClkG) ;  //_GUI 37,31
 Object ( MSB013 Iter) Input:E;  //_GUI 48,24
 //_Attributes Constant="*8191"
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:B
    ( Bit In0) ;  //_GUI 74,108
 Object ( Bit DOA1, Bit DOA0, Bit DOB1
    , Bit DOB0) RAMB16_S2_S2( Bit WEA, Bit ENA, Bit SSRA
    , Bit CLKA, Bit ADDRA12, Bit ADDRA11, Bit ADDRA10
    , Bit ADDRA9, Bit ADDRA8, Bit ADDRA7, Bit ADDRA6
    , Bit ADDRA5, Bit ADDRA4, Bit ADDRA3, Bit ADDRA2
    , Bit ADDRA1, Bit ADDRA0, Bit DIA1, Bit DIA0
    , Bit WEB, Bit ENB, Bit SSRB, Bit CLKB
    , Bit ADDRB12, Bit ADDRB11, Bit ADDRB10, Bit ADDRB9
    , Bit ADDRB8, Bit ADDRB7, Bit ADDRB6, Bit ADDRB5
    , Bit ADDRB4, Bit ADDRB3, Bit ADDRB2, Bit ADDRB1
    , Bit ADDRB0, Bit DIB1, Bit DIB0) ;  //_GUI 139,32
 //_Attributes Primitive,System=PEn,Resource=Generic,LibRef=RAMB16_S2_S2
 Object ( Bit In) Input:F;  //_GUI 131,36
 //_Attributes Constant="*1"
 Object ( Bit In) Input:G;  //_GUI 131,39
 //_Attributes Constant="*0"
 Object ( Variant Out1) CollectMSB( Variant In2, Variant In3) ;  //_GUI 161,32
 Object ( Variant Out1) CollectMSB:A( Variant In2, Variant In3) ;  //_GUI 161,38
 Object ( Variant Iteration, Bit LastDone, Bit Done
    , Variant Busy) DoneForN_Up( Variant Iterations, Bit ClkG, Bit AClr
    , Variant Go, Bit Wait) ;  //_GUI 54,23
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:C
    ( Bit In0) ;  //_GUI 115,42
 Object ( Bit In) Input:H;  //_GUI 131,93
 //_Attributes Constant="*1"
 Object ( Bit In) Input:I;  //_GUI 131,96
 //_Attributes Constant="*0"
 Object ( Bit In) Input:J;  //_GUI 131,90
 //_Attributes Constant="*0"
 Object ( Variant Hi, Variant Lo) Lo_N( Variant Data
    , Variant Lo_N) ;  //_GUI 86,23
 Object ( MSB002 In) Input:K;  //_GUI 80,27
 //_Attributes Constant="*0"
 Object ( Variant Out1, Variant Out11) ExposeMSB( Variant In1) ;  //_GUI 119,83
 //_Attributes Documentation=bit
 Object ( Variant Out1, Variant Out11) ExposeMSB:A( Variant In1) ;  //_GUI 119,140
 //_Attributes Documentation=bit
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:D
    ( Variant In1) ;  //_GUI 102,85
 Object ( Variant Out1, Variant Out2, Variant Out3
    , Variant Out4, Variant Out5, Variant Out6, Variant Out7
    , Variant Out8, Variant Out9, Variant Out10, Variant Out11
    , Variant Out12, Variant Out13) ExposeMSB:B( Variant In1) ;  //_GUI 119,44
 Object ( Variant Out1, Variant Out2, Variant Out3
    , Variant Out4, Variant Out5, Variant Out6, Variant Out7
    , Variant Out8, Variant Out9, Variant Out10, Variant Out11
    , Variant Out12, Variant Out13) ExposeMSB:C( Variant In1) ;  //_GUI 119,101
 Object ( Variant Out1) Zero( Variant In1) ;  //_GUI 106,140
 //_Attributes Documentation=Bit

 // Behavior Topology
 Output.0 = CollectMSB.0;  
 Output:A.0 = CollectMSB:A.0;  
 Mux.0 = Junction.1;  
 Mux.1 = Input:B.0;  
 Mux.2 = Junction:B.0;  //_GUI 75,52
 Mux:A.0 = Junction.2;  //_GUI 77,103
 Mux:A.1 = Input:C.0;  
 Mux:A.2 = Junction:B.1;  
 Junction.0 = Junction:A.2;  
 Junction:A.0 = DoneForN_Up.0;  
 OneShot.0 = Input.0;  
 Junction:B.0 = Input:D.0;  
 RAMB16_S2_S2.0 = DoneForN_Up.2;  
 RAMB16_S2_S2.1 = Input:F.0;  
 RAMB16_S2_S2.2 = Input:G.0;  
 RAMB16_S2_S2.3 = Junction:C.1;  
 RAMB16_S2_S2.4 = ExposeMSB:B.0;  
 RAMB16_S2_S2.5 = ExposeMSB:B.1;  
 RAMB16_S2_S2.6 = ExposeMSB:B.2;  
 RAMB16_S2_S2.7 = ExposeMSB:B.3;  
 RAMB16_S2_S2.8 = ExposeMSB:B.4;  
 RAMB16_S2_S2.9 = ExposeMSB:B.5;  
 RAMB16_S2_S2.10 = ExposeMSB:B.6;  
 RAMB16_S2_S2.11 = ExposeMSB:B.7;  
 RAMB16_S2_S2.12 = ExposeMSB:B.8;  
 RAMB16_S2_S2.13 = ExposeMSB:B.9;  
 RAMB16_S2_S2.14 = ExposeMSB:B.10;  
 RAMB16_S2_S2.15 = ExposeMSB:B.11;  
 RAMB16_S2_S2.16 = ExposeMSB:B.12;  
 RAMB16_S2_S2.17 = ExposeMSB.0;  
 RAMB16_S2_S2.18 = ExposeMSB.1;  
 RAMB16_S2_S2.19 = Input:J.0;  
 RAMB16_S2_S2.20 = Input:H.0;  
 RAMB16_S2_S2.21 = Input:I.0;  
 RAMB16_S2_S2.22 = Junction:C.2;  //_GUI 116,100
 RAMB16_S2_S2.23 = ExposeMSB:C.0;  
 RAMB16_S2_S2.24 = ExposeMSB:C.1;  
 RAMB16_S2_S2.25 = ExposeMSB:C.2;  
 RAMB16_S2_S2.26 = ExposeMSB:C.3;  
 RAMB16_S2_S2.27 = ExposeMSB:C.4;  
 RAMB16_S2_S2.28 = ExposeMSB:C.5;  
 RAMB16_S2_S2.29 = ExposeMSB:C.6;  
 RAMB16_S2_S2.30 = ExposeMSB:C.7;  
 RAMB16_S2_S2.31 = ExposeMSB:C.8;  
 RAMB16_S2_S2.32 = ExposeMSB:C.9;  
 RAMB16_S2_S2.33 = ExposeMSB:C.10;  
 RAMB16_S2_S2.34 = ExposeMSB:C.11;  
 RAMB16_S2_S2.35 = ExposeMSB:C.12;  
 RAMB16_S2_S2.36 = ExposeMSB:A.0;  
 RAMB16_S2_S2.37 = ExposeMSB:A.1;  
 CollectMSB.0 = RAMB16_S2_S2.0;  
 CollectMSB.1 = RAMB16_S2_S2.1;  
 CollectMSB:A.0 = RAMB16_S2_S2.2;  
 CollectMSB:A.1 = RAMB16_S2_S2.3;  
 DoneForN_Up.0 = Input:E.0;  
 DoneForN_Up.3 = OneShot.0;  
 Junction:C.0 = Input:A.0;  
 Lo_N.0 = Junction:A.1;  
 Lo_N.1 = Input:K.0;  
 ExposeMSB.0 = Junction:D.1;  
 ExposeMSB:A.0 = Zero.0;  
 Junction:D.0 = Lo_N.1;  //_GUI 103,28
 ExposeMSB:B.0 = Mux.0;  
 ExposeMSB:C.0 = Mux:A.0;  
 Zero.0 = Junction:D.2;  //_GUI 103,143
}

Object ( Variant DOA, Variant DOB) "Test RAMB16_S4_S4"( Bit Start
    , Bit ClkG, MSB012 PortAAddr, MSB012 PortBAddr, Bit "Write/Read") 
//_Attributes TreeGroup=CoreLib_Examples\Memory\Examples
{
 //_ Object Prototypes
 Object ( Bit Start) Input;  //_GUI 28,32
 Object ( Bit ClkG) Input:A;  //_GUI 51,42
 //_Attributes Resource=*Global
 Object ( MSB012 PortAAddr) Input:B;  //_GUI 39,48
 Object ( MSB012 PortBAddr) Input:C;  //_GUI 38,108
 Object ( Bit "Write/Read") Input:D;  //_GUI 38,111
 Object Output( Variant DOA) ;  //_GUI 184,34
 Object Output:A( Variant DOB) ;  //_GUI 184,46
 Object ( Variant O) Mux( Variant A, Variant B
    , Bit S) ;  //_GUI 82,44
 Object ( Variant O) Mux:A( Variant A, Variant B
    , Bit S) ;  //_GUI 82,104
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction
    ( Variant In1) ;  //_GUI 76,45
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:A
    ( Variant In0) ;  //_GUI 76,24
 Object ( Bit Pulse) OneShot( Bit I, Bit ClkG) ;  //_GUI 37,31
 Object ( MSB012 Iter) Input:E;  //_GUI 48,24
 //_Attributes Constant="*4095"
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:B
    ( Bit In0) ;  //_GUI 74,111
 Object ( Bit In) Input:F;  //_GUI 131,36
 //_Attributes Constant="*1"
 Object ( Bit In) Input:G;  //_GUI 131,39
 //_Attributes Constant="*0"
 Object ( Variant Iteration, Bit LastDone, Bit Done
    , Variant Busy) DoneForN_Up( Variant Iterations, Bit ClkG, Bit AClr
    , Variant Go, Bit Wait) ;  //_GUI 54,23
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:C
    ( Bit In0) ;  //_GUI 115,42
 Object ( Bit In) Input:H;  //_GUI 131,96
 //_Attributes Constant="*1"
 Object ( Bit In) Input:I;  //_GUI 131,99
 //_Attributes Constant="*0"
 Object ( Bit In) Input:J;  //_GUI 131,93
 //_Attributes Constant="*0"
 Object ( Variant Hi, Variant Lo) Lo_N( Variant Data
    , Variant Lo_N) ;  //_GUI 86,23
 Object ( MSB004 In) Input:K;  //_GUI 80,27
 //_Attributes Constant="*0"
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:D
    ( Variant In1) ;  //_GUI 102,82
 Object ( Variant Out1) Zero( Variant In1) ;  //_GUI 106,140
 //_Attributes Documentation=Bit
 Object ( Bit DOA3, Bit DOA2, Bit DOA1
    , Bit DOA0, Bit DOB3, Bit DOB2, Bit DOB1
    , Bit DOB0) RAMB16_S4_S4( Bit WEA, Bit ENA, Bit SSRA
    , Bit CLKA, Bit ADDRA11, Bit ADDRA10, Bit ADDRA9
    , Bit ADDRA8, Bit ADDRA7, Bit ADDRA6, Bit ADDRA5
    , Bit ADDRA4, Bit ADDRA3, Bit ADDRA2, Bit ADDRA1
    , Bit ADDRA0, Bit DIA3, Bit DIA2, Bit "DIA1 "
    , Bit DIA0, Bit WEB, Bit ENB, Bit SSRB
    , Bit CLKB, Bit ADDRB11, Bit ADDRB10, Bit ADDRB9
    , Bit ADDRB8, Bit ADDRB7, Bit ADDRB6, Bit ADDRB5
    , Bit ADDRB4, Bit ADDRB3, Bit ADDRB2, Bit ADDRB1
    , Bit ADDRB0, Bit DIB3, Bit DIB2, Bit DIB1
    , Bit DIB0) ;  //_GUI 140,32
 //_Attributes Primitive,System=PEn,Resource=BlkRAM,LibRef=RAMB16_S4_S4
 Object ( Variant Out1, Variant Out2, Variant Out3
    , Variant Out4, Variant Out5, Variant Out6, Variant Out7
    , Variant Out8, Variant Out9, Variant Out10, Variant Out11
    , Variant Out12) ExposeMSB( Variant In1) ;  //_GUI 119,44
 Object ( Variant Out1, Variant Out2, Variant Out3
    , Variant Out4, Variant Out5, Variant Out6, Variant Out7
    , Variant Out8, Variant Out9, Variant Out10, Variant Out11
    , Variant Out12) ExposeMSB:A( Variant In1) ;  //_GUI 119,104
 Object ( Variant Out1, Variant Out2, Variant Out3
    , Variant Out4) ExposeMSB:B( Variant In1) ;  //_GUI 119,140
 Object ( Variant Out1, Variant Out2, Variant Out3
    , Variant Out4) ExposeMSB:C( Variant In1) ;  //_GUI 119,80
 Object ( Variant Out1) CollectMSB( Variant In1, Variant In2
    , Variant In3, Variant In4) ;  //_GUI 165,32
 Object ( Variant Out1) CollectMSB:A( Variant In1, Variant In2
    , Variant In3, Variant In4) ;  //_GUI 165,44

 // Behavior Topology
 Output.0 = CollectMSB.0;  
 Output:A.0 = CollectMSB:A.0;  
 Mux.0 = Junction.1;  
 Mux.1 = Input:B.0;  
 Mux.2 = Junction:B.0;  //_GUI 75,52
 Mux:A.0 = Junction.2;  //_GUI 77,106
 Mux:A.1 = Input:C.0;  
 Mux:A.2 = Junction:B.1;  
 Junction.0 = Junction:A.2;  
 Junction:A.0 = DoneForN_Up.0;  
 OneShot.0 = Input.0;  
 Junction:B.0 = Input:D.0;  
 DoneForN_Up.0 = Input:E.0;  
 DoneForN_Up.3 = OneShot.0;  
 Junction:C.0 = Input:A.0;  
 Lo_N.0 = Junction:A.1;  
 Lo_N.1 = Input:K.0;  
 Junction:D.0 = Lo_N.1;  //_GUI 103,28
 Zero.0 = Junction:D.2;  //_GUI 103,143
 RAMB16_S4_S4.0 = DoneForN_Up.2;  
 RAMB16_S4_S4.1 = Input:F.0;  
 RAMB16_S4_S4.2 = Input:G.0;  
 RAMB16_S4_S4.3 = Junction:C.1;  
 RAMB16_S4_S4.4 = ExposeMSB.0;  
 RAMB16_S4_S4.5 = ExposeMSB.1;  
 RAMB16_S4_S4.6 = ExposeMSB.2;  
 RAMB16_S4_S4.7 = ExposeMSB.3;  
 RAMB16_S4_S4.8 = ExposeMSB.4;  
 RAMB16_S4_S4.9 = ExposeMSB.5;  
 RAMB16_S4_S4.10 = ExposeMSB.6;  
 RAMB16_S4_S4.11 = ExposeMSB.7;  
 RAMB16_S4_S4.12 = ExposeMSB.8;  
 RAMB16_S4_S4.13 = ExposeMSB.9;  
 RAMB16_S4_S4.14 = ExposeMSB.10;  
 RAMB16_S4_S4.15 = ExposeMSB.11;  
 RAMB16_S4_S4.16 = ExposeMSB:C.0;  
 RAMB16_S4_S4.17 = ExposeMSB:C.1;  
 RAMB16_S4_S4.18 = ExposeMSB:C.2;  
 RAMB16_S4_S4.19 = ExposeMSB:C.3;  
 RAMB16_S4_S4.20 = Input:J.0;  
 RAMB16_S4_S4.21 = Input:H.0;  
 RAMB16_S4_S4.22 = Input:I.0;  
 RAMB16_S4_S4.23 = Junction:C.2;  //_GUI 116,103
 RAMB16_S4_S4.24 = ExposeMSB:A.0;  
 RAMB16_S4_S4.25 = ExposeMSB:A.1;  
 RAMB16_S4_S4.26 = ExposeMSB:A.2;  
 RAMB16_S4_S4.27 = ExposeMSB:A.3;  
 RAMB16_S4_S4.28 = ExposeMSB:A.4;  
 RAMB16_S4_S4.29 = ExposeMSB:A.5;  
 RAMB16_S4_S4.30 = ExposeMSB:A.6;  
 RAMB16_S4_S4.31 = ExposeMSB:A.7;  
 RAMB16_S4_S4.32 = ExposeMSB:A.8;  
 RAMB16_S4_S4.33 = ExposeMSB:A.9;  
 RAMB16_S4_S4.34 = ExposeMSB:A.10;  
 RAMB16_S4_S4.35 = ExposeMSB:A.11;  
 RAMB16_S4_S4.36 = ExposeMSB:B.0;  
 RAMB16_S4_S4.37 = ExposeMSB:B.1;  
 RAMB16_S4_S4.38 = ExposeMSB:B.2;  
 RAMB16_S4_S4.39 = ExposeMSB:B.3;  
 ExposeMSB.0 = Mux.0;  
 ExposeMSB:A.0 = Mux:A.0;  
 ExposeMSB:B.0 = Zero.0;  
 ExposeMSB:C.0 = Junction:D.1;  
 CollectMSB.0 = RAMB16_S4_S4.0;  
 CollectMSB.1 = RAMB16_S4_S4.1;  
 CollectMSB.2 = RAMB16_S4_S4.2;  
 CollectMSB.3 = RAMB16_S4_S4.3;  
 CollectMSB:A.0 = RAMB16_S4_S4.4;  
 CollectMSB:A.1 = RAMB16_S4_S4.5;  
 CollectMSB:A.2 = RAMB16_S4_S4.6;  
 CollectMSB:A.3 = RAMB16_S4_S4.7;  
}

Object ( Variant DOA, Variant DOB) "Test RAMB16_S9_S9"( Bit Start
    , Bit ClkG, MSB011 PortAAddr, MSB011 PortBAddr, Bit "Write/Read") 
//_Attributes TreeGroup=CoreLib_Examples\Memory\Examples
{
 //_ Object Prototypes
 Object ( Bit Start) Input;  //_GUI 28,32
 Object ( Bit ClkG) Input:A;  //_GUI 51,42
 //_Attributes Resource=*Global
 Object ( MSB011 PortAAddr) Input:B;  //_GUI 39,48
 Object ( MSB011 PortBAddr) Input:C;  //_GUI 38,120
 Object ( Bit "Write/Read") Input:D;  //_GUI 38,123
 Object Output( Variant DOA) ;  //_GUI 191,34
 Object Output:A( Variant DOB) ;  //_GUI 191,61
 Object ( Variant O) Mux( Variant A, Variant B
    , Bit S) ;  //_GUI 82,44
 Object ( Variant O) Mux:A( Variant A, Variant B
    , Bit S) ;  //_GUI 82,116
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction
    ( Variant In1) ;  //_GUI 76,45
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:A
    ( Variant In0) ;  //_GUI 76,24
 Object ( Bit Pulse) OneShot( Bit I, Bit ClkG) ;  //_GUI 37,31
 Object ( MSB011 Iter) Input:E;  //_GUI 48,24
 //_Attributes Constant="*2047"
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:B
    ( Bit In0) ;  //_GUI 74,123
 Object ( Bit In) Input:F;  //_GUI 131,36
 //_Attributes Constant="*1"
 Object ( Bit In) Input:G;  //_GUI 131,39
 //_Attributes Constant="*0"
 Object ( Variant Iteration, Bit LastDone, Bit Done
    , Variant Busy) DoneForN_Up( Variant Iterations, Bit ClkG, Bit AClr
    , Variant Go, Bit Wait) ;  //_GUI 54,23
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:C
    ( Bit In0) ;  //_GUI 115,42
 Object ( Bit In) Input:H;  //_GUI 131,108
 //_Attributes Constant="*1"
 Object ( Bit In) Input:I;  //_GUI 131,111
 //_Attributes Constant="*0"
 Object ( Bit In) Input:J;  //_GUI 131,105
 //_Attributes Constant="*0"
 Object ( Variant Hi, Variant Lo) Lo_N( Variant Data
    , Variant Lo_N) ;  //_GUI 86,23
 Object ( MSB009 In) Input:K;  //_GUI 80,27
 //_Attributes Constant="*0"
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:D
    ( Variant In1) ;  //_GUI 102,79
 Object ( Variant Out1) Zero( Variant In1) ;  //_GUI 106,149
 //_Attributes Documentation=Bit
 Object ( Bit DOPA0, Bit DOA7, Bit DOA6
    , Bit DOA5, Bit DOA4, Bit DOA3, Bit DOA2
    , Bit DOA1, Bit DOA0, Bit DOPB0, Bit DOB7
    , Bit DOB6, Bit DOB5, Bit DOB4, Bit DOB3
    , Bit DOB2, Bit DOB1, Bit DOB0) RAMB16_S9_S9( Bit WEA
    , Bit ENA, Bit SSRA, Bit CLKA, Bit ADDRA10
    , Bit ADDRA9, Bit ADDRA8, Bit ADDRA7, Bit ADDRA6
    , Bit ADDRA5, Bit ADDRA4, Bit ADDRA3, Bit ADDRA2
    , Bit ADDRA1, Bit ADDRA0, Bit DIPA0, Bit DIA7
    , Bit DIA6, Bit DIA5, Bit DIA4, Bit DIA3
    , Bit DIA2, Bit "DIA1 ", Bit DIA0, Bit WEB
    , Bit ENB, Bit SSRB, Bit CLKB, Bit ADDRB10
    , Bit ADDRB9, Bit ADDRB8, Bit ADDRB7, Bit ADDRB6
    , Bit ADDRB5, Bit ADDRB4, Bit ADDRB3, Bit ADDRB2
    , Bit ADDRB1, Bit ADDRB0, Bit DIPB0, Bit DIB7
    , Bit DIB6, Bit DIB5, Bit DIB4, Bit DIB3
    , Bit DIB2, Bit DIB1, Bit DIB0) ;  //_GUI 143,32
 //_Attributes Primitive,System=PEn,Resource=BlkRAM,LibRef=RAMB16_S9_S9
 Object ( Variant Out1, Variant Out2, Variant Out3
    , Variant Out4, Variant Out5, Variant Out6, Variant Out7
    , Variant Out8, Variant Out9) ExposeMSB( Variant In1) ;  //_GUI 119,149
 Object ( Variant Out1, Variant Out2, Variant Out3
    , Variant Out4, Variant Out5, Variant Out6, Variant Out7
    , Variant Out8, Variant Out9, Variant Out10, Variant Out11) ExposeMSB:A
    ( Variant In1) ;  //_GUI 119,116
 Object ( Variant Out1, Variant Out2, Variant Out3
    , Variant Out4, Variant Out5, Variant Out6, Variant Out7
    , Variant Out8, Variant Out9) ExposeMSB:B( Variant In1) ;  //_GUI 119,77
 Object ( Variant Out1, Variant Out2, Variant Out3
    , Variant Out4, Variant Out5, Variant Out6, Variant Out7
    , Variant Out8, Variant Out9, Variant Out10, Variant Out11) ExposeMSB:C
    ( Variant In1) ;  //_GUI 119,44
 Object ( Variant Out1) CollectMSB( Variant In1, Variant In2
    , Variant In3, Variant In4, Variant In5, Variant In6
    , Variant In7, Variant In8, Variant In9) ;  //_GUI 172,59
 Object ( Variant Out1) CollectMSB:A( Variant In1, Variant In2
    , Variant In3, Variant In4, Variant In5, Variant In6
    , Variant In7, Variant In8, Variant In9) ;  //_GUI 172,32

 // Behavior Topology
 Output.0 = CollectMSB:A.0;  
 Output:A.0 = CollectMSB.0;  
 Mux.0 = Junction.1;  
 Mux.1 = Input:B.0;  
 Mux.2 = Junction:B.0;  //_GUI 75,52
 Mux:A.0 = Junction.2;  //_GUI 77,118
 Mux:A.1 = Input:C.0;  
 Mux:A.2 = Junction:B.1;  
 Junction.0 = Junction:A.2;  
 Junction:A.0 = DoneForN_Up.0;  
 OneShot.0 = Input.0;  
 Junction:B.0 = Input:D.0;  
 DoneForN_Up.0 = Input:E.0;  
 DoneForN_Up.3 = OneShot.0;  
 Junction:C.0 = Input:A.0;  
 Lo_N.0 = Junction:A.1;  
 Lo_N.1 = Input:K.0;  
 Junction:D.0 = Lo_N.1;  //_GUI 103,28
 Zero.0 = Junction:D.2;  //_GUI 103,152
 RAMB16_S9_S9.0 = DoneForN_Up.2;  
 RAMB16_S9_S9.1 = Input:F.0;  
 RAMB16_S9_S9.2 = Input:G.0;  
 RAMB16_S9_S9.3 = Junction:C.1;  
 RAMB16_S9_S9.4 = ExposeMSB:C.0;  
 RAMB16_S9_S9.5 = ExposeMSB:C.1;  
 RAMB16_S9_S9.6 = ExposeMSB:C.2;  
 RAMB16_S9_S9.7 = ExposeMSB:C.3;  
 RAMB16_S9_S9.8 = ExposeMSB:C.4;  
 RAMB16_S9_S9.9 = ExposeMSB:C.5;  
 RAMB16_S9_S9.10 = ExposeMSB:C.6;  
 RAMB16_S9_S9.11 = ExposeMSB:C.7;  
 RAMB16_S9_S9.12 = ExposeMSB:C.8;  
 RAMB16_S9_S9.13 = ExposeMSB:C.9;  
 RAMB16_S9_S9.14 = ExposeMSB:C.10;  
 RAMB16_S9_S9.15 = ExposeMSB:B.0;  
 RAMB16_S9_S9.16 = ExposeMSB:B.1;  
 RAMB16_S9_S9.17 = ExposeMSB:B.2;  
 RAMB16_S9_S9.18 = ExposeMSB:B.3;  
 RAMB16_S9_S9.19 = ExposeMSB:B.4;  
 RAMB16_S9_S9.20 = ExposeMSB:B.5;  
 RAMB16_S9_S9.21 = ExposeMSB:B.6;  
 RAMB16_S9_S9.22 = ExposeMSB:B.7;  
 RAMB16_S9_S9.23 = ExposeMSB:B.8;  
 RAMB16_S9_S9.24 = Input:J.0;  
 RAMB16_S9_S9.25 = Input:H.0;  
 RAMB16_S9_S9.26 = Input:I.0;  
 RAMB16_S9_S9.27 = Junction:C.2;  //_GUI 116,115
 RAMB16_S9_S9.28 = ExposeMSB:A.0;  
 RAMB16_S9_S9.29 = ExposeMSB:A.1;  
 RAMB16_S9_S9.30 = ExposeMSB:A.2;  
 RAMB16_S9_S9.31 = ExposeMSB:A.3;  
 RAMB16_S9_S9.32 = ExposeMSB:A.4;  
 RAMB16_S9_S9.33 = ExposeMSB:A.5;  
 RAMB16_S9_S9.34 = ExposeMSB:A.6;  
 RAMB16_S9_S9.35 = ExposeMSB:A.7;  
 RAMB16_S9_S9.36 = ExposeMSB:A.8;  
 RAMB16_S9_S9.37 = ExposeMSB:A.9;  
 RAMB16_S9_S9.38 = ExposeMSB:A.10;  
 RAMB16_S9_S9.39 = ExposeMSB.0;  
 RAMB16_S9_S9.40 = ExposeMSB.1;  
 RAMB16_S9_S9.41 = ExposeMSB.2;  
 RAMB16_S9_S9.42 = ExposeMSB.3;  
 RAMB16_S9_S9.43 = ExposeMSB.4;  
 RAMB16_S9_S9.44 = ExposeMSB.5;  
 RAMB16_S9_S9.45 = ExposeMSB.6;  
 RAMB16_S9_S9.46 = ExposeMSB.7;  
 RAMB16_S9_S9.47 = ExposeMSB.8;  
 ExposeMSB.0 = Zero.0;  
 ExposeMSB:A.0 = Mux:A.0;  
 ExposeMSB:B.0 = Junction:D.1;  
 ExposeMSB:C.0 = Mux.0;  
 CollectMSB.0 = RAMB16_S9_S9.9;  
 CollectMSB.1 = RAMB16_S9_S9.10;  
 CollectMSB.2 = RAMB16_S9_S9.11;  
 CollectMSB.3 = RAMB16_S9_S9.12;  
 CollectMSB.4 = RAMB16_S9_S9.13;  
 CollectMSB.5 = RAMB16_S9_S9.14;  
 CollectMSB.6 = RAMB16_S9_S9.15;  
 CollectMSB.7 = RAMB16_S9_S9.16;  
 CollectMSB.8 = RAMB16_S9_S9.17;  
 CollectMSB:A.0 = RAMB16_S9_S9.0;  
 CollectMSB:A.1 = RAMB16_S9_S9.1;  
 CollectMSB:A.2 = RAMB16_S9_S9.2;  
 CollectMSB:A.3 = RAMB16_S9_S9.3;  
 CollectMSB:A.4 = RAMB16_S9_S9.4;  
 CollectMSB:A.5 = RAMB16_S9_S9.5;  
 CollectMSB:A.6 = RAMB16_S9_S9.6;  
 CollectMSB:A.7 = RAMB16_S9_S9.7;  
 CollectMSB:A.8 = RAMB16_S9_S9.8;  
}

Object ( Variant DOA, Variant DOB) "Test RAMB16_S18_S18"( Bit Start
    , Bit ClkG, MSB010 PortAAddr, MSB010 PortBAddr, Bit "Write/Read") 
//_Attributes TreeGroup=CoreLib_Examples\Memory\Examples
{
 //_ Object Prototypes
 Object ( Bit Start) Input;  //_GUI 12,32
 Object ( Bit ClkG) Input:A;  //_GUI 44,42
 //_Attributes Resource=*Global
 Object ( MSB010 PortAAddr) Input:B;  //_GUI 39,62
 Object ( MSB010 PortBAddr) Input:C;  //_GUI 38,144
 Object ( Bit "Write/Read") Input:D;  //_GUI 38,147
 Object Output( Variant DOA) ;  //_GUI 195,34
 Object Output:A( Variant DOB) ;  //_GUI 195,88
 Object ( Variant O) Mux( Variant A, Variant B
    , Bit S) ;  //_GUI 98,58
 Object ( Variant O) Mux:A( Variant A, Variant B
    , Bit S) ;  //_GUI 97,140
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction
    ( Variant In0) ;  //_GUI 57,24
 Object ( Bit Pulse) OneShot( Bit I, Bit ClkG) ;  //_GUI 21,31
 Object ( MSB018 Iter) Input:E;  //_GUI 21,24
 //_Attributes Constant="*262143"
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:A
    ( Bit In0) ;  //_GUI 59,147
 Object ( Bit In) Input:F;  //_GUI 144,36
 //_Attributes Constant="*1"
 Object ( Bit In) Input:G;  //_GUI 144,39
 //_Attributes Constant="*0"
 Object ( Variant Iteration, Bit LastDone, Bit Done
    , Variant Busy) DoneForN_Up( Variant Iterations, Bit ClkG, Bit AClr
    , Variant Go, Bit Wait) ;  //_GUI 35,23
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:B
    ( Bit In0) ;  //_GUI 115,42
 Object ( Bit In) Input:H;  //_GUI 144,132
 //_Attributes Constant="*1"
 Object ( Bit In) Input:I;  //_GUI 144,135
 //_Attributes Constant="*0"
 Object ( Bit In) Input:J;  //_GUI 144,129
 //_Attributes Constant="*0"
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:C
    ( Variant In1) ;  //_GUI 108,76
 Object ( Bit DOPA1, Bit DOPA0, Bit DOA15
    , Bit DOA14, Bit DOA13, Bit DOA12, Bit DOA11
    , Bit DOA10, Bit DOA9, Bit DOA8, Bit DOA7
    , Bit DOA6, Bit DOA5, Bit DOA4, Bit DOA3
    , Bit DOA2, Bit DOA1, Bit DOA0, Bit DOPB1
    , Bit DOPB0, Bit DOB15, Bit DOB14, Bit DOB13
    , Bit DOB12, Bit DOB11, Bit DOB10, Bit DOB9
    , Bit DOB8, Bit DOB7, Bit DOB6, Bit DOB5
    , Bit DOB4, Bit DOB3, Bit DOB2, Bit DOB1
    , Bit DOB0) RAMB16_S18_S18( Bit WEA, Bit ENA, Bit SSRA
    , Bit CLKA, Bit ADDRA9, Bit ADDRA8, Bit ADDRA7
    , Bit ADDRA6, Bit ADDRA5, Bit ADDRA4, Bit ADDRA3
    , Bit ADDRA2, Bit ADDRA1, Bit ADDRA0, Bit DIPA1
    , Bit DIPA0, Bit DIA15, Bit DIA14, Bit DIA13
    , Bit DIA12, Bit DIA11, Bit DIA10, Bit DIA9
    , Bit DIA8, Bit DIA7, Bit DIA6, Bit DIA5
    , Bit DIA4, Bit DIA3, Bit DIA2, Bit "DIA1 "
    , Bit DIA0, Bit WEB, Bit ENB, Bit SSRB
    , Bit CLKB, Bit ADDRB9, Bit ADDRB8, Bit ADDRB7
    , Bit ADDRB6, Bit ADDRB5, Bit ADDRB4, Bit ADDRB3
    , Bit ADDRB2, Bit ADDRB1, Bit ADDRB0, Bit DIPB1
    , Bit DIPB0, Bit DIB15, Bit DIB14, Bit DIB13
    , Bit DIB12, Bit DIB11, Bit DIB10, Bit DIB9
    , Bit DIB8, Bit DIB7, Bit DIB6, Bit DIB5
    , Bit DIB4, Bit DIB3, Bit DIB2, Bit DIB1
    , Bit DIB0) ;  //_GUI 149,32
 //_Attributes Primitive,System=PEn,Resource=BlkRAM,LibRef=RAMB16_S18_S18
 Object ( Variant Out1, Variant Out2, Variant Out3
    , Variant Out4, Variant Out5, Variant Out6, Variant Out7
    , Variant Out8, Variant Out9, Variant Out10, Variant Out11
    , Variant Out12, Variant Out13, Variant Out14, Variant Out15
    , Variant Out16, Variant Out17, Variant Out18) ExposeMSB( Variant In1) ;  //_GUI 125,170
 Object ( Variant Out1, Variant Out2, Variant Out3
    , Variant Out4, Variant Out5, Variant Out6, Variant Out7
    , Variant Out8, Variant Out9, Variant Out10) ExposeMSB:A( Variant In1) ;  //_GUI 125,140
 Object ( Variant Out1, Variant Out2, Variant Out3
    , Variant Out4, Variant Out5, Variant Out6, Variant Out7
    , Variant Out8, Variant Out9, Variant Out10, Variant Out11
    , Variant Out12, Variant Out13, Variant Out14, Variant Out15
    , Variant Out16, Variant Out17, Variant Out18) ExposeMSB:B( Variant In1) ;  //_GUI 125,74
 Object ( Variant Out1, Variant Out2, Variant Out3
    , Variant Out4, Variant Out5, Variant Out6, Variant Out7
    , Variant Out8, Variant Out9, Variant Out10) ExposeMSB:C( Variant In1) ;  //_GUI 125,44
 Object ( Variant Out1) CollectMSB( Variant In1, Variant In2
    , Variant In3, Variant In4, Variant In5, Variant In6
    , Variant In7, Variant In8, Variant In9, Variant In10
    , Variant In11, Variant In12, Variant In13, Variant In14
    , Variant In15, Variant In16, Variant In17, Variant In18) ;  //_GUI 176,32
 Object ( Variant Out1) CollectMSB:A( Variant In1, Variant In2
    , Variant In3, Variant In4, Variant In5, Variant In6
    , Variant In7, Variant In8, Variant In9, Variant In10
    , Variant In11, Variant In12, Variant In13, Variant In14
    , Variant In15, Variant In16, Variant In17, Variant In18) ;  //_GUI 176,86
 Object ( Bit OFL, Variant Out1) Convert( Variant Type
    , Variant Data) ;  //_GUI 60,55
 Object ( MSB010 Out1, MSB010 Out2, MSB010 Out3) Junction:D
    ( MSB010 In0) ;  //_GUI 50,62
 Object ( Variant Out1) AND( Variant In1, Variant In2) ;  //_GUI 84,55
 Object ( Variant Out1) AND:A( Variant In1, Variant In2) ;  //_GUI 96,23
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:E
    ( Bit In0) ;  //_GUI 81,56
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:F
    ( Variant In1) ;  //_GUI 95,59
 Object ( Variant Out1) Zero( Variant In1) ;  //_GUI 112,170
 //_Attributes Documentation=Bit
 Object ( Bit Out) INVERT( Bit In1) ;  //_GUI 70,54

 // Behavior Topology
 Output.0 = CollectMSB.0;  
 Output:A.0 = CollectMSB:A.0;  
 Mux.0 = Junction:F.1;  
 Mux.1 = Junction:D.1;  
 Mux.2 = Junction:A.0;  //_GUI 60,66
 Mux:A.0 = Junction:F.2;  //_GUI 96,142
 Mux:A.1 = Input:C.0;  
 Mux:A.2 = Junction:A.1;  
 Junction.0 = DoneForN_Up.0;  
 OneShot.0 = Input.0;  
 Junction:A.0 = Input:D.0;  
 DoneForN_Up.0 = Input:E.0;  
 DoneForN_Up.3 = OneShot.0;  
 Junction:B.0 = Input:A.0;  
 Junction:C.0 = AND:A.0;  //_GUI 109,26
 RAMB16_S18_S18.0 = DoneForN_Up.2;  
 RAMB16_S18_S18.1 = Input:F.0;  
 RAMB16_S18_S18.2 = Input:G.0;  
 RAMB16_S18_S18.3 = Junction:B.1;  
 RAMB16_S18_S18.4 = ExposeMSB:C.0;  
 RAMB16_S18_S18.5 = ExposeMSB:C.1;  
 RAMB16_S18_S18.6 = ExposeMSB:C.2;  
 RAMB16_S18_S18.7 = ExposeMSB:C.3;  
 RAMB16_S18_S18.8 = ExposeMSB:C.4;  
 RAMB16_S18_S18.9 = ExposeMSB:C.5;  
 RAMB16_S18_S18.10 = ExposeMSB:C.6;  
 RAMB16_S18_S18.11 = ExposeMSB:C.7;  
 RAMB16_S18_S18.12 = ExposeMSB:C.8;  
 RAMB16_S18_S18.13 = ExposeMSB:C.9;  
 RAMB16_S18_S18.14 = ExposeMSB:B.0;  
 RAMB16_S18_S18.15 = ExposeMSB:B.1;  
 RAMB16_S18_S18.16 = ExposeMSB:B.2;  
 RAMB16_S18_S18.17 = ExposeMSB:B.3;  
 RAMB16_S18_S18.18 = ExposeMSB:B.4;  
 RAMB16_S18_S18.19 = ExposeMSB:B.5;  
 RAMB16_S18_S18.20 = ExposeMSB:B.6;  
 RAMB16_S18_S18.21 = ExposeMSB:B.7;  
 RAMB16_S18_S18.22 = ExposeMSB:B.8;  
 RAMB16_S18_S18.23 = ExposeMSB:B.9;  
 RAMB16_S18_S18.24 = ExposeMSB:B.10;  
 RAMB16_S18_S18.25 = ExposeMSB:B.11;  
 RAMB16_S18_S18.26 = ExposeMSB:B.12;  
 RAMB16_S18_S18.27 = ExposeMSB:B.13;  
 RAMB16_S18_S18.28 = ExposeMSB:B.14;  
 RAMB16_S18_S18.29 = ExposeMSB:B.15;  
 RAMB16_S18_S18.30 = ExposeMSB:B.16;  
 RAMB16_S18_S18.31 = ExposeMSB:B.17;  
 RAMB16_S18_S18.32 = Input:J.0;  
 RAMB16_S18_S18.33 = Input:H.0;  
 RAMB16_S18_S18.34 = Input:I.0;  
 RAMB16_S18_S18.35 = Junction:B.2;  //_GUI 116,139
 RAMB16_S18_S18.36 = ExposeMSB:A.0;  
 RAMB16_S18_S18.37 = ExposeMSB:A.1;  
 RAMB16_S18_S18.38 = ExposeMSB:A.2;  
 RAMB16_S18_S18.39 = ExposeMSB:A.3;  
 RAMB16_S18_S18.40 = ExposeMSB:A.4;  
 RAMB16_S18_S18.41 = ExposeMSB:A.5;  
 RAMB16_S18_S18.42 = ExposeMSB:A.6;  
 RAMB16_S18_S18.43 = ExposeMSB:A.7;  
 RAMB16_S18_S18.44 = ExposeMSB:A.8;  
 RAMB16_S18_S18.45 = ExposeMSB:A.9;  
 RAMB16_S18_S18.46 = ExposeMSB.0;  
 RAMB16_S18_S18.47 = ExposeMSB.1;  
 RAMB16_S18_S18.48 = ExposeMSB.2;  
 RAMB16_S18_S18.49 = ExposeMSB.3;  
 RAMB16_S18_S18.50 = ExposeMSB.4;  
 RAMB16_S18_S18.51 = ExposeMSB.5;  
 RAMB16_S18_S18.52 = ExposeMSB.6;  
 RAMB16_S18_S18.53 = ExposeMSB.7;  
 RAMB16_S18_S18.54 = ExposeMSB.8;  
 RAMB16_S18_S18.55 = ExposeMSB.9;  
 RAMB16_S18_S18.56 = ExposeMSB.10;  
 RAMB16_S18_S18.57 = ExposeMSB.11;  
 RAMB16_S18_S18.58 = ExposeMSB.12;  
 RAMB16_S18_S18.59 = ExposeMSB.13;  
 RAMB16_S18_S18.60 = ExposeMSB.14;  
 RAMB16_S18_S18.61 = ExposeMSB.15;  
 RAMB16_S18_S18.62 = ExposeMSB.16;  
 RAMB16_S18_S18.63 = ExposeMSB.17;  
 ExposeMSB.0 = Zero.0;  
 ExposeMSB:A.0 = Mux:A.0;  
 ExposeMSB:B.0 = Junction:C.1;  
 ExposeMSB:C.0 = Mux.0;  //_GUI 112,47, 112,61
 CollectMSB.0 = RAMB16_S18_S18.0;  
 CollectMSB.1 = RAMB16_S18_S18.1;  
 CollectMSB.2 = RAMB16_S18_S18.2;  
 CollectMSB.3 = RAMB16_S18_S18.3;  
 CollectMSB.4 = RAMB16_S18_S18.4;  
 CollectMSB.5 = RAMB16_S18_S18.5;  
 CollectMSB.6 = RAMB16_S18_S18.6;  
 CollectMSB.7 = RAMB16_S18_S18.7;  
 CollectMSB.8 = RAMB16_S18_S18.8;  
 CollectMSB.9 = RAMB16_S18_S18.9;  
 CollectMSB.10 = RAMB16_S18_S18.10;  
 CollectMSB.11 = RAMB16_S18_S18.11;  
 CollectMSB.12 = RAMB16_S18_S18.12;  
 CollectMSB.13 = RAMB16_S18_S18.13;  
 CollectMSB.14 = RAMB16_S18_S18.14;  
 CollectMSB.15 = RAMB16_S18_S18.15;  
 CollectMSB.16 = RAMB16_S18_S18.16;  
 CollectMSB.17 = RAMB16_S18_S18.17;  
 CollectMSB:A.0 = RAMB16_S18_S18.18;  
 CollectMSB:A.1 = RAMB16_S18_S18.19;  
 CollectMSB:A.2 = RAMB16_S18_S18.20;  
 CollectMSB:A.3 = RAMB16_S18_S18.21;  
 CollectMSB:A.4 = RAMB16_S18_S18.22;  
 CollectMSB:A.5 = RAMB16_S18_S18.23;  
 CollectMSB:A.6 = RAMB16_S18_S18.24;  
 CollectMSB:A.7 = RAMB16_S18_S18.25;  
 CollectMSB:A.8 = RAMB16_S18_S18.26;  
 CollectMSB:A.9 = RAMB16_S18_S18.27;  
 CollectMSB:A.10 = RAMB16_S18_S18.28;  
 CollectMSB:A.11 = RAMB16_S18_S18.29;  
 CollectMSB:A.12 = RAMB16_S18_S18.30;  
 CollectMSB:A.13 = RAMB16_S18_S18.31;  
 CollectMSB:A.14 = RAMB16_S18_S18.32;  
 CollectMSB:A.15 = RAMB16_S18_S18.33;  
 CollectMSB:A.16 = RAMB16_S18_S18.34;  
 CollectMSB:A.17 = RAMB16_S18_S18.35;  
 Convert.0 = Junction:D.0;  //_GUI 51,57
 Convert.1 = Junction.2;  //_GUI 58,60
 Junction:D.0 = Input:B.0;  
 AND.0 = Junction:E.1;  
 AND.1 = Convert.1;  
 AND:A.0 = Junction.1;  
 AND:A.1 = Junction:E.0;  //_GUI 82,28
 Junction:E.0 = INVERT.0;  
 Junction:F.0 = AND.0;  //_GUI 96,58
 Zero.0 = Junction:C.2;  //_GUI 109,173
 INVERT.0 = Convert.0;  
}

Object ( Variant DOA, Variant DOB) "Test RAMB16_S36_S36"( Bit WEA
    , Bit ClkG, MSB009 AddrA, MSB036 DIA, MSB009 AddrB
    , MSB036 DIB) 
//_Attributes TreeGroup=CoreLib_Examples\Memory\Examples
{
 //_ Object Prototypes
 Object ( Bit WEA) Input;  //_GUI 20,24
 Object ( Bit ClkG) Input:A;  //_GUI 20,34
 //_Attributes Resource=*Global
 Object ( MSB009 AddrA) Input:B;  //_GUI 40,38
 Object ( MSB036 DIA) Input:C;  //_GUI 40,65
 Object ( MSB009 AddrB) Input:D;  //_GUI 23,185
 Object ( MSB036 DIB) Input:E;  //_GUI 23,212
 Object Output( Variant DOA) ;  //_GUI 112,26
 Object Output:A( Variant DOB) ;  //_GUI 111,134
 Object ( Bit In) Input:F;  //_GUI 61,178
 //_Attributes Constant="*0"
 Object ( Bit In) Input:G;  //_GUI 61,172
 //_Attributes Constant="*0"
 Object ( Variant Out1) Zero( Variant In1) ;  //_GUI 38,210
 //_Attributes Documentation=Bit
 Object ( Bit DOPA3, Bit DOPA2, Bit DOPA1
    , Bit DOPA0, Bit DOA31, Bit DOA30, Bit DOA29
    , Bit DOA28, Bit DOA27, Bit DOA26, Bit DOA25
    , Bit DOA24, Bit DOA23, Bit DOA22, Bit DOA21
    , Bit DOA20, Bit DOA19, Bit DOA18, Bit DOA17
    , Bit DOA16, Bit DOA15, Bit DOA14, Bit DOA13
    , Bit DOA12, Bit DOA11, Bit DOA10, Bit DOA9
    , Bit DOA8, Bit DOA7, Bit DOA6, Bit DOA5
    , Bit DOA4, Bit DOA3, Bit DOA2, Bit DOA1
    , Bit DOA0, Bit DOPB3, Bit DOPB2, Bit DOPB1
    , Bit DOPB0, Bit DOB31, Bit DOB30, Bit DOB29
    , Bit DOB28, Bit DOB27, Bit DOB26, Bit DOB25
    , Bit DOB24, Bit DOB23, Bit DOB22, Bit DOB21
    , Bit DOB20, Bit DOB19, Bit DOB18, Bit DOB17
    , Bit DOB16, Bit DOB15, Bit DOB14, Bit DOB13
    , Bit DOB12, Bit DOB11, Bit DOB10, Bit DOB9
    , Bit DOB8, Bit DOB7, Bit DOB6, Bit DOB5
    , Bit DOB4, Bit DOB3, Bit DOB2, Bit DOB1
    , Bit DOB0) RAMB16_S36_S36( Bit WEA, Bit ENA, Bit SSRA
    , Bit CLKA, Bit ADDRA8, Bit ADDRA7, Bit ADDRA6
    , Bit ADDRA5, Bit ADDRA4, Bit ADDRA3, Bit ADDRA2
    , Bit ADDRA1, Bit ADDRA0, Bit DIPA3, Bit DIPA2
    , Bit DIPA1, Bit DIPA0, Bit DIA31, Bit DIA30
    , Bit DIA29, Bit DIA28, Bit DIA27, Bit DIA26
    , Bit DIA25, Bit DIA24, Bit DIA23, Bit DIA22
    , Bit DIA21, Bit DIA20, Bit DIA19, Bit DIA18
    , Bit DIA17, Bit DIA16, Bit DIA15, Bit DIA14
    , Bit DIA13, Bit DIA12, Bit DIA11, Bit DIA10
    , Bit DIA9, Bit DIA8, Bit DIA7, Bit DIA6
    , Bit DIA5, Bit DIA4, Bit DIA3, Bit DIA2
    , Bit "DIA1 ", Bit DIA0, Bit WEB, Bit ENB
    , Bit SSRB, Bit CLKB, Bit ADDRB8, Bit ADDRB7
    , Bit ADDRB6, Bit ADDRB5, Bit ADDRB4, Bit ADDRB3
    , Bit ADDRB2, Bit ADDRB1, Bit ADDRB0, Bit DIPB3
    , Bit DIPB2, Bit DIPB1, Bit DIPB0, Bit DIB31
    , Bit DIB30, Bit DIB29, Bit DIB28, Bit DIB27
    , Bit DIB26, Bit DIB25, Bit DIB24, Bit DIB23
    , Bit DIB22, Bit DIB21, Bit DIB20, Bit DIB19
    , Bit DIB18, Bit DIB17, Bit DIB16, Bit DIB15
    , Bit DIB14, Bit DIB13, Bit DIB12, Bit DIB11
    , Bit DIB10, Bit DIB9, Bit DIB8, Bit DIB7
    , Bit DIB6, Bit DIB5, Bit DIB4, Bit DIB3
    , Bit DIB2, Bit DIB1, Bit DIB0) ;  //_GUI 67,24
 //_Attributes Primitive,System=PEn,Resource=BlkRAM,LibRef=RAMB16_S36_S36
 Object ( Variant Out1, Variant Out2, Variant Out3
    , Variant Out4, Variant Out5, Variant Out6, Variant Out7
    , Variant Out8, Variant Out9, Variant Out10, Variant Out11
    , Variant Out12, Variant Out13, Variant Out14, Variant Out15
    , Variant Out16, Variant Out17, Variant Out18, Variant Out19
    , Variant Out20, Variant Out21, Variant Out22, Variant Out23
    , Variant Out24, Variant Out25, Variant Out26, Variant Out27
    , Variant Out28, Variant Out29, Variant Out30, Variant Out31
    , Variant Out32, Variant Out33, Variant Out34, Variant Out35
    , Variant Out36) ExposeMSB( Variant In1) ;  //_GUI 51,210
 Object ( Variant Out1, Variant Out2, Variant Out3
    , Variant Out4, Variant Out5, Variant Out6, Variant Out7
    , Variant Out8, Variant Out9) ExposeMSB:A( Variant In1) ;  //_GUI 51,183
 Object ( Variant Out1, Variant Out2, Variant Out3
    , Variant Out4, Variant Out5, Variant Out6, Variant Out7
    , Variant Out8, Variant Out9, Variant Out10, Variant Out11
    , Variant Out12, Variant Out13, Variant Out14, Variant Out15
    , Variant Out16, Variant Out17, Variant Out18, Variant Out19
    , Variant Out20, Variant Out21, Variant Out22, Variant Out23
    , Variant Out24, Variant Out25, Variant Out26, Variant Out27
    , Variant Out28, Variant Out29, Variant Out30, Variant Out31
    , Variant Out32, Variant Out33, Variant Out34, Variant Out35
    , Variant Out36) ExposeMSB:B( Variant In1) ;  //_GUI 50,63
 Object ( Variant Out1, Variant Out2, Variant Out3
    , Variant Out4, Variant Out5, Variant Out6, Variant Out7
    , Variant Out8, Variant Out9) ExposeMSB:C( Variant In1) ;  //_GUI 50,36
 Object ( Variant Out1) CollectMSB( Variant In1, Variant In2
    , Variant In3, Variant In4, Variant In5, Variant In6
    , Variant In7, Variant In8, Variant In9, Variant In10
    , Variant In11, Variant In12, Variant In13, Variant In14
    , Variant In15, Variant In16, Variant In17, Variant In18
    , Variant In19, Variant In20, Variant In21, Variant In22
    , Variant In23, Variant In24, Variant In25, Variant In26
    , Variant In27, Variant In28, Variant In29, Variant In30
    , Variant In31, Variant In32, Variant In33, Variant In34
    , Variant In35, Variant In36) ;  //_GUI 92,24
 Object ( Variant Out1) CollectMSB:A( Variant In1, Variant In2
    , Variant In3, Variant In4, Variant In5, Variant In6
    , Variant In7, Variant In8, Variant In9, Variant In10
    , Variant In11, Variant In12, Variant In13, Variant In14
    , Variant In15, Variant In16, Variant In17, Variant In18
    , Variant In19, Variant In20, Variant In21, Variant In22
    , Variant In23, Variant In24, Variant In25, Variant In26
    , Variant In27, Variant In28, Variant In29, Variant In30
    , Variant In31, Variant In32, Variant In33, Variant In34
    , Variant In35, Variant In36) ;  //_GUI 92,132
 Object ( Bit In) Input:H;  //_GUI 61,175
 //_Attributes Constant="*1"
 Object ( Variant Pulse) OneShot( Variant I, Bit ClkG) ;  //_GUI 31,23
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction
    ( Bit In0) ;  //_GUI 28,34
 Object ( Bit In) Input:I;  //_GUI 61,28
 //_Attributes Constant="*1"
 Object ( Bit In) Input:J;  //_GUI 61,31
 //_Attributes Constant="*0"

 // Behavior Topology
 Output.0 = CollectMSB.0;  
 Output:A.0 = CollectMSB:A.0;  
 Zero.0 = Input:E.0;  
 RAMB16_S36_S36.0 = OneShot.0;  
 RAMB16_S36_S36.1 = Input:I.0;  
 RAMB16_S36_S36.2 = Input:J.0;  
 RAMB16_S36_S36.3 = Junction.1;  
 RAMB16_S36_S36.4 = ExposeMSB:C.0;  
 RAMB16_S36_S36.5 = ExposeMSB:C.1;  
 RAMB16_S36_S36.6 = ExposeMSB:C.2;  
 RAMB16_S36_S36.7 = ExposeMSB:C.3;  
 RAMB16_S36_S36.8 = ExposeMSB:C.4;  
 RAMB16_S36_S36.9 = ExposeMSB:C.5;  
 RAMB16_S36_S36.10 = ExposeMSB:C.6;  
 RAMB16_S36_S36.11 = ExposeMSB:C.7;  
 RAMB16_S36_S36.12 = ExposeMSB:C.8;  
 RAMB16_S36_S36.13 = ExposeMSB:B.0;  
 RAMB16_S36_S36.14 = ExposeMSB:B.1;  
 RAMB16_S36_S36.15 = ExposeMSB:B.2;  
 RAMB16_S36_S36.16 = ExposeMSB:B.3;  
 RAMB16_S36_S36.17 = ExposeMSB:B.4;  
 RAMB16_S36_S36.18 = ExposeMSB:B.5;  
 RAMB16_S36_S36.19 = ExposeMSB:B.6;  
 RAMB16_S36_S36.20 = ExposeMSB:B.7;  
 RAMB16_S36_S36.21 = ExposeMSB:B.8;  
 RAMB16_S36_S36.22 = ExposeMSB:B.9;  
 RAMB16_S36_S36.23 = ExposeMSB:B.10;  
 RAMB16_S36_S36.24 = ExposeMSB:B.11;  
 RAMB16_S36_S36.25 = ExposeMSB:B.12;  
 RAMB16_S36_S36.26 = ExposeMSB:B.13;  
 RAMB16_S36_S36.27 = ExposeMSB:B.14;  
 RAMB16_S36_S36.28 = ExposeMSB:B.15;  
 RAMB16_S36_S36.29 = ExposeMSB:B.16;  
 RAMB16_S36_S36.30 = ExposeMSB:B.17;  
 RAMB16_S36_S36.31 = ExposeMSB:B.18;  
 RAMB16_S36_S36.32 = ExposeMSB:B.19;  
 RAMB16_S36_S36.33 = ExposeMSB:B.20;  
 RAMB16_S36_S36.34 = ExposeMSB:B.21;  
 RAMB16_S36_S36.35 = ExposeMSB:B.22;  
 RAMB16_S36_S36.36 = ExposeMSB:B.23;  
 RAMB16_S36_S36.37 = ExposeMSB:B.24;  
 RAMB16_S36_S36.38 = ExposeMSB:B.25;  
 RAMB16_S36_S36.39 = ExposeMSB:B.26;  
 RAMB16_S36_S36.40 = ExposeMSB:B.27;  
 RAMB16_S36_S36.41 = ExposeMSB:B.28;  
 RAMB16_S36_S36.42 = ExposeMSB:B.29;  
 RAMB16_S36_S36.43 = ExposeMSB:B.30;  
 RAMB16_S36_S36.44 = ExposeMSB:B.31;  
 RAMB16_S36_S36.45 = ExposeMSB:B.32;  
 RAMB16_S36_S36.46 = ExposeMSB:B.33;  
 RAMB16_S36_S36.47 = ExposeMSB:B.34;  
 RAMB16_S36_S36.48 = ExposeMSB:B.35;  
 RAMB16_S36_S36.49 = Input:G.0;  
 RAMB16_S36_S36.50 = Input:H.0;  
 RAMB16_S36_S36.51 = Input:F.0;  
 RAMB16_S36_S36.52 = Junction.2;  //_GUI 29,182
 RAMB16_S36_S36.53 = ExposeMSB:A.0;  
 RAMB16_S36_S36.54 = ExposeMSB:A.1;  
 RAMB16_S36_S36.55 = ExposeMSB:A.2;  
 RAMB16_S36_S36.56 = ExposeMSB:A.3;  
 RAMB16_S36_S36.57 = ExposeMSB:A.4;  
 RAMB16_S36_S36.58 = ExposeMSB:A.5;  
 RAMB16_S36_S36.59 = ExposeMSB:A.6;  
 RAMB16_S36_S36.60 = ExposeMSB:A.7;  
 RAMB16_S36_S36.61 = ExposeMSB:A.8;  
 RAMB16_S36_S36.62 = ExposeMSB.0;  
 RAMB16_S36_S36.63 = ExposeMSB.1;  
 RAMB16_S36_S36.64 = ExposeMSB.2;  
 RAMB16_S36_S36.65 = ExposeMSB.3;  
 RAMB16_S36_S36.66 = ExposeMSB.4;  
 RAMB16_S36_S36.67 = ExposeMSB.5;  
 RAMB16_S36_S36.68 = ExposeMSB.6;  
 RAMB16_S36_S36.69 = ExposeMSB.7;  
 RAMB16_S36_S36.70 = ExposeMSB.8;  
 RAMB16_S36_S36.71 = ExposeMSB.9;  
 RAMB16_S36_S36.72 = ExposeMSB.10;  
 RAMB16_S36_S36.73 = ExposeMSB.11;  
 RAMB16_S36_S36.74 = ExposeMSB.12;  
 RAMB16_S36_S36.75 = ExposeMSB.13;  
 RAMB16_S36_S36.76 = ExposeMSB.14;  
 RAMB16_S36_S36.77 = ExposeMSB.15;  
 RAMB16_S36_S36.78 = ExposeMSB.16;  
 RAMB16_S36_S36.79 = ExposeMSB.17;  
 RAMB16_S36_S36.80 = ExposeMSB.18;  
 RAMB16_S36_S36.81 = ExposeMSB.19;  
 RAMB16_S36_S36.82 = ExposeMSB.20;  
 RAMB16_S36_S36.83 = ExposeMSB.21;  
 RAMB16_S36_S36.84 = ExposeMSB.22;  
 RAMB16_S36_S36.85 = ExposeMSB.23;  
 RAMB16_S36_S36.86 = ExposeMSB.24;  
 RAMB16_S36_S36.87 = ExposeMSB.25;  
 RAMB16_S36_S36.88 = ExposeMSB.26;  
 RAMB16_S36_S36.89 = ExposeMSB.27;  
 RAMB16_S36_S36.90 = ExposeMSB.28;  
 RAMB16_S36_S36.91 = ExposeMSB.29;  
 RAMB16_S36_S36.92 = ExposeMSB.30;  
 RAMB16_S36_S36.93 = ExposeMSB.31;  
 RAMB16_S36_S36.94 = ExposeMSB.32;  
 RAMB16_S36_S36.95 = ExposeMSB.33;  
 RAMB16_S36_S36.96 = ExposeMSB.34;  
 RAMB16_S36_S36.97 = ExposeMSB.35;  
 ExposeMSB.0 = Zero.0;  
 ExposeMSB:A.0 = Input:D.0;  
 ExposeMSB:B.0 = Input:C.0;  
 ExposeMSB:C.0 = Input:B.0;  
 CollectMSB.0 = RAMB16_S36_S36.0;  
 CollectMSB.1 = RAMB16_S36_S36.1;  
 CollectMSB.2 = RAMB16_S36_S36.2;  
 CollectMSB.3 = RAMB16_S36_S36.3;  
 CollectMSB.4 = RAMB16_S36_S36.4;  
 CollectMSB.5 = RAMB16_S36_S36.5;  
 CollectMSB.6 = RAMB16_S36_S36.6;  
 CollectMSB.7 = RAMB16_S36_S36.7;  
 CollectMSB.8 = RAMB16_S36_S36.8;  
 CollectMSB.9 = RAMB16_S36_S36.9;  
 CollectMSB.10 = RAMB16_S36_S36.10;  
 CollectMSB.11 = RAMB16_S36_S36.11;  
 CollectMSB.12 = RAMB16_S36_S36.12;  
 CollectMSB.13 = RAMB16_S36_S36.13;  
 CollectMSB.14 = RAMB16_S36_S36.14;  
 CollectMSB.15 = RAMB16_S36_S36.15;  
 CollectMSB.16 = RAMB16_S36_S36.16;  
 CollectMSB.17 = RAMB16_S36_S36.17;  
 CollectMSB.18 = RAMB16_S36_S36.18;  
 CollectMSB.19 = RAMB16_S36_S36.19;  
 CollectMSB.20 = RAMB16_S36_S36.20;  
 CollectMSB.21 = RAMB16_S36_S36.21;  
 CollectMSB.22 = RAMB16_S36_S36.22;  
 CollectMSB.23 = RAMB16_S36_S36.23;  
 CollectMSB.24 = RAMB16_S36_S36.24;  
 CollectMSB.25 = RAMB16_S36_S36.25;  
 CollectMSB.26 = RAMB16_S36_S36.26;  
 CollectMSB.27 = RAMB16_S36_S36.27;  
 CollectMSB.28 = RAMB16_S36_S36.28;  
 CollectMSB.29 = RAMB16_S36_S36.29;  
 CollectMSB.30 = RAMB16_S36_S36.30;  
 CollectMSB.31 = RAMB16_S36_S36.31;  
 CollectMSB.32 = RAMB16_S36_S36.32;  
 CollectMSB.33 = RAMB16_S36_S36.33;  
 CollectMSB.34 = RAMB16_S36_S36.34;  
 CollectMSB.35 = RAMB16_S36_S36.35;  
 CollectMSB:A.0 = RAMB16_S36_S36.36;  
 CollectMSB:A.1 = RAMB16_S36_S36.37;  
 CollectMSB:A.2 = RAMB16_S36_S36.38;  
 CollectMSB:A.3 = RAMB16_S36_S36.39;  
 CollectMSB:A.4 = RAMB16_S36_S36.40;  
 CollectMSB:A.5 = RAMB16_S36_S36.41;  
 CollectMSB:A.6 = RAMB16_S36_S36.42;  
 CollectMSB:A.7 = RAMB16_S36_S36.43;  
 CollectMSB:A.8 = RAMB16_S36_S36.44;  
 CollectMSB:A.9 = RAMB16_S36_S36.45;  
 CollectMSB:A.10 = RAMB16_S36_S36.46;  
 CollectMSB:A.11 = RAMB16_S36_S36.47;  
 CollectMSB:A.12 = RAMB16_S36_S36.48;  
 CollectMSB:A.13 = RAMB16_S36_S36.49;  
 CollectMSB:A.14 = RAMB16_S36_S36.50;  
 CollectMSB:A.15 = RAMB16_S36_S36.51;  
 CollectMSB:A.16 = RAMB16_S36_S36.52;  
 CollectMSB:A.17 = RAMB16_S36_S36.53;  
 CollectMSB:A.18 = RAMB16_S36_S36.54;  
 CollectMSB:A.19 = RAMB16_S36_S36.55;  
 CollectMSB:A.20 = RAMB16_S36_S36.56;  
 CollectMSB:A.21 = RAMB16_S36_S36.57;  
 CollectMSB:A.22 = RAMB16_S36_S36.58;  
 CollectMSB:A.23 = RAMB16_S36_S36.59;  
 CollectMSB:A.24 = RAMB16_S36_S36.60;  
 CollectMSB:A.25 = RAMB16_S36_S36.61;  
 CollectMSB:A.26 = RAMB16_S36_S36.62;  
 CollectMSB:A.27 = RAMB16_S36_S36.63;  
 CollectMSB:A.28 = RAMB16_S36_S36.64;  
 CollectMSB:A.29 = RAMB16_S36_S36.65;  
 CollectMSB:A.30 = RAMB16_S36_S36.66;  
 CollectMSB:A.31 = RAMB16_S36_S36.67;  
 CollectMSB:A.32 = RAMB16_S36_S36.68;  
 CollectMSB:A.33 = RAMB16_S36_S36.69;  
 CollectMSB:A.34 = RAMB16_S36_S36.70;  
 CollectMSB:A.35 = RAMB16_S36_S36.71;  
 OneShot.0 = Input.0;  
 Junction.0 = Input:A.0;  
}

Object ( Variant Hi, Variant Lo) "Test Lo_N"( MSB006 Data) 
//_Attributes TreeGroup=CoreLib_Examples\Memory\Examples
{
 //_ Object Prototypes
 Object ( MSB006 Data) Input;  //_GUI 65,32
 Object Output( Variant Hi) ;  //_GUI 96,32
 Object Output:A( Variant Lo) ;  //_GUI 96,35
 Object ( Variant Hi, Variant Lo) Lo_N( Variant Data
    , Variant Lo_N) ;  //_GUI 77,31
 Object ( MSB008 In) Input:A;  //_GUI 65,35
 //_Attributes Constant="*0"

 // Behavior Topology
 Output.0 = Lo_N.0;  
 Output:A.0 = Lo_N.1;  
 Lo_N.0 = Input.0;  
 Lo_N.1 = Input:A.0;  
}

Object ( Variant AOut) "Test RAMSP"( MSB011 Data, MSB014 Addr
    , Bit WE) 
//_Attributes TreeGroup=CoreLib_Examples\Memory\Examples
{
 //_ Object Prototypes
 Object ( MSB011 Data) Input;  //_GUI 78,56
 Object ( MSB014 Addr) Input:A;  //_GUI 93,59
 Object ( Bit WE) Input:B;  //_GUI 77,64
 Object Output( Variant AOut) ;  //_GUI 118,57
 Object ( Variant Pulse) OneShot( Variant I, Bit ClkG) ;  //_GUI 85,63
 Object ( Variant Data) RAMSP( Variant Data, Variant Addr
    , Bit ClkG, Bit WE) ;  //_GUI 100,55

 // Behavior Topology
 Output.0 = RAMSP.0;  
 OneShot.0 = Input:B.0;  
 RAMSP.0 = Input.0;  
 RAMSP.1 = Input:A.0;  
 RAMSP.3 = OneShot.0;  
}

Object ( Variant AOut, Variant BOut) "Test RAMDP"( MSB011 SWhole
    , MSB008 Fract, Fix32 Data, MSB010 AddrA, MSB010 AddrB
    , Bit WE) 
//_Attributes TreeGroup=CoreLib_Examples\Memory\Examples
{
 //_ Object Prototypes
 Object ( MSB011 SWhole) Input;  //_GUI 35,27
 Object ( MSB008 Fract) Input:A;  //_GUI 35,30
 Object ( Fix32 Data) Input:B;  //_GUI 15,39
 Object ( MSB010 AddrA) Input:C;  //_GUI 63,45
 Object ( MSB010 AddrB) Input:D;  //_GUI 63,48
 Object ( Bit WE) Input:E;  //_GUI 56,56
 Object Output( Variant AOut) ;  //_GUI 125,42
 Object Output:A( Variant BOut) ;  //_GUI 125,45
 Object ( Variant Pulse) OneShot( Variant I, Bit ClkG) ;  //_GUI 64,55
 Object ( Fixed Out1) CollectFixed( Variant SWhole, Variant Fract) ;  //_GUI 43,26
 Object ( Variant Out1) DynamicOut( Variant In1) ;  //_GUI 33,37
 Object ( Bit OFL, Variant Out1) Convert( Variant Type
    , Variant Data) ;  //_GUI 60,35
 Object ( Variant OutA, Variant OutB) RAMDP( Variant InA
    , Variant AddrA, Variant AddrB, Bit ClkG, Bit ClkG1
    , Bit WE) ;  //_GUI 79,41
 Object ( Bit OFL, Variant Out1) StaticOut( Variant Type
    , Variant Data) ;  //_GUI 107,38
 Object ( Bit OFL, Variant Out1) StaticOut:A( Variant Type
    , Variant Data) ;  //_GUI 107,47
 Object ( Fix32 Out1, Fix32 Out2, Fix32 Out3) Junction
    ( Fix32 In0) ;  //_GUI 24,39
 Object ( Fix32 Out1, Fix32 Out2, Fix32 Out3) Junction:A
    ( Fix32 In1) ;  //_GUI 102,39

 // Behavior Topology
 Output.0 = StaticOut.1;  
 Output:A.0 = StaticOut:A.1;  //_GUI 121,46, 121,52
 OneShot.0 = Input:E.0;  
 CollectFixed.0 = Input.0;  
 CollectFixed.1 = Input:A.0;  
 DynamicOut.0 = Junction.1;  
 Convert.0 = CollectFixed.0;  //_GUI 58,37, 58,29
 Convert.1 = DynamicOut.0;  
 RAMDP.0 = Convert.1;  //_GUI 77,43, 77,40
 RAMDP.1 = Input:C.0;  
 RAMDP.2 = Input:D.0;  
 RAMDP.5 = OneShot.0;  
 StaticOut.0 = Junction:A.1;  
 StaticOut.1 = RAMDP.0;  
 StaticOut:A.0 = Junction:A.2;  //_GUI 103,49
 StaticOut:A.1 = RAMDP.1;  //_GUI 99,52, 99,46
 Junction.0 = Input:B.0;  
 Junction:A.0 = Junction.0;  //_GUI 103,22, 25,22
}

Object ( Variant Count, Variant ABsy1, Variant Q2ReadData
    , Variant Q2DoneCount, Bit FIFOBusy, Bit QueueBusy, Variant DoneForNDn_Count
    , Variant Busy1, Variant FIFO1Done_Count, Variant ABsy2, Variant FixedOut
    , Variant Test2DoneCount, Bit Busy2) "Test Queue Big"( MSB007 BusyBits, MSB004 In4
    , Bit ClkG, Bit AlmostBusySize, Bit StartTest1, Bit Reset
    , Bit NextQueue2Data, MSB012 SWhole, MSB016 Fract, Fix32 WriteData
    , MSB004 In14, MSB003 BusyBits, Bit ClkG, Bit Reset2
    , Bit GoTest2, Bit ClkG, Bit NextDataTest2) 
//_Attributes TreeGroup=CoreLib_Examples\Memory\Examples
{
 //_ Object Prototypes
 Object ( MSB007 BusyBits) Input;  //_GUI 103,48
 Object ( MSB004 In4) Input:A;  //_GUI 155,48
 Object ( Bit ClkG) Input:B;  //_GUI 103,51
 //_Attributes Resource=*Global
 Object ( Bit AlmostBusySize) Input:C;  //_GUI 156,51
 Object ( Bit StartTest1) Input:D;  //_GUI 27,53
 Object ( Bit Reset) Input:E;  //_GUI 103,54
 Object ( Bit NextQueue2Data) Input:F;  //_GUI 172,70
 Object ( MSB012 SWhole) Input:G;  //_GUI 72,109
 Object ( MSB016 Fract) Input:H;  //_GUI 72,112
 Object ( Fix32 WriteData) Input:I;  //_GUI 52,119
 Object ( MSB004 In14) Input:J;  //_GUI 122,120
 Object ( MSB003 BusyBits) Input:K;  //_GUI 122,123
 Object ( Bit ClkG) Input:L;  //_GUI 124,126
 //_Attributes Resource=*Global
 Object ( Bit Reset2) Input:M;  //_GUI 105,129
 Object ( Bit GoTest2) Input:N;  //_GUI 76,131
 Object ( Bit ClkG) Input:O;  //_GUI 176,132
 //_Attributes Resource=*Global
 Object ( Bit NextDataTest2) Input:P;  //_GUI 113,147
 Object Output( Variant Count) ;  //_GUI 208,32
 Object Output:A( Variant ABsy1) ;  //_GUI 141,44
 Object Output:B( Variant Q2ReadData) ;  //_GUI 218,46
 Object Output:C( Variant Q2DoneCount) ;  //_GUI 261,51
 Object Output:D( Bit FIFOBusy) ;  //_GUI 85,62
 Object Output:E( Bit QueueBusy) ;  //_GUI 166,63
 Object Output:F( Variant DoneForNDn_Count) ;  //_GUI 105,72
 Object Output:G( Variant Busy1) ;  //_GUI 55,77
 Object Output:H( Variant FIFO1Done_Count) ;  //_GUI 180,81
 Object Output:I( Variant ABsy2) ;  //_GUI 155,111
 Object Output:J( Variant FixedOut) ;  //_GUI 183,121
 Object Output:K( Variant Test2DoneCount) ;  //_GUI 196,132
 Object Output:L( Bit Busy2) ;  //_GUI 118,140
 Object ( MSB016 CBy) Input:Q;  //_GUI 160,78
 //_Attributes Constant="*1"
 Object ( Variant CO, Variant Count) Count( Variant CBy
    , Bit ClkG, Variant EN, Bit CLR) ;  //_GUI 166,77
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction
    ( Variant In0) ;  //_GUI 136,54
 Object ( MSB016 CBy) Input:R;  //_GUI 241,48
 //_Attributes Constant="*1"
 Object ( Variant CO, Variant Count) Count:A( Variant CBy
    , Bit ClkG, Variant EN, Bit CLR) ;  //_GUI 247,47
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:A
    ( Variant In0) ;  //_GUI 188,54
 Object ( Bit Out) INVERT( Bit In1) ;  //_GUI 198,69
 Object ( Variant Pulse) OneShot( Variant I, Bit ClkG) ;  //_GUI 37,52
 Object ( Variant Q) RegEn( Variant D, Bit ClkG
    , Variant EN) ;  //_GUI 192,44
 Object ( Variant Out1) DynamicOut( Variant In1) ;  //_GUI 78,117
 Object ( Fixed Out1) CollectFixed( Variant SWhole, Variant Fract) ;  //_GUI 78,108
 Object ( Variant Q) RegEn:A( Variant D, Bit ClkG
    , Variant EN) ;  //_GUI 155,119
 Object ( Variant Pulse) OneShot:A( Variant I, Bit ClkG) ;  //_GUI 85,130
 Object ( Variant Pulse) OneShot:B( Variant I, Bit ClkG) ;  //_GUI 181,69
 Object ( Variant Pulse) OneShot:C( Variant I, Bit ClkG) ;  //_GUI 123,146
 Object ( Bit Out) INVERT:A( Bit In1) ;  //_GUI 139,146
 Object ( MSB008 Out1, MSB008 Out2, MSB008 Out3) Junction:B
    ( MSB008 In0) ;  //_GUI 48,45
 Object ( Variant Iteration, Bit LastDone, Bit Done
    , Variant Busy) DoneForN_Up( Variant Iterations, Bit ClkG, Bit AClr
    , Variant Go, Bit Wait) ;  //_GUI 55,44
 Object ( MSB008 Iterations) Input:S;  //_GUI 42,45
 //_Attributes Constant="*250"
 Object ( MSB016 CBy) Input:T;  //_GUI 176,129
 //_Attributes Constant="*1"
 Object ( Variant CO, Variant Count) Count:B( Variant CBy
    , Bit ClkG, Variant EN, Bit CLR) ;  //_GUI 182,128
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:C
    ( Variant In0) ;  //_GUI 152,132
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:D
    ( Variant In2) ;  //_GUI 141,57
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:E
    ( Bit In0) ;  //_GUI 111,129
 Object ( Variant DataOut, Variant ABsy, Variant Done
    , Bit Busy) Queue( Variant DataIn, Variant Size, Variant BusyBits
    , Bit ClkG, Bit Reset, Bit Go, Bit Wait) ;  //_GUI 109,41
 Object ( Variant CO, Variant Count) Count:C( Variant CBy
    , Bit ClkG, Variant EN, Bit CLR) ;  //_GUI 91,68
 Object ( Variant DataOut, Variant ABsy, Variant Done
    , Bit Busy) Queue:A( Variant DataIn, Variant Size, Variant BusyBits
    , Bit ClkG, Bit Reset, Bit Go, Bit Wait) ;  //_GUI 129,116
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:F
    ( Bit In2) ;  //_GUI 81,57
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:G
    ( Bit In0) ;  //_GUI 78,54
 Object ( MSB016 CBy) Input:U;  //_GUI 85,69
 //_Attributes Constant="*1"
 Object ( Bit OFL, Variant Out1) StaticOut( Variant Type
    , Variant Data) ;  //_GUI 171,117
 Object ( Fix32 Out1, Fix32 Out2, Fix32 Out3) Junction:H
    ( Fix32 In0) ;  //_GUI 59,119
 Object ( Variant O, Variant Count, Variant AlmBsy
    , Variant Done, Variant Busy) Queue_Shift( Variant D, Bit CLR
    , Bit ClkG, Variant DepthSz, Variant AlmBsySz, Variant Go
    , Variant Wait) ;  //_GUI 161,38
 Object ( Bit Out1) VouchBit( Variant In1) ;  //_GUI 143,61
 Object ( Bit OFL, Variant Out1) Convert( Variant Type
    , Variant Data) ;  //_GUI 98,115

 // Behavior Topology
 Output.0 = Queue_Shift.1;  //_GUI 185,33, 185,43
 Output:A.0 = Queue.1;  //_GUI 135,45, 135,46
 Output:B.0 = RegEn.0;  
 Output:C.0 = Count:A.1;  
 Output:D.0 = Junction:F.2;  //_GUI 82,63
 Output:E.0 = VouchBit.0;  
 Output:F.0 = Count:C.1;  
 Output:G.0 = DoneForN_Up.3;  
 Output:H.0 = Count.1;  
 Output:I.0 = Queue:A.1;  //_GUI 149,112, 149,121
 Output:J.0 = StaticOut.1;  
 Output:K.0 = Count:B.1;  
 Output:L.0 = Queue:A.3;  //_GUI 116,141, 116,136
 Count.0 = Input:Q.0;  
 Count.2 = Junction.2;  //_GUI 137,85
 Junction.0 = Queue.2;  //_GUI 129,55, 129,58
 Count:A.0 = Input:R.0;  
 Count:A.2 = Junction:A.1;  
 Junction:A.0 = Queue_Shift.3;  
 INVERT.0 = OneShot:B.0;  
 OneShot.0 = Input:D.0;  
 RegEn.0 = Queue_Shift.0;  //_GUI 188,46, 188,40
 RegEn.2 = Junction:A.0;  //_GUI 189,52
 DynamicOut.0 = Junction:H.1;  
 CollectFixed.0 = Input:G.0;  
 CollectFixed.1 = Input:H.0;  
 RegEn:A.0 = Queue:A.0;  //_GUI 152,121, 152,118
 RegEn:A.2 = Junction:C.0;  //_GUI 153,127
 OneShot:A.0 = Input:N.0;  
 OneShot:B.0 = Input:F.0;  
 OneShot:C.0 = Input:P.0;  
 INVERT:A.0 = OneShot:C.0;  
 Junction:B.0 = Input:S.0;  
 DoneForN_Up.0 = Junction:B.1;  
 DoneForN_Up.3 = OneShot.0;  
 DoneForN_Up.4 = Junction:F.0;  
 Count:B.0 = Input:T.0;  
 Count:B.1 = Input:O.0;  
 Count:B.2 = Junction:C.1;  //_GUI 168,136, 168,133
 Count:B.3 = Junction:E.2;  //_GUI 177,139, 177,143, 112,143
 Junction:C.0 = Queue:A.2;  
 Junction:D.0 = Queue_Shift.4;  
 Junction:E.0 = Input:M.0;  
 Queue.0 = DoneForN_Up.0;  //_GUI 77,43, 77,46
 Queue.1 = Junction:B.0;  //_GUI 85,46, 85,40, 49,40
 Queue.2 = Input.0;  
 Queue.3 = Input:B.0;  
 Queue.4 = Input:E.0;  
 Queue.5 = Junction:G.1;  //_GUI 98,58, 98,55
 Queue.6 = Junction:D.0;  //_GUI 131,61, 131,58
 Count:C.0 = Input:U.0;  
 Count:C.2 = Junction:G.2;  //_GUI 79,76
 Queue:A.0 = Convert.1;  //_GUI 118,118, 118,120
 Queue:A.1 = Input:J.0;  
 Queue:A.2 = Input:K.0;  
 Queue:A.3 = Input:L.0;  
 Queue:A.4 = Junction:E.1;  
 Queue:A.5 = OneShot:A.0;  
 Queue:A.6 = INVERT:A.0;  //_GUI 150,136, 150,149
 Junction:F.0 = Queue.3;  //_GUI 96,58, 96,61
 Junction:G.0 = DoneForN_Up.2;  
 StaticOut.0 = Junction:H.0;  //_GUI 169,119, 169,103, 60,103
 StaticOut.1 = RegEn:A.0;  
 Junction:H.0 = Input:I.0;  
 Queue_Shift.0 = Queue.0;  //_GUI 131,40, 131,43
 Queue_Shift.3 = Input:A.0;  
 Queue_Shift.4 = Input:C.0;  
 Queue_Shift.5 = Junction.1;  
 Queue_Shift.6 = INVERT.0;  //_GUI 209,58, 209,72
 VouchBit.0 = Junction:D.2;  //_GUI 142,64
 Convert.0 = CollectFixed.0;  //_GUI 96,117, 96,111
 Convert.1 = DynamicOut.0;  
}

Object ( Variant ABsy, Variant Count, Variant Q2ReadData
    , Variant Q2DoneCount, Bit FIFOBusy, Bit QueueBusy, Variant DoneForNDn_Count
    , Variant Busy1, Variant FIFO1Done_Count, Variant ABsy2, Variant FixedOut
    , Variant Test2DoneCount, Bit Busy2) "Test FIFO BusyBits"( Bit ClkG, Bit ClkG
    , MSB004 In4, Bit Reset, Bit AlmostBusySize, Bit StartTest1
    , Bit NextQueue2Data, MSB012 SWhole, MSB016 Fract, Fix32 WriteData
    , MSB005 In14, Bit ClkG, Bit ClkG, Bit Reset2
    , Bit GoTest2, Bit ClkG, Bit NextDataTest2) 
//_Attributes TreeGroup=CoreLib_Examples\Memory\Examples
{
 //_ Object Prototypes
 Object ( Bit ClkG) Input;  //_GUI 108,45
 //_Attributes Resource=*Global
 Object ( Bit ClkG) Input:A;  //_GUI 108,48
 //_Attributes Resource=*Global
 Object ( MSB004 In4) Input:B;  //_GUI 155,48
 Object ( Bit Reset) Input:C;  //_GUI 108,51
 Object ( Bit AlmostBusySize) Input:D;  //_GUI 156,51
 Object ( Bit StartTest1) Input:E;  //_GUI 27,53
 Object ( Bit NextQueue2Data) Input:F;  //_GUI 172,70
 Object ( MSB012 SWhole) Input:G;  //_GUI 71,106
 Object ( MSB016 Fract) Input:H;  //_GUI 71,109
 Object ( Fix32 WriteData) Input:I;  //_GUI 56,116
 Object ( MSB005 In14) Input:J;  //_GUI 113,117
 Object ( Bit ClkG) Input:K;  //_GUI 115,123
 //_Attributes Resource=*Global
 Object ( Bit ClkG) Input:L;  //_GUI 115,126
 //_Attributes Resource=*Global
 Object ( Bit Reset2) Input:M;  //_GUI 102,129
 Object ( Bit GoTest2) Input:N;  //_GUI 75,131
 Object ( Bit ClkG) Input:O;  //_GUI 163,132
 //_Attributes Resource=*Global
 Object ( Bit NextDataTest2) Input:P;  //_GUI 113,147
 Object Output( Variant ABsy) ;  //_GUI 216,24
 Object Output:A( Variant Count) ;  //_GUI 208,32
 Object Output:B( Variant Q2ReadData) ;  //_GUI 209,46
 Object Output:C( Variant Q2DoneCount) ;  //_GUI 261,51
 Object Output:D( Bit FIFOBusy) ;  //_GUI 85,62
 Object Output:E( Bit QueueBusy) ;  //_GUI 161,63
 Object Output:F( Variant DoneForNDn_Count) ;  //_GUI 105,72
 Object Output:G( Variant Busy1) ;  //_GUI 55,77
 Object Output:H( Variant FIFO1Done_Count) ;  //_GUI 180,81
 Object Output:I( Variant ABsy2) ;  //_GUI 171,113
 Object Output:J( Variant FixedOut) ;  //_GUI 171,121
 Object Output:K( Variant Test2DoneCount) ;  //_GUI 183,132
 Object Output:L( Bit Busy2) ;  //_GUI 118,140
 Object ( MSB016 CBy) Input:Q;  //_GUI 85,69
 //_Attributes Constant="*1"
 Object ( Variant CO, Variant Count) Count( Variant CBy
    , Bit ClkG, Variant EN, Bit CLR) ;  //_GUI 91,68
 Object ( MSB016 CBy) Input:R;  //_GUI 160,78
 //_Attributes Constant="*1"
 Object ( Variant CO, Variant Count) Count:A( Variant CBy
    , Bit ClkG, Variant EN, Bit CLR) ;  //_GUI 166,77
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction
    ( Variant In0) ;  //_GUI 136,54
 Object ( MSB016 CBy) Input:S;  //_GUI 241,48
 //_Attributes Constant="*1"
 Object ( Variant CO, Variant Count) Count:B( Variant CBy
    , Bit ClkG, Variant EN, Bit CLR) ;  //_GUI 247,47
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:A
    ( Variant In0) ;  //_GUI 188,54
 Object ( Bit Out) INVERT( Bit In1) ;  //_GUI 198,69
 Object ( Variant Pulse) OneShot( Variant I, Bit ClkG) ;  //_GUI 37,52
 Object ( Variant Q) RegEn( Variant D, Bit ClkG
    , Variant EN) ;  //_GUI 192,44
 Object ( Variant Out1) DynamicOut( Variant In1) ;  //_GUI 77,114
 Object ( Fixed Out1) CollectFixed( Variant SWhole, Variant Fract) ;  //_GUI 77,105
 Object ( Variant Q) RegEn:A( Variant D, Bit ClkG
    , Variant EN) ;  //_GUI 142,119
 Object ( Variant Pulse) OneShot:A( Variant I, Bit ClkG) ;  //_GUI 85,130
 Object ( Variant Pulse) OneShot:B( Variant I, Bit ClkG) ;  //_GUI 181,69
 Object ( Variant Pulse) OneShot:C( Variant I, Bit ClkG) ;  //_GUI 123,146
 Object ( Bit Out) INVERT:A( Bit In1) ;  //_GUI 138,146
 Object ( MSB008 Out1, MSB008 Out2, MSB008 Out3) Junction:B
    ( MSB008 In0) ;  //_GUI 48,45
 Object ( Variant Iteration, Bit LastDone, Bit Done
    , Variant Busy) DoneForN_Up( Variant Iterations, Bit ClkG, Bit AClr
    , Variant Go, Bit Wait) ;  //_GUI 55,44
 Object ( MSB008 Iterations) Input:T;  //_GUI 42,45
 //_Attributes Constant="*250"
 Object ( MSB016 CBy) Input:U;  //_GUI 163,129
 //_Attributes Constant="*1"
 Object ( Variant CO, Variant Count) Count:C( Variant CBy
    , Bit ClkG, Variant EN, Bit CLR) ;  //_GUI 169,128
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:C
    ( Variant In0) ;  //_GUI 139,132
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:D
    ( Variant In2) ;  //_GUI 141,57
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:E
    ( Bit In0) ;  //_GUI 108,129
 Object ( MSB007 In) Input:V;  //_GUI 108,42
 //_Attributes Constant="*0"
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:F
    ( Bit In0) ;  //_GUI 78,54
 Object ( MSB004 In) Input:W;  //_GUI 113,120
 //_Attributes Constant="*0"
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:G
    ( Bit In2) ;  //_GUI 81,57
 Object ( Variant DataOut, Variant ABsy, Variant Done
    , Bit Busy) FIFO( Variant DataIn, Variant Size, Variant BusyBits
    , Bit ClkWrite, Bit ClkG, Bit Reset, Bit Go
    , Bit Wait) ;  //_GUI 120,113
 Object ( Variant DataOut, Variant ABsy, Variant Done
    , Bit Busy) FIFO:A( Variant DataIn, Variant Size, Variant BusyBits
    , Bit ClkWrite, Bit ClkG, Bit Reset, Bit Go
    , Bit Wait) ;  //_GUI 116,35
 Object ( Bit OFL, Variant Out1) StaticOut( Variant Type
    , Variant Data) ;  //_GUI 158,117
 Object ( Fix32 Out1, Fix32 Out2, Fix32 Out3) Junction:H
    ( Fix32 In0) ;  //_GUI 64,116
 Object ( Variant O, Variant Count, Variant AlmBsy
    , Variant Done, Variant Busy) Queue_Shift( Variant D, Bit CLR
    , Bit ClkG, Variant DepthSz, Variant AlmBsySz, Variant Go
    , Variant Wait) ;  //_GUI 161,38
 Object ( Bit Out1) VouchBit( Variant In1) ;  //_GUI 146,61
 Object ( Bit OFL, Variant Out1) Convert( Variant Type
    , Variant Data) ;  //_GUI 97,112

 // Behavior Topology
 Output.0 = FIFO:A.1;  //_GUI 141,25, 141,40
 Output:A.0 = Queue_Shift.1;  //_GUI 185,33, 185,43
 Output:B.0 = RegEn.0;  
 Output:C.0 = Count:B.1;  
 Output:D.0 = Junction:G.2;  //_GUI 82,63
 Output:E.0 = VouchBit.0;  
 Output:F.0 = Count.1;  
 Output:G.0 = DoneForN_Up.3;  
 Output:H.0 = Count:A.1;  
 Output:I.0 = FIFO.1;  //_GUI 142,114, 142,118
 Output:J.0 = StaticOut.1;  
 Output:K.0 = Count:C.1;  
 Output:L.0 = FIFO.3;  //_GUI 116,141, 116,136
 Count.0 = Input:Q.0;  
 Count.2 = Junction:F.2;  //_GUI 79,76
 Count:A.0 = Input:R.0;  
 Count:A.2 = Junction.2;  //_GUI 137,85
 Junction.0 = FIFO:A.2;  
 Count:B.0 = Input:S.0;  
 Count:B.2 = Junction:A.1;  
 Junction:A.0 = Queue_Shift.3;  
 INVERT.0 = OneShot:B.0;  
 OneShot.0 = Input:E.0;  
 RegEn.0 = Queue_Shift.0;  //_GUI 188,46, 188,40
 RegEn.2 = Junction:A.0;  //_GUI 189,52
 DynamicOut.0 = Junction:H.1;  
 CollectFixed.0 = Input:G.0;  
 CollectFixed.1 = Input:H.0;  
 RegEn:A.0 = FIFO.0;  //_GUI 139,121, 139,115
 RegEn:A.2 = Junction:C.0;  //_GUI 140,127
 OneShot:A.0 = Input:N.0;  
 OneShot:B.0 = Input:F.0;  
 OneShot:C.0 = Input:P.0;  
 INVERT:A.0 = OneShot:C.0;  
 Junction:B.0 = Input:T.0;  
 DoneForN_Up.0 = Junction:B.1;  
 DoneForN_Up.3 = OneShot.0;  
 DoneForN_Up.4 = Junction:G.0;  
 Count:C.0 = Input:U.0;  
 Count:C.1 = Input:O.0;  
 Count:C.2 = Junction:C.1;  //_GUI 155,136, 155,133
 Count:C.3 = Junction:E.2;  //_GUI 164,139, 164,143, 109,143
 Junction:C.0 = FIFO.2;  
 Junction:D.0 = Queue_Shift.4;  
 Junction:E.0 = Input:M.0;  
 Junction:F.0 = DoneForN_Up.2;  
 Junction:G.0 = FIFO:A.3;  
 FIFO.0 = Convert.1;  //_GUI 113,115, 113,117
 FIFO.1 = Input:J.0;  
 FIFO.2 = Input:W.0;  
 FIFO.3 = Input:K.0;  
 FIFO.4 = Input:L.0;  
 FIFO.5 = Junction:E.1;  
 FIFO.6 = OneShot:A.0;  
 FIFO.7 = INVERT:A.0;  //_GUI 151,136, 151,149
 FIFO:A.0 = DoneForN_Up.0;  //_GUI 77,37, 77,46
 FIFO:A.1 = Junction:B.0;  //_GUI 49,40
 FIFO:A.2 = Input:V.0;  
 FIFO:A.3 = Input.0;  
 FIFO:A.4 = Input:A.0;  
 FIFO:A.5 = Input:C.0;  
 FIFO:A.6 = Junction:F.1;  
 FIFO:A.7 = Junction:D.0;  
 StaticOut.0 = Junction:H.0;  //_GUI 158,102, 65,102
 StaticOut.1 = RegEn:A.0;  
 Junction:H.0 = Input:I.0;  
 Queue_Shift.0 = FIFO:A.0;  //_GUI 146,40, 146,37
 Queue_Shift.3 = Input:B.0;  
 Queue_Shift.4 = Input:D.0;  
 Queue_Shift.5 = Junction.1;  
 Queue_Shift.6 = INVERT.0;  //_GUI 209,58, 209,72
 VouchBit.0 = Junction:D.2;  //_GUI 142,64
 Convert.0 = CollectFixed.0;  //_GUI 95,114, 95,108
 Convert.1 = DynamicOut.0;  
}

Object ( Variant N_Bits, Variant BitLength, Variant N_Bits
    , Variant BitLength, Variant N_Bits, Variant BitLength) Ex_Constant_N_Bits( LSB008 Constant
    , LSB008 Constant, LSB008 Constant) 
//_Attributes TreeGroup=CoreLib_Examples\Grammar/Datasets\Examples\Ex
{
// Object Name:
// Ex_Constant_N_Bits
//
// Description:
// Constant NBits Object Example
//
//
//
//
// Date:
//
// 01/17/04
 //_ Object Prototypes
 Object ( LSB008 Constant) Input;  //_GUI 51,41
 //_Attributes Constant="5"
 Object ( LSB008 Constant) Input:A;  //_GUI 51,58
 //_Attributes Constant="1"
 Object ( LSB008 Constant) Input:B;  //_GUI 51,77
 //_Attributes Constant="0"
 Object Output( Variant N_Bits) ;  //_GUI 99,41
 Object Output:A( Variant BitLength) ;  //_GUI 99,49
 Object Output:B( Variant N_Bits) ;  //_GUI 99,58
 Object Output:C( Variant BitLength) ;  //_GUI 99,66
 Object Output:D( Variant N_Bits) ;  //_GUI 99,77
 Object Output:E( Variant BitLength) ;  //_GUI 99,85
 Object Text;  //_GUI 61,27,Constant NBits ExampleArial,10,255,1
 Object ( Variant Out1) BitLength( Variant Type) ;  //_GUI 86,64
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction
    ( Variant In0) ;  //_GUI 81,58
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:A
    ( Variant In0) ;  //_GUI 81,41
 Object ( Variant Out1) BitLength:A( Variant Type) ;  //_GUI 86,47
 Object ( Variant Out1) BitLength:B( Variant Type) ;  //_GUI 86,83
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:B
    ( Variant In0) ;  //_GUI 81,77
 Object ( Variant N_Bits) "Constant->N_Bits"( Variant Constant) ;  //_GUI 57,39
 Object ( Variant N_Bits) "Constant->N_Bits":A( Variant Constant) ;  //_GUI 57,56
 Object ( Variant N_Bits) "Constant->N_Bits":B( Variant Constant) ;  //_GUI 57,75
 Object Text;  //_GUI 115,77,No widget produced for zero bits (NULL)

 // Behavior Topology
 Output.0 = Junction:A.1;  
 Output:A.0 = BitLength:A.0;  
 Output:B.0 = Junction.1;  
 Output:C.0 = BitLength.0;  
 Output:D.0 = Junction:B.1;  
 Output:E.0 = BitLength:B.0;  
 BitLength.0 = Junction.2;  //_GUI 82,67
 Junction.0 = "Constant->N_Bits":A.0;  
 Junction:A.0 = "Constant->N_Bits".0;  
 BitLength:A.0 = Junction:A.2;  //_GUI 82,50
 BitLength:B.0 = Junction:B.2;  //_GUI 82,86
 Junction:B.0 = "Constant->N_Bits":B.0;  
 "Constant->N_Bits".0 = Input.0;  
 "Constant->N_Bits":A.0 = Input:A.0;  
 "Constant->N_Bits":B.0 = Input:B.0;  
}

Object ( Variant BitLength1, Variant BitLength2, Variant BitLength3) Ex_BitA_Div_BitB
    ( MSB020 A_MSB020, MSB004 B_MSB004, MSB021 A_MSB021, MSB004 B_MSB004
    , Bit In14, Bit In15, Bit In14, Bit In15
    , Bit In14, Bit In15) 
//_Attributes TreeGroup=CoreLib_Examples\Grammar/Datasets\Examples\Ex
{
// Object Name:
// Ex_Bit_A_Div_Bit_B
//
// Description:
// BitA_Div_BitB examples
//
//
//
//
// Date:
//
// 11/15/04
 //_ Object Prototypes
 Object ( MSB020 A_MSB020) Input;  //_GUI 46,32
 Object ( MSB004 B_MSB004) Input:A;  //_GUI 46,35
 Object ( MSB021 A_MSB021) Input:B;  //_GUI 46,46
 Object ( MSB004 B_MSB004) Input:C;  //_GUI 46,49
 Object ( Bit In14) Input:D;  //_GUI 46,58
 Object ( Bit In15) Input:E;  //_GUI 46,61
 Object ( Bit In14) Input:F;  //_GUI 46,66
 Object ( Bit In15) Input:G;  //_GUI 46,69
 Object ( Bit In14) Input:H;  //_GUI 46,75
 Object ( Bit In15) Input:I;  //_GUI 46,78
 Object Output( Variant BitLength1) ;  //_GUI 88,33
 Object Output:A( Variant BitLength2) ;  //_GUI 88,47
 Object Output:B( Variant BitLength3) ;  //_GUI 112,66
 Object Text;  //_GUI 52,6,BitA_Div_BitB_ExampleArial,10,255,1
 Object Text;  //_GUI 48,13,BitA_Div_BitB produces a zero data set whose BitLength is BitLength A / BitLength B.  If A is not evenly divisible by B, a warning message will be displayed and the remainder will show up as a single bit of padding on the output data set.Arial,8,0,1
 Object Text;  //_GUI 109,33,Value will be 5Arial,8,0,1
 Object ( Variant N) BitA_Div_BitB( Variant A, Variant B) ;  //_GUI 52,45
 Object ( Variant N) BitA_Div_BitB:A( Variant A, Variant B) ;  //_GUI 52,31
 Object ( Variant Out1) BitLength( Variant Type) ;  //_GUI 76,45
 Object ( Variant Out1) BitLength:A( Variant Type) ;  //_GUI 76,31
 Object Text;  //_GUI 107,46,Due to remainder, value will be 6Arial,8,0,1
 Object ( Variant N) BitA_Div_BitB:B( Variant A, Variant B) ;  //_GUI 82,64
 Object ( List Out1) PackBIN( Variant In1, Variant In2) ;  //_GUI 52,57
 Object ( List Out1) PackBIN:A( Variant In1, Variant In2) ;  //_GUI 52,65
 Object ( List Out1) PackBIN:B( Variant In1, Variant In2) ;  //_GUI 52,74
 Object ( List Out1, List Out2, List Out3) Junction
    ( List In0) ;  //_GUI 65,76
 Object ( List Out1) PackBIN:C( Variant In1, Variant In2
    , Variant In3) ;  //_GUI 69,63
 Object ( Variant Out1) BitLength:B( Variant Type) ;  //_GUI 99,64
 Object Text;  //_GUI 131,65,Value will be 3Arial,8,0,1
 Object Text;  //_GUI 107,50,Should produce a "Doesn't divide evenly" user trap

 // Behavior Topology
 Output.0 = BitLength:A.0;  
 Output:A.0 = BitLength.0;  
 Output:B.0 = BitLength:B.0;  
 BitA_Div_BitB.0 = Input:B.0;  
 BitA_Div_BitB.1 = Input:C.0;  
 BitA_Div_BitB:A.0 = Input.0;  
 BitA_Div_BitB:A.1 = Input:A.0;  
 BitLength.0 = BitA_Div_BitB.0;  
 BitLength:A.0 = BitA_Div_BitB:A.0;  
 BitA_Div_BitB:B.0 = PackBIN:C.0;  
 BitA_Div_BitB:B.1 = Junction.1;  //_GUI 82,77
 PackBIN.0 = Input:D.0;  
 PackBIN.1 = Input:E.0;  
 PackBIN:A.0 = Input:F.0;  
 PackBIN:A.1 = Input:G.0;  
 PackBIN:B.0 = Input:H.0;  
 PackBIN:B.1 = Input:I.0;  
 Junction.0 = PackBIN:B.0;  
 PackBIN:C.0 = PackBIN.0;  //_GUI 66,65, 66,60
 PackBIN:C.1 = PackBIN:A.0;  
 PackBIN:C.2 = Junction.0;  //_GUI 66,71
 BitLength:B.0 = BitA_Div_BitB:B.0;  
}

Object ( Variant BitLength1, Variant BitLength2, Variant BitLength3) Ex_BitA_Mul_BitB
    ( MSB011 A_MSB011, MSB004 B_MSB004, LSB018 A_LSB018, Bit B_Bit
    , Bit In14, Bit In15, Bit In14, Bit In15
    , Bit In14, Bit In15) 
//_Attributes TreeGroup=CoreLib_Examples\Grammar/Datasets\Examples\Ex
{
// Object Name:
// Ex_Bit_A_Mul_Bit_B
//
// Description:
// BitA_Mul_BitB_Example
//
//
//
//
// Date:
//
// 11/15/04
 //_ Object Prototypes
 Object ( MSB011 A_MSB011) Input;  //_GUI 46,32
 Object ( MSB004 B_MSB004) Input:A;  //_GUI 46,35
 Object ( LSB018 A_LSB018) Input:B;  //_GUI 46,46
 Object ( Bit B_Bit) Input:C;  //_GUI 46,49
 Object ( Bit In14) Input:D;  //_GUI 46,57
 Object ( Bit In15) Input:E;  //_GUI 46,60
 Object ( Bit In14) Input:F;  //_GUI 46,65
 Object ( Bit In15) Input:G;  //_GUI 46,68
 Object ( Bit In14) Input:H;  //_GUI 46,74
 Object ( Bit In15) Input:I;  //_GUI 46,77
 Object Output( Variant BitLength1) ;  //_GUI 88,33
 Object Output:A( Variant BitLength2) ;  //_GUI 88,47
 Object Output:B( Variant BitLength3) ;  //_GUI 112,65
 Object Text;  //_GUI 54,6,BitA_Mul_BitB ExampleArial,10,255,1
 Object Text;  //_GUI 109,46,Value will be 18Arial,8,0,1
 Object ( Variant N) BitA_Mul_BitB( Variant A, Variant B) ;  //_GUI 52,31
 Object ( Variant Out1) BitLength( Variant Type) ;  //_GUI 76,45
 Object ( Variant Out1) BitLength:A( Variant Type) ;  //_GUI 76,31
 Object Text;  //_GUI 44,14,BitA_Mul_BitB produces a zero data set whose BitLength is BitLength A * BitLength B.Arial,8,0,1
 Object Text;  //_GUI 109,33,Value will be 44Arial,8,0,1
 Object ( Variant N) BitA_Mul_BitB:A( Variant A, Variant B) ;  //_GUI 53,45
 Object ( List Out1) PackBIN( Variant In1, Variant In2) ;  //_GUI 52,56
 Object ( List Out1) PackBIN:A( Variant In1, Variant In2) ;  //_GUI 52,64
 Object ( List Out1) PackBIN:B( Variant In1, Variant In2) ;  //_GUI 52,73
 Object ( List Out1, List Out2, List Out3) Junction
    ( List In0) ;  //_GUI 65,75
 Object ( List Out1) PackBIN:C( Variant In1, Variant In2
    , Variant In3) ;  //_GUI 69,62
 Object ( Variant Out1) BitLength:B( Variant Type) ;  //_GUI 99,63
 Object ( Variant N) BitA_Mul_BitB:B( Variant A, Variant B) ;  //_GUI 82,63
 Object Text;  //_GUI 130,65,Value will be 12Arial,8,0,1

 // Behavior Topology
 Output.0 = BitLength:A.0;  
 Output:A.0 = BitLength.0;  
 Output:B.0 = BitLength:B.0;  
 BitA_Mul_BitB.0 = Input.0;  
 BitA_Mul_BitB.1 = Input:A.0;  
 BitLength.0 = BitA_Mul_BitB:A.0;  
 BitLength:A.0 = BitA_Mul_BitB.0;  
 BitA_Mul_BitB:A.0 = Input:B.0;  
 BitA_Mul_BitB:A.1 = Input:C.0;  
 PackBIN.0 = Input:D.0;  
 PackBIN.1 = Input:E.0;  
 PackBIN:A.0 = Input:F.0;  
 PackBIN:A.1 = Input:G.0;  
 PackBIN:B.0 = Input:H.0;  
 PackBIN:B.1 = Input:I.0;  
 Junction.0 = PackBIN:B.0;  
 PackBIN:C.0 = PackBIN.0;  //_GUI 66,64, 66,59
 PackBIN:C.1 = PackBIN:A.0;  
 PackBIN:C.2 = Junction.0;  //_GUI 66,70
 BitLength:B.0 = BitA_Mul_BitB:B.0;  
 BitA_Mul_BitB:B.0 = PackBIN:C.0;  
 BitA_Mul_BitB:B.1 = Junction.1;  //_GUI 82,76
}

Object ( Variant Nothing, Variant Q, Variant P
    , Variant O, Variant "N M", Variant L, Variant "K J"
    , Variant I, Variant "H G F E D C B", Variant A, Variant Other_Null
    , Variant LSB_Null, Variant Other_var, Variant LSB_var, Variant Other_list2
    , Variant LSB_list2, Variant Other_of_LSB_list, Variant LSB_of_LSB_list, Variant Other_of_MSB_list
    , Variant LSB_of_MSB_list, Variant Other_of_BIN_list, Variant LSB_of_BIN_list) Ex_PopLsb( Bit Q
    , Bit P, Bit O, Bit N, Bit M
    , Bit L, Bit K, Bit J, Bit I
    , Bit H, Bit G, Bit F, Bit E
    , Bit D, Bit C, Bit B, Bit A) 
//_Attributes TreeGroup=CoreLib_Examples\Grammar/Datasets\Examples\Ex
{
 //_ Object Prototypes
 Object ( Bit Q) Input;  //_GUI 27,15
 Object ( Bit P) Input:A;  //_GUI 12,25
 Object ( Bit O) Input:B;  //_GUI 12,28
 Object ( Bit N) Input:C;  //_GUI 12,38
 Object ( Bit M) Input:D;  //_GUI 12,41
 Object ( Bit L) Input:E;  //_GUI 12,44
 Object ( Bit K) Input:F;  //_GUI 12,52
 Object ( Bit J) Input:G;  //_GUI 12,55
 Object ( Bit I) Input:H;  //_GUI 12,58
 Object ( Bit H) Input:I;  //_GUI 12,68
 Object ( Bit G) Input:J;  //_GUI 12,71
 Object ( Bit F) Input:K;  //_GUI 12,74
 Object ( Bit E) Input:L;  //_GUI 12,77
 Object ( Bit D) Input:M;  //_GUI 12,80
 Object ( Bit C) Input:N;  //_GUI 12,83
 Object ( Bit B) Input:O;  //_GUI 12,86
 Object ( Bit A) Input:P;  //_GUI 12,89
 Object Output( Variant Nothing) ;  //_GUI 47,14
 //_Attributes WidgetLeft=340,WidgetTop=5,WidgetWidth=129,WidgetHeight=41,Widget=TextBox,WidgetHex=True
 Object Output:A( Variant Q) ;  //_GUI 47,17
 Object Output:B( Variant P) ;  //_GUI 47,25
 //_Attributes WidgetLeft=340,WidgetWidth=129,WidgetHeight=41,Widget=TextBox,WidgetHex=True
 Object Output:C( Variant O) ;  //_GUI 47,28
 Object Output:D( Variant "N M") ;  //_GUI 47,38
 //_Attributes WidgetLeft=340,WidgetWidth=129,WidgetHeight=41,Widget=TextBox,WidgetHex=True
 Object Output:E( Variant L) ;  //_GUI 47,41
 Object Output:F( Variant "K J") ;  //_GUI 47,52
 //_Attributes WidgetLeft=340,WidgetWidth=129,WidgetHeight=41,Widget=TextBox,WidgetHex=True
 Object Output:G( Variant I) ;  //_GUI 47,55
 Object Output:H( Variant "H G F E D C B") ;  //_GUI 50,68
 //_Attributes WidgetLeft=340,WidgetWidth=129,WidgetHeight=41,Widget=TextBox,WidgetHex=True
 Object Output:I( Variant A) ;  //_GUI 50,71
 Object Output:J( Variant Other_Null) ;  //_GUI 53,100
 Object Output:K( Variant LSB_Null) ;  //_GUI 53,103
 Object Output:L( Variant Other_var) ;  //_GUI 53,109
 Object Output:M( Variant LSB_var) ;  //_GUI 53,112
 Object Output:N( Variant Other_list2) ;  //_GUI 53,118
 Object Output:O( Variant LSB_list2) ;  //_GUI 53,121
 Object Output:P( Variant Other_of_LSB_list) ;  //_GUI 53,128
 Object Output:Q( Variant LSB_of_LSB_list) ;  //_GUI 53,131
 Object Output:R( Variant Other_of_MSB_list) ;  //_GUI 53,140
 Object Output:S( Variant LSB_of_MSB_list) ;  //_GUI 53,143
 Object Output:T( Variant Other_of_BIN_list) ;  //_GUI 53,152
 Object Output:U( Variant LSB_of_BIN_list) ;  //_GUI 53,155
 Object ( LSB002 In) Input:Q;  //_GUI 18,143
 //_Attributes Constant="*2"
 Object ( LSB002 In) Input:R;  //_GUI 18,146
 //_Attributes Constant="*1"
 Object ( LSB002 In) Input:S;  //_GUI 18,140
 //_Attributes Constant="*3"
 Object ( List Out1) PackMSB( Variant In1, Variant In2
    , Variant In3) ;  //_GUI 24,139
 Object ( List Out) ListOut( Variant In1, Variant In2) ;  //_GUI 24,117
 Object ( NULL Out1) NULL;  //_GUI 27,99
 Object ( LSB005 In) Input:T;  //_GUI 33,110
 //_Attributes Constant="*7"
 Object ( LSB002 In) Input:U;  //_GUI 18,118
 //_Attributes Constant="*2"
 Object ( LSB002 In) Input:V;  //_GUI 18,121
 //_Attributes Constant="*1"
 Object ( LSB002 In) Input:W;  //_GUI 18,131
 //_Attributes Constant="*2"
 Object ( LSB002 In) Input:X;  //_GUI 18,134
 //_Attributes Constant="*1"
 Object ( List Out1) PackLSB( Variant In1, Variant In2
    , Variant In3) ;  //_GUI 24,127
 Object ( LSB002 In) Input:Y;  //_GUI 18,128
 //_Attributes Constant="*3"
 Object ( Variant Out1, Variant LSB) PopLsb( Variant In1) ;  //_GUI 34,51
 //_Attributes Documentation=list
 Object ( Variant Out1, Variant LSB) PopLsb:A( Variant In1) ;  //_GUI 37,67
 //_Attributes Documentation=list
 Object ( Variant Out1, Variant LSB) PopLsb:B( Variant In1) ;  //_GUI 34,37
 //_Attributes Documentation=list
 Object ( Variant Out1, Variant LSB) PopLsb:C( Variant In1) ;  //_GUI 40,99
 //_Attributes Documentation=list
 Object ( Variant Out1, Variant LSB) PopLsb:D( Variant In1) ;  //_GUI 40,108
 //_Attributes Documentation=list
 Object ( Variant Out1, Variant LSB) PopLsb:E( Variant In1) ;  //_GUI 40,117
 //_Attributes Documentation=list
 Object ( Variant Out1, Variant LSB) PopLsb:F( Variant In1) ;  //_GUI 40,127
 //_Attributes Documentation=list
 Object ( Variant Out1, Variant LSB) PopLsb:G( Variant In1) ;  //_GUI 40,139
 //_Attributes Documentation=list
 Object Text;  //_GUI 73,108,You can't use PopLsb on single element lists because it will pop bits instead.  If you want to represent single element lists as a var and have uniform behavior, use ListPopLsb.
 Object ( Variant Out1) CollectBIN( Variant In1, Variant In2
    , Variant In3, Variant In4, Variant In5, Variant In6
    , Variant In7, Variant In8) ;  //_GUI 21,67
 Object ( Variant Out1) CollectMSB( Variant In1, Variant In2
    , Variant In3) ;  //_GUI 19,51
 Object ( Variant Out1) CollectLSB( Variant In1, Variant In2
    , Variant In3) ;  //_GUI 19,37
 Object ( Variant Out1) CollectLSB:A( Variant In2, Variant In3) ;  //_GUI 19,24
 Object Text;  //_GUI 88,14,PopLsb can be used to pop the least significant bit off of a collection of bits (in MSB, LSB, or BIN order) or it can be used to pop the least significant element off of lists (in MSB, LSB, or BIN order).
 Object ( LSB002 In) Input:Z;  //_GUI 18,155
 //_Attributes Constant="*2"
 Object ( LSB002 In) Input:a;  //_GUI 18,158
 //_Attributes Constant="*1"
 Object ( LSB002 In) Input:b;  //_GUI 18,152
 //_Attributes Constant="*3"
 Object ( Variant Out1, Variant LSB) PopLsb:H( Variant In1) ;  //_GUI 34,13
 //_Attributes Documentation=list
 Object ( Variant Out1, Variant LSB) PopLsb:I( Variant In1) ;  //_GUI 34,24
 //_Attributes Documentation=list
 Object ( Variant Out1, Variant LSB) PopLsb:J( Variant In1) ;  //_GUI 40,151
 //_Attributes Documentation=list
 Object ( List Out1) PackBIN( Variant In1, Variant In2
    , Variant In3) ;  //_GUI 24,151

 // Behavior Topology
 Output.0 = PopLsb:H.0;  
 Output:A.0 = PopLsb:H.1;  
 Output:B.0 = PopLsb:I.0;  
 Output:C.0 = PopLsb:I.1;  
 Output:D.0 = PopLsb:B.0;  
 Output:E.0 = PopLsb:B.1;  
 Output:F.0 = PopLsb.0;  
 Output:G.0 = PopLsb.1;  
 Output:H.0 = PopLsb:A.0;  
 Output:I.0 = PopLsb:A.1;  
 Output:J.0 = PopLsb:C.0;  
 Output:K.0 = PopLsb:C.1;  
 Output:L.0 = PopLsb:D.0;  
 Output:M.0 = PopLsb:D.1;  
 Output:N.0 = PopLsb:E.0;  
 Output:O.0 = PopLsb:E.1;  
 Output:P.0 = PopLsb:F.0;  
 Output:Q.0 = PopLsb:F.1;  
 Output:R.0 = PopLsb:G.0;  
 Output:S.0 = PopLsb:G.1;  
 Output:T.0 = PopLsb:J.0;  
 Output:U.0 = PopLsb:J.1;  
 PackMSB.0 = Input:S.0;  
 PackMSB.1 = Input:Q.0;  
 PackMSB.2 = Input:R.0;  
 ListOut.0 = Input:V.0;  
 ListOut.1 = Input:U.0;  
 PackLSB.0 = Input:Y.0;  
 PackLSB.1 = Input:W.0;  
 PackLSB.2 = Input:X.0;  
 PopLsb.0 = CollectMSB.0;  
 PopLsb:A.0 = CollectBIN.0;  
 PopLsb:B.0 = CollectLSB.0;  
 PopLsb:C.0 = NULL.0;  
 PopLsb:D.0 = Input:T.0;  
 PopLsb:E.0 = ListOut.0;  
 PopLsb:F.0 = PackLSB.0;  
 PopLsb:G.0 = PackMSB.0;  
 CollectBIN.0 = Input:I.0;  
 CollectBIN.1 = Input:J.0;  
 CollectBIN.2 = Input:K.0;  
 CollectBIN.3 = Input:L.0;  
 CollectBIN.4 = Input:M.0;  
 CollectBIN.5 = Input:N.0;  
 CollectBIN.6 = Input:O.0;  
 CollectBIN.7 = Input:P.0;  
 CollectMSB.0 = Input:F.0;  
 CollectMSB.1 = Input:G.0;  
 CollectMSB.2 = Input:H.0;  
 CollectLSB.0 = Input:C.0;  
 CollectLSB.1 = Input:D.0;  
 CollectLSB.2 = Input:E.0;  
 CollectLSB:A.0 = Input:A.0;  
 CollectLSB:A.1 = Input:B.0;  
 PopLsb:H.0 = Input.0;  
 PopLsb:I.0 = CollectLSB:A.0;  
 PopLsb:J.0 = PackBIN.0;  
 PackBIN.0 = Input:b.0;  
 PackBIN.1 = Input:Z.0;  
 PackBIN.2 = Input:a.0;  
}

Object ( Variant Nothing, Variant A, Variant B
    , Variant C, Variant "D E", Variant F, Variant "G H"
    , Variant I, Variant "J K L M N O P", Variant Q, Variant Other_Null
    , Variant LSB_Null, Variant Other_var, Variant LSB_var, Variant Other_list2
    , Variant LSB_list2, Variant Other_of_LSB_list, Variant LSB_of_LSB_list, Variant Other_of_MSB_list
    , Variant LSB_of_MSB_list, Variant Other1_Null, Variant Other2_Null, Variant LSB_Null
    , Variant Other1_var, Variant Other2_var, Variant LSB_var, Variant Other1_list2
    , Variant Other2_list2, Variant LSB_list2, Variant Other1_list3, Variant Other2_list3
    , Variant LSB_list3, Variant Other1_list4, Variant Other2_list4, Variant LSB_list4) Ex_ListPopLsb
    ( Variant A, Variant B, Variant C, Variant D
    , Variant E, Variant F, Variant G, Variant H
    , Variant I, Variant J, Variant K, Variant L
    , Variant M, Variant N, Variant O, Variant P
    , Variant Q) 
//_Attributes TreeGroup=CoreLib_Examples\Grammar/Datasets\Examples\Ex
{
 //_ Object Prototypes
 Object ( Variant A) Input;  //_GUI 27,15
 Object ( Variant B) Input:A;  //_GUI 12,25
 Object ( Variant C) Input:B;  //_GUI 12,28
 Object ( Variant D) Input:C;  //_GUI 12,38
 Object ( Variant E) Input:D;  //_GUI 12,41
 Object ( Variant F) Input:E;  //_GUI 12,44
 Object ( Variant G) Input:F;  //_GUI 12,52
 Object ( Variant H) Input:G;  //_GUI 12,55
 Object ( Variant I) Input:H;  //_GUI 12,58
 Object ( Variant J) Input:I;  //_GUI 12,68
 Object ( Variant K) Input:J;  //_GUI 12,71
 Object ( Variant L) Input:K;  //_GUI 12,74
 Object ( Variant M) Input:L;  //_GUI 12,77
 Object ( Variant N) Input:M;  //_GUI 12,80
 Object ( Variant O) Input:N;  //_GUI 12,83
 Object ( Variant P) Input:O;  //_GUI 12,86
 Object ( Variant Q) Input:P;  //_GUI 12,89
 Object Output( Variant Nothing) ;  //_GUI 47,14
 //_Attributes WidgetLeft=340,WidgetTop=5,WidgetWidth=129,WidgetHeight=41,Widget=TextBox,WidgetHex=True
 Object Output:A( Variant A) ;  //_GUI 47,17
 Object Output:B( Variant B) ;  //_GUI 47,25
 //_Attributes WidgetLeft=340,WidgetWidth=129,WidgetHeight=41,Widget=TextBox,WidgetHex=True
 Object Output:C( Variant C) ;  //_GUI 47,28
 Object Output:D( Variant "D E") ;  //_GUI 47,38
 //_Attributes WidgetLeft=340,WidgetWidth=129,WidgetHeight=41,Widget=TextBox,WidgetHex=True
 Object Output:E( Variant F) ;  //_GUI 47,41
 Object Output:F( Variant "G H") ;  //_GUI 47,52
 //_Attributes WidgetLeft=340,WidgetWidth=129,WidgetHeight=41,Widget=TextBox,WidgetHex=True
 Object Output:G( Variant I) ;  //_GUI 47,55
 Object Output:H( Variant "J K L M N O P") ;  //_GUI 82,70
 //_Attributes WidgetLeft=340,WidgetWidth=129,WidgetHeight=41,Widget=TextBox,WidgetHex=True
 Object Output:I( Variant Q) ;  //_GUI 82,73
 Object Output:J( Variant Other_Null) ;  //_GUI 53,103
 Object Output:K( Variant LSB_Null) ;  //_GUI 53,106
 Object Output:L( Variant Other_var) ;  //_GUI 53,112
 Object Output:M( Variant LSB_var) ;  //_GUI 53,115
 Object Output:N( Variant Other_list2) ;  //_GUI 53,121
 Object Output:O( Variant LSB_list2) ;  //_GUI 53,124
 Object Output:P( Variant Other_of_LSB_list) ;  //_GUI 53,131
 Object Output:Q( Variant LSB_of_LSB_list) ;  //_GUI 53,134
 Object Output:R( Variant Other_of_MSB_list) ;  //_GUI 53,143
 Object Output:S( Variant LSB_of_MSB_list) ;  //_GUI 53,146
 Object Output:T( Variant Other1_Null) ;  //_GUI 53,156
 Object Output:U( Variant Other2_Null) ;  //_GUI 53,159
 Object Output:V( Variant LSB_Null) ;  //_GUI 53,162
 Object Output:W( Variant Other1_var) ;  //_GUI 53,168
 Object Output:X( Variant Other2_var) ;  //_GUI 53,171
 Object Output:Y( Variant LSB_var) ;  //_GUI 53,174
 Object Output:Z( Variant Other1_list2) ;  //_GUI 53,180
 Object Output:a( Variant Other2_list2) ;  //_GUI 53,183
 Object Output:b( Variant LSB_list2) ;  //_GUI 53,186
 Object Output:c( Variant Other1_list3) ;  //_GUI 53,192
 Object Output:d( Variant Other2_list3) ;  //_GUI 53,195
 Object Output:e( Variant LSB_list3) ;  //_GUI 53,198
 Object Output:f( Variant Other1_list4) ;  //_GUI 53,204
 Object Output:AA( Variant Other2_list4) ;  //_GUI 53,207
 Object Output:BA( Variant LSB_list4) ;  //_GUI 53,210
 Object ( LSB002 In) Input:Q;  //_GUI 18,124
 //_Attributes Constant="*1"
 Object ( Variant Out1, Variant LSB) ListPopLsb( Variant In1) ;  //_GUI 39,130
 //_Attributes Documentation=list
 Object ( List Out) ListOut( Variant In1, Variant In2) ;  //_GUI 34,80
 Object ( List Out) ListOut:A( Variant In1, Variant In2) ;  //_GUI 54,69
 Object ( LSB002 In) Input:R;  //_GUI 18,134
 //_Attributes Constant="*2"
 Object ( LSB002 In) Input:S;  //_GUI 18,137
 //_Attributes Constant="*1"
 Object ( List Out1) PackLSB( Variant In1, Variant In2
    , Variant In3) ;  //_GUI 24,130
 Object ( LSB002 In) Input:T;  //_GUI 18,131
 //_Attributes Constant="*3"
 Object ( Variant Out1, Variant LSB) ListPopLsb:A( Variant In1) ;  //_GUI 33,51
 //_Attributes Documentation=list
 Object ( Variant Out1, Variant LSB) ListPopLsb:B( Variant In1) ;  //_GUI 68,69
 //_Attributes Documentation=list
 Object ( Variant Out1, Variant LSB) ListPopLsb:C( Variant In1) ;  //_GUI 33,37
 //_Attributes Documentation=list
 Object ( Variant Out1, Variant Out11, Variant LSB) ListPopLsb:D
    ( Variant In1) ;  //_GUI 39,155
 //_Attributes Documentation=var
 Object ( LSB002 In) Input:U;  //_GUI 18,195
 //_Attributes Constant="*2"
 Object ( LSB002 In) Input:V;  //_GUI 18,198
 //_Attributes Constant="*1"
 Object ( List Out1) PackLSB:A( Variant In1, Variant In2
    , Variant In3) ;  //_GUI 24,191
 Object ( LSB002 In) Input:W;  //_GUI 18,192
 //_Attributes Constant="*3"
 Object ( Variant Out1, Variant Out11, Variant LSB) ListPopLsb:E
    ( Variant In1) ;  //_GUI 39,191
 //_Attributes Documentation=var
 Object ( List Out) ListOut:B( Variant In1, Variant In2) ;  //_GUI 19,79
 Object ( Variant Out1, Variant Out11, Variant LSB) ListPopLsb:F
    ( Variant In1) ;  //_GUI 39,167
 //_Attributes Documentation=var
 Object ( LSB002 In) Input:X;  //_GUI 33,169
 //_Attributes Constant="*1"
 Object ( Variant Out1, Variant Out11, Variant LSB) ListPopLsb:G
    ( Variant In1) ;  //_GUI 39,179
 //_Attributes Documentation=var
 Object ( LSB002 In) Input:Y;  //_GUI 18,180
 //_Attributes Constant="*2"
 Object ( LSB002 In) Input:Z;  //_GUI 18,183
 //_Attributes Constant="*1"
 Object ( LSB002 In) Input:a;  //_GUI 18,207
 //_Attributes Constant="*2"
 Object ( LSB002 In) Input:b;  //_GUI 18,210
 //_Attributes Constant="*1"
 Object ( LSB002 In) Input:c;  //_GUI 18,204
 //_Attributes Constant="*3"
 Object ( Variant Out1, Variant Out11, Variant LSB) ListPopLsb:H
    ( Variant In1) ;  //_GUI 39,203
 //_Attributes Documentation=var
 Object ( LSB002 In) Input:d;  //_GUI 18,213
 //_Attributes Constant="*0"
 Object ( List Out1) PackLSB:B( Variant In1, Variant In2
    , Variant In3, Variant In4) ;  //_GUI 24,203
 Object ( Variant Out1, Variant LSB) ListPopLsb:I( Variant In1) ;  //_GUI 39,142
 //_Attributes Documentation=list
 Object ( Variant Out1, Variant LSB) ListPopLsb:J( Variant In1) ;  //_GUI 33,13
 //_Attributes Documentation=list
 Object ( Variant Out1, Variant LSB) ListPopLsb:K( Variant In1) ;  //_GUI 33,24
 //_Attributes Documentation=list
 Object ( LSB002 In) Input:e;  //_GUI 18,146
 //_Attributes Constant="*2"
 Object ( LSB002 In) Input:f;  //_GUI 18,149
 //_Attributes Constant="*1"
 Object ( LSB002 In) Input:AA;  //_GUI 18,143
 //_Attributes Constant="*3"
 Object ( List Out1) PackMSB( Variant In1, Variant In2
    , Variant In3) ;  //_GUI 24,142
 Object ( LSB002 In) Input:BA;  //_GUI 18,121
 //_Attributes Constant="*2"
 Object ( List Out1) PackLSB:C( Variant In1, Variant In2
    , Variant In3) ;  //_GUI 19,37
 Object ( List Out) ListOut:C( Variant In1, Variant In2) ;  //_GUI 19,85
 Object ( Variant Out1, Variant LSB) ListPopLsb:L( Variant In1) ;  //_GUI 39,120
 //_Attributes Documentation=list
 Object ( Variant Out1, Variant LSB) ListPopLsb:M( Variant In1) ;  //_GUI 39,102
 //_Attributes Documentation=list
 Object ( List Out) ListOut:D( Variant In1, Variant In2) ;  //_GUI 19,24
 Object ( List Out1) PackMSB:A( Variant In1, Variant In2
    , Variant In3) ;  //_GUI 19,51
 Object ( Variant Out1, Variant LSB) ListPopLsb:N( Variant In1) ;  //_GUI 39,111
 //_Attributes Documentation=list
 Object ( List Out) ListOut:E( Variant In1, Variant In2) ;  //_GUI 19,73
 Object ( LSB002 In) Input:CA;  //_GUI 33,113
 //_Attributes Constant="*1"
 Object ( List Out) ListOut:F( Variant In1, Variant In2) ;  //_GUI 19,67
 Object ( List Out) ListOut:G( Variant In1, Variant In2) ;  //_GUI 34,68
 Object ( NULL Out1) NULL;  //_GUI 27,102
 Object ( NULL Out1) NULL:A;  //_GUI 27,155
 Object ( List Out) ListOut:H( Variant In1, Variant In2) ;  //_GUI 24,120
 Object ( List Out) ListOut:I( Variant In1, Variant In2) ;  //_GUI 24,179

 // Behavior Topology
 Output.0 = ListPopLsb:J.0;  
 Output:A.0 = ListPopLsb:J.1;  
 Output:B.0 = ListPopLsb:K.0;  
 Output:C.0 = ListPopLsb:K.1;  
 Output:D.0 = ListPopLsb:C.0;  
 Output:E.0 = ListPopLsb:C.1;  
 Output:F.0 = ListPopLsb:A.0;  
 Output:G.0 = ListPopLsb:A.1;  
 Output:H.0 = ListPopLsb:B.0;  
 Output:I.0 = ListPopLsb:B.1;  
 Output:J.0 = ListPopLsb:M.0;  
 Output:K.0 = ListPopLsb:M.1;  
 Output:L.0 = ListPopLsb:N.0;  
 Output:M.0 = ListPopLsb:N.1;  
 Output:N.0 = ListPopLsb:L.0;  
 Output:O.0 = ListPopLsb:L.1;  
 Output:P.0 = ListPopLsb.0;  
 Output:Q.0 = ListPopLsb.1;  
 Output:R.0 = ListPopLsb:I.0;  
 Output:S.0 = ListPopLsb:I.1;  
 Output:T.0 = ListPopLsb:D.0;  
 Output:U.0 = ListPopLsb:D.1;  
 Output:V.0 = ListPopLsb:D.2;  
 Output:W.0 = ListPopLsb:F.0;  
 Output:X.0 = ListPopLsb:F.1;  
 Output:Y.0 = ListPopLsb:F.2;  
 Output:Z.0 = ListPopLsb:G.0;  
 Output:a.0 = ListPopLsb:G.1;  
 Output:b.0 = ListPopLsb:G.2;  
 Output:c.0 = ListPopLsb:E.0;  
 Output:d.0 = ListPopLsb:E.1;  
 Output:e.0 = ListPopLsb:E.2;  
 Output:f.0 = ListPopLsb:H.0;  
 Output:AA.0 = ListPopLsb:H.1;  
 Output:BA.0 = ListPopLsb:H.2;  
 ListPopLsb.0 = PackLSB.0;  
 ListOut.0 = ListOut:C.0;  //_GUI 32,85, 32,88
 ListOut.1 = ListOut:B.0;  
 ListOut:A.0 = ListOut.0;  //_GUI 47,74, 47,83
 ListOut:A.1 = ListOut:G.0;  
 PackLSB.0 = Input:T.0;  
 PackLSB.1 = Input:R.0;  
 PackLSB.2 = Input:S.0;  
 ListPopLsb:A.0 = PackMSB:A.0;  
 ListPopLsb:B.0 = ListOut:A.0;  
 ListPopLsb:C.0 = PackLSB:C.0;  
 ListPopLsb:D.0 = NULL:A.0;  
 PackLSB:A.0 = Input:W.0;  
 PackLSB:A.1 = Input:U.0;  
 PackLSB:A.2 = Input:V.0;  
 ListPopLsb:E.0 = PackLSB:A.0;  
 ListOut:B.0 = Input:N.0;  
 ListOut:B.1 = Input:M.0;  
 ListPopLsb:F.0 = Input:X.0;  
 ListPopLsb:G.0 = ListOut:I.0;  
 ListPopLsb:H.0 = PackLSB:B.0;  
 PackLSB:B.0 = Input:c.0;  
 PackLSB:B.1 = Input:a.0;  
 PackLSB:B.2 = Input:b.0;  
 PackLSB:B.3 = Input:d.0;  
 ListPopLsb:I.0 = PackMSB.0;  
 ListPopLsb:J.0 = Input.0;  
 ListPopLsb:K.0 = ListOut:D.0;  
 PackMSB.0 = Input:AA.0;  
 PackMSB.1 = Input:e.0;  
 PackMSB.2 = Input:f.0;  
 PackLSB:C.0 = Input:C.0;  
 PackLSB:C.1 = Input:D.0;  
 PackLSB:C.2 = Input:E.0;  
 ListOut:C.0 = Input:P.0;  
 ListOut:C.1 = Input:O.0;  
 ListPopLsb:L.0 = ListOut:H.0;  
 ListPopLsb:M.0 = NULL.0;  
 ListOut:D.0 = Input:B.0;  
 ListOut:D.1 = Input:A.0;  
 PackMSB:A.0 = Input:F.0;  
 PackMSB:A.1 = Input:G.0;  
 PackMSB:A.2 = Input:H.0;  
 ListPopLsb:N.0 = Input:CA.0;  
 ListOut:E.0 = Input:L.0;  
 ListOut:E.1 = Input:K.0;  
 ListOut:F.0 = Input:J.0;  
 ListOut:F.1 = Input:I.0;  
 ListOut:G.0 = ListOut:E.0;  //_GUI 32,73, 32,76
 ListOut:G.1 = ListOut:F.0;  
 ListOut:H.0 = Input:Q.0;  
 ListOut:H.1 = Input:BA.0;  
 ListOut:I.0 = Input:Z.0;  
 ListOut:I.1 = Input:Y.0;  
}

Object ( Variant "M or Zero", Variant "K or L", Variant "H or I"
    , Variant "E F G or Zero", Variant "A B C or D", Variant "1 of 8", Variant "1 of 16") Ex_List_Mux_Sel
    ( LSB008 M, Bit Sel, LSB008 L, LSB008 K
    , Bit Sel, LSB008 J, LSB008 I, LSB008 H
    , Bit Sel, LSB008 G, LSB008 F, LSB008 E
    , LSB002 Sel, LSB008 D, LSB008 C, LSB008 B
    , LSB008 A, LSB002 Sel, LSB003 Sel, LSB004 Sel) 
//_Attributes TreeGroup=CoreLib_Examples\Multiplexors\Examples\Ex
{
 //_ Object Prototypes
 Object ( LSB008 M) Input;  //_GUI 35,12
 Object ( Bit Sel) Input:A;  //_GUI 35,15
 Object ( LSB008 L) Input:B;  //_GUI 24,26
 Object ( LSB008 K) Input:C;  //_GUI 24,29
 Object ( Bit Sel) Input:D;  //_GUI 35,34
 Object ( LSB008 J) Input:E;  //_GUI 22,43
 Object ( LSB008 I) Input:F;  //_GUI 22,46
 Object ( LSB008 H) Input:G;  //_GUI 22,49
 Object ( Bit Sel) Input:H;  //_GUI 34,55
 Object ( LSB008 G) Input:I;  //_GUI 22,62
 Object ( LSB008 F) Input:J;  //_GUI 22,65
 Object ( LSB008 E) Input:K;  //_GUI 22,68
 Object ( LSB002 Sel) Input:L;  //_GUI 34,74
 Object ( LSB008 D) Input:M;  //_GUI 22,83
 Object ( LSB008 C) Input:N;  //_GUI 22,86
 Object ( LSB008 B) Input:O;  //_GUI 22,89
 Object ( LSB008 A) Input:P;  //_GUI 22,92
 Object ( LSB002 Sel) Input:Q;  //_GUI 34,97
 Object ( LSB003 Sel) Input:R;  //_GUI 33,133
 Object ( LSB004 Sel) Input:S;  //_GUI 35,190
 Object Output( Variant "M or Zero") ;  //_GUI 57,13
 Object Output:A( Variant "K or L") ;  //_GUI 58,28
 Object Output:B( Variant "H or I") ;  //_GUI 58,45
 Object Output:C( Variant "E F G or Zero") ;  //_GUI 58,64
 Object Output:D( Variant "A B C or D") ;  //_GUI 58,85
 Object Output:E( Variant "1 of 8") ;  //_GUI 57,121
 Object Output:F( Variant "1 of 16") ;  //_GUI 59,178
 Object ( List Out) ListOut( Variant In1, Variant In2) ;  //_GUI 30,25
 Object ( List Out1) PackLSB( Variant In1, Variant In2
    , Variant In3, Variant In4, Variant In5, Variant In6
    , Variant In7, Variant In8) ;  //_GUI 27,103
 Object ( Variant Data) List_Mux_Sel( Variant Data, Variant Sel) ;  //_GUI 43,176
 //_Attributes Documentation=List/Var
 Object ( List Out1) PackLSB:A( Variant In1, Variant In2
    , Variant In3) ;  //_GUI 28,61
 Object ( Variant Data) List_Mux_Sel:A( Variant ListData, Bit Sel) ;  //_GUI 42,26
 //_Attributes Documentation=var/bit
 Object ( Variant Data) List_Mux_Sel:B( Variant ListData, Bit Sel) ;  //_GUI 42,43
 //_Attributes Documentation=var/bit
 Object ( List Out1) PackLSB:B( Variant In1, Variant In2
    , Variant In3, Variant In4, Variant In5, Variant In6
    , Variant In7, Variant In8, Variant In9, Variant In10
    , Variant In11, Variant In12, Variant In13, Variant In14
    , Variant In15, Variant In16) ;  //_GUI 29,139
 Object ( LSB008 In42) Input:T;  //_GUI 23,176
 //_Attributes Constant="*3"
 Object ( LSB008 In43) Input:U;  //_GUI 23,179
 //_Attributes Constant="*2"
 Object ( LSB008 In43) Input:V;  //_GUI 23,173
 //_Attributes Constant="*4"
 Object ( LSB008 In42) Input:W;  //_GUI 23,167
 //_Attributes Constant="*6"
 Object ( LSB008 In43) Input:X;  //_GUI 23,170
 //_Attributes Constant="*5"
 Object ( LSB008 In43) Input:Y;  //_GUI 23,164
 //_Attributes Constant="*7"
 Object ( LSB008 In42) Input:Z;  //_GUI 23,158
 //_Attributes Constant="*9"
 Object ( LSB008 In43) Input:a;  //_GUI 23,161
 //_Attributes Constant="*8"
 Object ( LSB008 In42) Input:b;  //_GUI 23,152
 //_Attributes Constant="*11"
 Object ( LSB008 In43) Input:c;  //_GUI 23,155
 //_Attributes Constant="*10"
 Object ( LSB008 In43) Input:d;  //_GUI 23,149
 //_Attributes Constant="*12"
 Object ( LSB008 In42) Input:e;  //_GUI 23,143
 //_Attributes Constant="*14"
 Object ( LSB008 In43) Input:f;  //_GUI 23,146
 //_Attributes Constant="*13"
 Object ( LSB008 In43) Input:AA;  //_GUI 23,140
 //_Attributes Constant="*15"
 Object ( LSB008 In42) Input:BA;  //_GUI 21,122
 //_Attributes Constant="*1"
 Object ( LSB008 In43) Input:CA;  //_GUI 21,125
 //_Attributes Constant="*0"
 Object ( LSB008 In42) Input:DA;  //_GUI 21,116
 //_Attributes Constant="*3"
 Object ( LSB008 In43) Input:EA;  //_GUI 21,119
 //_Attributes Constant="*2"
 Object ( LSB008 In43) Input:FA;  //_GUI 21,113
 //_Attributes Constant="*4"
 Object ( LSB008 In42) Input:GA;  //_GUI 21,107
 //_Attributes Constant="*6"
 Object ( LSB008 In43) Input:HA;  //_GUI 21,110
 //_Attributes Constant="*5"
 Object ( LSB008 In43) Input:IA;  //_GUI 21,104
 //_Attributes Constant="*7"
 Object ( List Out1) PackLSB:C( Variant In1, Variant In2
    , Variant In3) ;  //_GUI 28,42
 Object ( Variant Data) List_Mux_Sel:C( Variant Data, Variant Sel) ;  //_GUI 42,62
 //_Attributes Documentation=List/Var
 Object ( Variant Data) List_Mux_Sel:D( Variant Data, Variant Sel) ;  //_GUI 41,119
 //_Attributes Documentation=List/Var
 Object ( Variant Data) List_Mux_Sel:E( Variant ListData, Bit Sel) ;  //_GUI 41,11
 //_Attributes Documentation=var/bit
 Object ( List Out1) PackLSB:D( Variant In1, Variant In2
    , Variant In3, Variant In4) ;  //_GUI 28,82
 Object ( LSB008 In42) Input:JA;  //_GUI 23,182
 //_Attributes Constant="*1"
 Object ( Variant Data) List_Mux_Sel:F( Variant Data, Variant Sel) ;  //_GUI 42,83
 //_Attributes Documentation=List/Var
 Object ( LSB008 In43) Input:KA;  //_GUI 23,185
 //_Attributes Constant="*0"
 Object Text;  //_GUI 73,45,J ignored

 // Behavior Topology
 Output.0 = List_Mux_Sel:E.0;  
 Output:A.0 = List_Mux_Sel:A.0;  
 Output:B.0 = List_Mux_Sel:B.0;  
 Output:C.0 = List_Mux_Sel:C.0;  
 Output:D.0 = List_Mux_Sel:F.0;  
 Output:E.0 = List_Mux_Sel:D.0;  
 Output:F.0 = List_Mux_Sel.0;  
 ListOut.0 = Input:C.0;  
 ListOut.1 = Input:B.0;  
 PackLSB.0 = Input:IA.0;  
 PackLSB.1 = Input:GA.0;  
 PackLSB.2 = Input:HA.0;  
 PackLSB.3 = Input:FA.0;  
 PackLSB.4 = Input:DA.0;  
 PackLSB.5 = Input:EA.0;  
 PackLSB.6 = Input:BA.0;  
 PackLSB.7 = Input:CA.0;  
 List_Mux_Sel.0 = PackLSB:B.0;  //_GUI 42,178, 42,142
 List_Mux_Sel.1 = Input:S.0;  //_GUI 41,181, 41,191
 PackLSB:A.0 = Input:I.0;  
 PackLSB:A.1 = Input:J.0;  
 PackLSB:A.2 = Input:K.0;  
 List_Mux_Sel:A.0 = ListOut.0;  
 List_Mux_Sel:A.1 = Input:D.0;  //_GUI 41,31, 41,35
 List_Mux_Sel:B.0 = PackLSB:C.0;  
 List_Mux_Sel:B.1 = Input:H.0;  //_GUI 40,48, 40,56
 PackLSB:B.0 = Input:AA.0;  
 PackLSB:B.1 = Input:e.0;  
 PackLSB:B.2 = Input:f.0;  
 PackLSB:B.3 = Input:d.0;  
 PackLSB:B.4 = Input:b.0;  
 PackLSB:B.5 = Input:c.0;  
 PackLSB:B.6 = Input:Z.0;  
 PackLSB:B.7 = Input:a.0;  
 PackLSB:B.8 = Input:Y.0;  
 PackLSB:B.9 = Input:W.0;  
 PackLSB:B.10 = Input:X.0;  
 PackLSB:B.11 = Input:V.0;  
 PackLSB:B.12 = Input:T.0;  
 PackLSB:B.13 = Input:U.0;  
 PackLSB:B.14 = Input:JA.0;  
 PackLSB:B.15 = Input:KA.0;  
 PackLSB:C.0 = Input:E.0;  
 PackLSB:C.1 = Input:F.0;  
 PackLSB:C.2 = Input:G.0;  
 List_Mux_Sel:C.0 = PackLSB:A.0;  
 List_Mux_Sel:C.1 = Input:L.0;  //_GUI 40,67, 40,75
 List_Mux_Sel:D.0 = PackLSB.0;  //_GUI 40,121, 40,106
 List_Mux_Sel:D.1 = Input:R.0;  //_GUI 39,124, 39,134
 List_Mux_Sel:E.0 = Input.0;  
 List_Mux_Sel:E.1 = Input:A.0;  
 PackLSB:D.0 = Input:M.0;  
 PackLSB:D.1 = Input:N.0;  
 PackLSB:D.2 = Input:O.0;  
 PackLSB:D.3 = Input:P.0;  
 List_Mux_Sel:F.0 = PackLSB:D.0;  
 List_Mux_Sel:F.1 = Input:Q.0;  //_GUI 40,88, 40,98
}

Object ( Variant RdData, Variant WrRdyCnt, Bit WrBsy
    , Bit WrAlmBsy, Bit WrAlmBsyDly, Bit WrErr, Variant RdRdyCnt
    , Bit RdBsy, Bit RdAlmBsy, Bit RdAlmBsyDly, Bit RdErr
    , Variant Count) "Test FIFO_Basic"( MSB012 SWhole, MSB016 Fract, Fix32 WrData
    , Bit ClkG, Bit WrEn, Bit ClkG, Bit RdEn
    , Bit CLR, Bit EN) 
//_Attributes TreeGroup=CoreLib_Examples\Memory\Examples
{
 //_ Object Prototypes
 Object ( MSB012 SWhole) Input;  //_GUI 18,25
 Object ( MSB016 Fract) Input:A;  //_GUI 18,28
 Object ( Fix32 WrData) Input:B;  //_GUI 8,40
 Object ( Bit ClkG) Input:C;  //_GUI 61,47
 //_Attributes Resource=*Global
 Object ( Bit WrEn) Input:D;  //_GUI 28,49
 Object ( Bit ClkG) Input:E;  //_GUI 61,53
 //_Attributes Resource=*Global
 Object ( Bit RdEn) Input:F;  //_GUI 28,58
 Object ( Bit CLR) Input:G;  //_GUI 80,59
 Object ( Bit EN) Input:H;  //_GUI 72,95
 Object Output( Variant RdData) ;  //_GUI 153,38
 Object Output:A( Variant WrRdyCnt) ;  //_GUI 113,41
 Object Output:B( Bit WrBsy) ;  //_GUI 113,44
 Object Output:C( Bit WrAlmBsy) ;  //_GUI 113,47
 Object Output:D( Bit WrAlmBsyDly) ;  //_GUI 113,50
 Object Output:E( Bit WrErr) ;  //_GUI 113,53
 Object Output:F( Variant RdRdyCnt) ;  //_GUI 113,56
 Object Output:G( Bit RdBsy) ;  //_GUI 113,59
 Object Output:H( Bit RdAlmBsy) ;  //_GUI 113,62
 Object Output:I( Bit RdAlmBsyDly) ;  //_GUI 113,65
 Object Output:J( Bit RdErr) ;  //_GUI 113,68
 Object Output:K( Variant Count) ;  //_GUI 93,92
 Object ( Variant RdData, Variant WrRdyCnt, Bit WrBsy
    , Bit WrAlmBsy, Bit WrAlmBsyDly, Bit WrErr, Variant RdRdyCnt
    , Bit RdBsy, Bit RdAlmBsy, Bit RdAlmBsyDly, Bit RdErr) FIFO_Basic
    ( Variant WrData, Variant AddrBits, Variant BsyBits, Bit WrClk
    , Bit WrEn, Bit RdClk, Bit RdEn, Bit CLR) ;  //_GUI 90,37
 Object ( MSB004 AddrBits) Input:I;  //_GUI 80,41
 //_Attributes Constant="*0"
 Object ( MSB002 BsyBits) Input:J;  //_GUI 80,44
 //_Attributes Constant="*0"
 Object ( Variant Pulse) OneShot( Variant I, Bit ClkG) ;  //_GUI 38,57
 Object ( MSB020 CBy) Input:K;  //_GUI 73,89
 //_Attributes Constant="*1"
 Object ( Variant CO, Variant Count) Count( Variant CBy
    , Bit ClkG, Variant EN, Bit CLR) ;  //_GUI 79,88
 Object ( Variant Out1) DynamicOut( Variant In1) ;  //_GUI 22,38
 Object ( Variant Pulse) OneShot:A( Variant I, Bit ClkG) ;  //_GUI 38,48
 Object ( Fixed Out1) CollectFixed( Variant SWhole, Variant Fract) ;  //_GUI 24,24
 Object ( Bit OFL, Variant Out1) StaticOut( Variant Type
    , Variant Data) ;  //_GUI 138,34
 Object ( Fix32 Out1, Fix32 Out2, Fix32 Out3) Junction
    ( Fix32 In0) ;  //_GUI 14,40
 Object ( Bit OFL, Variant Out1) Convert( Variant Type
    , Variant Data) ;  //_GUI 43,36

 // Behavior Topology
 Output.0 = StaticOut.1;  
 Output:A.0 = FIFO_Basic.1;  
 Output:B.0 = FIFO_Basic.2;  
 Output:C.0 = FIFO_Basic.3;  
 Output:D.0 = FIFO_Basic.4;  
 Output:E.0 = FIFO_Basic.5;  
 Output:F.0 = FIFO_Basic.6;  
 Output:G.0 = FIFO_Basic.7;  
 Output:H.0 = FIFO_Basic.8;  
 Output:I.0 = FIFO_Basic.9;  
 Output:J.0 = FIFO_Basic.10;  
 Output:K.0 = Count.1;  
 FIFO_Basic.0 = Convert.1;  //_GUI 70,39, 70,41
 FIFO_Basic.1 = Input:I.0;  
 FIFO_Basic.2 = Input:J.0;  
 FIFO_Basic.3 = Input:C.0;  
 FIFO_Basic.4 = OneShot:A.0;  
 FIFO_Basic.5 = Input:E.0;  
 FIFO_Basic.6 = OneShot.0;  //_GUI 66,57, 66,60
 FIFO_Basic.7 = Input:G.0;  
 OneShot.0 = Input:F.0;  
 Count.0 = Input:K.0;  
 Count.2 = Input:H.0;  
 DynamicOut.0 = Junction.1;  
 OneShot:A.0 = Input:D.0;  
 CollectFixed.0 = Input.0;  
 CollectFixed.1 = Input:A.0;  
 StaticOut.0 = Junction.0;  //_GUI 138,15, 15,15
 StaticOut.1 = FIFO_Basic.0;  
 Junction.0 = Input:B.0;  
 Convert.0 = CollectFixed.0;  //_GUI 40,38, 40,27
 Convert.1 = DynamicOut.0;  
}

Object BitlengthComparison_Examples
//_Attributes TreeGroup=CoreLib_Examples\Grammar/Datasets\Examples,Icon=Example
{
// Description:
// Bit Length Object Examples
//
// Date:
// 11/16/ 2004
 //_ Object Prototypes
 Object Text;  //_GUI 53,3,Bitlength Comparison      ExamplesArial,20,8388608,1
 Object Text;  //_GUI 48,18,To view and compile an example, double-click the preferred object from the options that follow.Arial,12,255,1
 Object ( Bit "bit/NULL", Bit "NULL/bit", Bit "NULL/NULL"
    , Bit "bit/bit", Bit "LSB3/MSB3", Bit "LSB4/MSB3", Bit "LSB4/BIN3ListBit"
    , Bit "LSB3/MSB4") Ex_BitA_Eq_BitB( Bit A, NULL B, NULL A
    , Bit B, NULL A, NULL B, Bit A
    , Bit B, LSB003 A, MSB003 B, LSB004 A
    , MSB003 B, LSB004 A, Bit In14, Bit In15
    , Bit In16, LSB003 A, MSB004 B) ;  //_GUI 13,38
 Object ( Bit "bit/NULL", Bit "NULL/bit", Bit "NULL/NULL"
    , Bit "bit/bit", Bit "LSB3/MSB3", Bit "LSB4/MSB3", Bit "LSB4/BIN3ListBit"
    , Bit "LSB3/MSB4") Ex_BitA_Ne_BitB( Bit A, NULL B, NULL A
    , Bit B, NULL A, NULL B, Bit A
    , Bit B, LSB003 A, MSB003 B, LSB004 A
    , MSB003 B, LSB004 A, Bit In14, Bit In15
    , Bit In16, LSB003 A, MSB004 B) ;  //_GUI 39,38
 Object ( Bit "bit/NULL", Bit "NULL/bit", Bit "NULL/NULL"
    , Bit "bit/bit", Bit "LSB3/MSB3", Bit "LSB4/MSB3", Bit "LSB4/BIN3ListBit"
    , Bit "LSB3/MSB4") Ex_BitA_Gt_BitB( Bit A, NULL B, NULL A
    , Bit B, NULL A, NULL B, Bit A
    , Bit B, LSB003 A, MSB003 B, LSB004 A
    , MSB003 B, LSB004 A, Bit In14, Bit In15
    , Bit In16, LSB003 A, MSB004 B) ;  //_GUI 64,39
 Object ( Bit "bit/NULL", Bit "NULL/bit", Bit "NULL/NULL"
    , Bit "bit/bit", Bit "LSB3/MSB3", Bit "LSB4/MSB3", Bit "LSB4/BIN3ListBit"
    , Bit "LSB3/MSB4") Ex_BitA_Lt_BitB( Bit A, NULL B, NULL A
    , Bit B, NULL A, NULL B, Bit A
    , Bit B, LSB003 A, MSB003 B, LSB004 A
    , MSB003 B, LSB004 A, Bit In14, Bit In15
    , Bit In16, LSB003 A, MSB004 B) ;  //_GUI 88,39
 Object ( Bit "bit/NULL", Bit "NULL/bit", Bit "NULL/NULL"
    , Bit "bit/bit", Bit "LSB3/MSB3", Bit "LSB4/MSB3", Bit "LSB4/BIN3ListBit"
    , Bit "LSB3/MSB4") Ex_BitA_Ge_BitB( Bit A, NULL B, NULL A
    , Bit B, NULL A, NULL B, Bit A
    , Bit B, LSB003 A, MSB003 B, LSB004 A
    , MSB003 B, LSB004 A, Bit In14, Bit In15
    , Bit In16, LSB003 A, MSB004 B) ;  //_GUI 113,39
 Object ( Bit "bit/NULL", Bit "NULL/bit", Bit "NULL/NULL"
    , Bit "bit/bit", Bit "LSB3/MSB3", Bit "LSB4/MSB3", Bit "LSB4/BIN3ListBit"
    , Bit "LSB3/MSB4") Ex_BitA_Le_BitB( Bit A, NULL B, NULL A
    , Bit B, NULL A, NULL B, Bit A
    , Bit B, LSB003 A, MSB003 B, LSB004 A
    , MSB003 B, LSB004 A, Bit In14, Bit In15
    , Bit In16, LSB003 A, MSB004 B) ;  //_GUI 137,39

 // Behavior Topology
}

Object ( Variant "bit/NULL", Variant "NULL/bit", Variant "NULL/NULL"
    , Variant "bit/bit", Variant "LSB3/MSB3", Variant "LSB3/MSB6", Variant "LSB6/MSB3"
    , Variant "LSB15/MSB3", Variant "B3LOfB2LOfBit/B2LOfBit") Ex_BitA_Add_BitB( Bit A, NULL B
    , NULL A, Bit B, NULL A, NULL B
    , Bit A, Bit B, LSB003 A, MSB003 B
    , LSB003 A, MSB006 B, LSB006 A, MSB003 B
    , LSB015 A, MSB003 B, Bit In14, Bit In15
    , Bit In14, Bit In15, Bit In14, Bit In15) 
//_Attributes TreeGroup=CoreLib_Examples\Grammar/Datasets\Examples\Ex
{
 //_ Object Prototypes
 Object ( Bit A) Input;  //_GUI 47,20
 Object ( NULL B) Input:A;  //_GUI 47,23
 Object ( NULL A) Input:B;  //_GUI 47,29
 Object ( Bit B) Input:C;  //_GUI 47,32
 Object ( NULL A) Input:D;  //_GUI 47,39
 Object ( NULL B) Input:E;  //_GUI 47,42
 Object ( Bit A) Input:F;  //_GUI 47,50
 Object ( Bit B) Input:G;  //_GUI 47,53
 Object ( LSB003 A) Input:H;  //_GUI 47,60
 Object ( MSB003 B) Input:I;  //_GUI 47,63
 Object ( LSB003 A) Input:J;  //_GUI 47,69
 Object ( MSB006 B) Input:K;  //_GUI 47,72
 Object ( LSB006 A) Input:L;  //_GUI 47,78
 Object ( MSB003 B) Input:M;  //_GUI 47,81
 Object ( LSB015 A) Input:N;  //_GUI 47,87
 Object ( MSB003 B) Input:O;  //_GUI 47,90
 Object ( Bit In14) Input:P;  //_GUI 17,100
 Object ( Bit In15) Input:Q;  //_GUI 17,103
 Object ( Bit In14) Input:R;  //_GUI 17,108
 Object ( Bit In15) Input:S;  //_GUI 17,111
 Object ( Bit In14) Input:T;  //_GUI 17,117
 Object ( Bit In15) Input:U;  //_GUI 17,120
 Object Output( Variant "bit/NULL") ;  //_GUI 83,21
 Object Output:A( Variant "NULL/bit") ;  //_GUI 83,30
 Object Output:B( Variant "NULL/NULL") ;  //_GUI 83,40
 Object Output:C( Variant "bit/bit") ;  //_GUI 83,51
 Object Output:D( Variant "LSB3/MSB3") ;  //_GUI 83,61
 Object Output:E( Variant "LSB3/MSB6") ;  //_GUI 83,70
 Object Output:F( Variant "LSB6/MSB3") ;  //_GUI 83,79
 Object Output:G( Variant "LSB15/MSB3") ;  //_GUI 83,88
 Object Output:H( Variant "B3LOfB2LOfBit/B2LOfBit") ;  //_GUI 83,108
 Object ( List Out1) PackBIN( Variant In1, Variant In2) ;  //_GUI 23,99
 Object ( List Out1) PackBIN:A( Variant In1, Variant In2) ;  //_GUI 23,107
 Object ( List Out1) PackBIN:B( Variant In1, Variant In2) ;  //_GUI 23,116
 Object ( List Out1, List Out2, List Out3) Junction
    ( List In0) ;  //_GUI 36,118
 Object ( List Out1) PackBIN:C( Variant In1, Variant In2
    , Variant In3) ;  //_GUI 40,105
 Object ( Variant Out1) BitLength( Variant Type) ;  //_GUI 70,19
 Object ( Variant Out1) BitLength:A( Variant Type) ;  //_GUI 70,28
 Object ( Variant Out1) BitLength:B( Variant Type) ;  //_GUI 70,38
 Object ( Variant Out1) BitLength:C( Variant Type) ;  //_GUI 70,49
 Object ( Variant Out1) BitLength:D( Variant Type) ;  //_GUI 70,59
 Object ( Variant Out1) BitLength:E( Variant Type) ;  //_GUI 70,68
 Object ( Variant Out1) BitLength:F( Variant Type) ;  //_GUI 70,77
 Object ( Variant Out1) BitLength:G( Variant Type) ;  //_GUI 70,86
 Object ( Variant Out1) BitLength:H( Variant Type) ;  //_GUI 70,106
 Object ( Variant N) BitA_Add_BitB( Variant A, Variant B) ;  //_GUI 53,19
 Object ( Variant N) BitA_Add_BitB:A( Variant A, Variant B) ;  //_GUI 53,28
 Object ( Variant N) BitA_Add_BitB:B( Variant A, Variant B) ;  //_GUI 53,38
 Object ( Variant N) BitA_Add_BitB:C( Variant A, Variant B) ;  //_GUI 53,49
 Object ( Variant N) BitA_Add_BitB:D( Variant A, Variant B) ;  //_GUI 53,59
 Object ( Variant N) BitA_Add_BitB:E( Variant A, Variant B) ;  //_GUI 53,68
 Object ( Variant N) BitA_Add_BitB:F( Variant A, Variant B) ;  //_GUI 53,77
 Object ( Variant N) BitA_Add_BitB:G( Variant A, Variant B) ;  //_GUI 53,86
 Object ( Variant N) BitA_Add_BitB:H( Variant A, Variant B) ;  //_GUI 53,106
 Object Text;  //_GUI 50,1,BitA_Add_BitB ExampleArial,10,255,1
 Object Text;  //_GUI 40,9,BitA_Add_BitB produces a zero data set whose BitLength is BitLength A + BitLength B.Arial,8,0,1

 // Behavior Topology
 Output.0 = BitLength.0;  
 Output:A.0 = BitLength:A.0;  
 Output:B.0 = BitLength:B.0;  
 Output:C.0 = BitLength:C.0;  
 Output:D.0 = BitLength:D.0;  
 Output:E.0 = BitLength:E.0;  
 Output:F.0 = BitLength:F.0;  
 Output:G.0 = BitLength:G.0;  
 Output:H.0 = BitLength:H.0;  
 PackBIN.0 = Input:P.0;  
 PackBIN.1 = Input:Q.0;  
 PackBIN:A.0 = Input:R.0;  
 PackBIN:A.1 = Input:S.0;  
 PackBIN:B.0 = Input:T.0;  
 PackBIN:B.1 = Input:U.0;  
 Junction.0 = PackBIN:B.0;  
 PackBIN:C.0 = PackBIN.0;  //_GUI 37,107, 37,102
 PackBIN:C.1 = PackBIN:A.0;  
 PackBIN:C.2 = Junction.0;  //_GUI 37,113
 BitLength.0 = BitA_Add_BitB.0;  
 BitLength:A.0 = BitA_Add_BitB:A.0;  
 BitLength:B.0 = BitA_Add_BitB:B.0;  
 BitLength:C.0 = BitA_Add_BitB:C.0;  
 BitLength:D.0 = BitA_Add_BitB:D.0;  
 BitLength:E.0 = BitA_Add_BitB:E.0;  
 BitLength:F.0 = BitA_Add_BitB:F.0;  
 BitLength:G.0 = BitA_Add_BitB:G.0;  
 BitLength:H.0 = BitA_Add_BitB:H.0;  
 BitA_Add_BitB.0 = Input.0;  
 BitA_Add_BitB.1 = Input:A.0;  
 BitA_Add_BitB:A.0 = Input:B.0;  
 BitA_Add_BitB:A.1 = Input:C.0;  
 BitA_Add_BitB:B.0 = Input:D.0;  
 BitA_Add_BitB:B.1 = Input:E.0;  
 BitA_Add_BitB:C.0 = Input:F.0;  
 BitA_Add_BitB:C.1 = Input:G.0;  
 BitA_Add_BitB:D.0 = Input:H.0;  
 BitA_Add_BitB:D.1 = Input:I.0;  
 BitA_Add_BitB:E.0 = Input:J.0;  
 BitA_Add_BitB:E.1 = Input:K.0;  
 BitA_Add_BitB:F.0 = Input:L.0;  
 BitA_Add_BitB:F.1 = Input:M.0;  
 BitA_Add_BitB:G.0 = Input:N.0;  
 BitA_Add_BitB:G.1 = Input:O.0;  
 BitA_Add_BitB:H.0 = PackBIN:C.0;  
 BitA_Add_BitB:H.1 = Junction.1;  //_GUI 53,119
}

Object ( Bit "bit/NULL", Bit "NULL/bit", Bit "NULL/NULL"
    , Bit "bit/bit", Bit "LSB3/MSB3", Bit "LSB4/MSB3", Bit "LSB4/BIN3ListBit"
    , Bit "LSB3/MSB4") Ex_BitA_Ge_BitB( Bit A, NULL B, NULL A
    , Bit B, NULL A, NULL B, Bit A
    , Bit B, LSB003 A, MSB003 B, LSB004 A
    , MSB003 B, LSB004 A, Bit In14, Bit In15
    , Bit In16, LSB003 A, MSB004 B) 
//_Attributes TreeGroup=CoreLib_Examples\Grammar/Datasets\Examples\Ex
{
 //_ Object Prototypes
 Object ( Bit A) Input;  //_GUI 35,12
 Object ( NULL B) Input:A;  //_GUI 35,15
 Object ( NULL A) Input:B;  //_GUI 35,21
 Object ( Bit B) Input:C;  //_GUI 35,24
 Object ( NULL A) Input:D;  //_GUI 35,31
 Object ( NULL B) Input:E;  //_GUI 35,34
 Object ( Bit A) Input:F;  //_GUI 35,42
 Object ( Bit B) Input:G;  //_GUI 35,45
 Object ( LSB003 A) Input:H;  //_GUI 35,52
 Object ( MSB003 B) Input:I;  //_GUI 35,55
 Object ( LSB004 A) Input:J;  //_GUI 35,62
 Object ( MSB003 B) Input:K;  //_GUI 35,65
 Object ( LSB004 A) Input:L;  //_GUI 35,73
 Object ( Bit In14) Input:M;  //_GUI 21,75
 Object ( Bit In15) Input:N;  //_GUI 21,78
 Object ( Bit In16) Input:O;  //_GUI 21,81
 Object ( LSB003 A) Input:P;  //_GUI 35,89
 Object ( MSB004 B) Input:Q;  //_GUI 35,92
 Object Output( Bit "bit/NULL") ;  //_GUI 57,13
 Object Output:A( Bit "NULL/bit") ;  //_GUI 57,22
 Object Output:B( Bit "NULL/NULL") ;  //_GUI 57,32
 Object Output:C( Bit "bit/bit") ;  //_GUI 57,43
 Object Output:D( Bit "LSB3/MSB3") ;  //_GUI 57,53
 Object Output:E( Bit "LSB4/MSB3") ;  //_GUI 57,63
 Object Output:F( Bit "LSB4/BIN3ListBit") ;  //_GUI 57,74
 Object Output:G( Bit "LSB3/MSB4") ;  //_GUI 57,90
 Object ( List Out1) PackBIN( Variant In1, Variant In2
    , Variant In3) ;  //_GUI 27,74
 Object ( Bit Out1) BitA_Ge_BitB( Variant A, Variant B) ;  //_GUI 41,11
 Object ( Bit Out1) BitA_Ge_BitB:A( Variant A, Variant B) ;  //_GUI 41,20
 Object ( Bit Out1) BitA_Ge_BitB:B( Variant A, Variant B) ;  //_GUI 41,30
 Object ( Bit Out1) BitA_Ge_BitB:C( Variant A, Variant B) ;  //_GUI 41,41
 Object ( Bit Out1) BitA_Ge_BitB:D( Variant A, Variant B) ;  //_GUI 41,51
 Object ( Bit Out1) BitA_Ge_BitB:E( Variant A, Variant B) ;  //_GUI 41,61
 Object ( Bit Out1) BitA_Ge_BitB:F( Variant A, Variant B) ;  //_GUI 41,72
 Object ( Bit Out1) BitA_Ge_BitB:G( Variant A, Variant B) ;  //_GUI 41,88

 // Behavior Topology
 Output.0 = BitA_Ge_BitB.0;  
 Output:A.0 = BitA_Ge_BitB:A.0;  
 Output:B.0 = BitA_Ge_BitB:B.0;  
 Output:C.0 = BitA_Ge_BitB:C.0;  
 Output:D.0 = BitA_Ge_BitB:D.0;  
 Output:E.0 = BitA_Ge_BitB:E.0;  
 Output:F.0 = BitA_Ge_BitB:F.0;  
 Output:G.0 = BitA_Ge_BitB:G.0;  
 PackBIN.0 = Input:M.0;  
 PackBIN.1 = Input:N.0;  
 PackBIN.2 = Input:O.0;  
 BitA_Ge_BitB.0 = Input.0;  
 BitA_Ge_BitB.1 = Input:A.0;  
 BitA_Ge_BitB:A.0 = Input:B.0;  
 BitA_Ge_BitB:A.1 = Input:C.0;  
 BitA_Ge_BitB:B.0 = Input:D.0;  
 BitA_Ge_BitB:B.1 = Input:E.0;  
 BitA_Ge_BitB:C.0 = Input:F.0;  
 BitA_Ge_BitB:C.1 = Input:G.0;  
 BitA_Ge_BitB:D.0 = Input:H.0;  
 BitA_Ge_BitB:D.1 = Input:I.0;  
 BitA_Ge_BitB:E.0 = Input:J.0;  
 BitA_Ge_BitB:E.1 = Input:K.0;  
 BitA_Ge_BitB:F.0 = Input:L.0;  
 BitA_Ge_BitB:F.1 = PackBIN.0;  
 BitA_Ge_BitB:G.0 = Input:P.0;  
 BitA_Ge_BitB:G.1 = Input:Q.0;  
}

Object ( Bit "bit/NULL", Bit "NULL/bit", Bit "NULL/NULL"
    , Bit "bit/bit", Bit "LSB3/MSB3", Bit "LSB4/MSB3", Bit "LSB4/BIN3ListBit"
    , Bit "LSB3/MSB4") Ex_BitA_Le_BitB( Bit A, NULL B, NULL A
    , Bit B, NULL A, NULL B, Bit A
    , Bit B, LSB003 A, MSB003 B, LSB004 A
    , MSB003 B, LSB004 A, Bit In14, Bit In15
    , Bit In16, LSB003 A, MSB004 B) 
//_Attributes TreeGroup=CoreLib_Examples\Grammar/Datasets\Examples\Ex
{
 //_ Object Prototypes
 Object ( Bit A) Input;  //_GUI 35,12
 Object ( NULL B) Input:A;  //_GUI 35,15
 Object ( NULL A) Input:B;  //_GUI 35,21
 Object ( Bit B) Input:C;  //_GUI 35,24
 Object ( NULL A) Input:D;  //_GUI 35,31
 Object ( NULL B) Input:E;  //_GUI 35,34
 Object ( Bit A) Input:F;  //_GUI 35,42
 Object ( Bit B) Input:G;  //_GUI 35,45
 Object ( LSB003 A) Input:H;  //_GUI 35,52
 Object ( MSB003 B) Input:I;  //_GUI 35,55
 Object ( LSB004 A) Input:J;  //_GUI 35,62
 Object ( MSB003 B) Input:K;  //_GUI 35,65
 Object ( LSB004 A) Input:L;  //_GUI 35,73
 Object ( Bit In14) Input:M;  //_GUI 21,75
 Object ( Bit In15) Input:N;  //_GUI 21,78
 Object ( Bit In16) Input:O;  //_GUI 21,81
 Object ( LSB003 A) Input:P;  //_GUI 35,89
 Object ( MSB004 B) Input:Q;  //_GUI 35,92
 Object Output( Bit "bit/NULL") ;  //_GUI 57,13
 Object Output:A( Bit "NULL/bit") ;  //_GUI 57,22
 Object Output:B( Bit "NULL/NULL") ;  //_GUI 57,32
 Object Output:C( Bit "bit/bit") ;  //_GUI 57,43
 Object Output:D( Bit "LSB3/MSB3") ;  //_GUI 57,53
 Object Output:E( Bit "LSB4/MSB3") ;  //_GUI 57,63
 Object Output:F( Bit "LSB4/BIN3ListBit") ;  //_GUI 57,74
 Object Output:G( Bit "LSB3/MSB4") ;  //_GUI 57,90
 Object ( List Out1) PackBIN( Variant In1, Variant In2
    , Variant In3) ;  //_GUI 27,74
 Object ( Bit Out1) BitA_Le_BitB( Variant A, Variant B) ;  //_GUI 41,11
 Object ( Bit Out1) BitA_Le_BitB:A( Variant A, Variant B) ;  //_GUI 41,20
 Object ( Bit Out1) BitA_Le_BitB:B( Variant A, Variant B) ;  //_GUI 41,30
 Object ( Bit Out1) BitA_Le_BitB:C( Variant A, Variant B) ;  //_GUI 41,41
 Object ( Bit Out1) BitA_Le_BitB:D( Variant A, Variant B) ;  //_GUI 41,51
 Object ( Bit Out1) BitA_Le_BitB:E( Variant A, Variant B) ;  //_GUI 41,61
 Object ( Bit Out1) BitA_Le_BitB:F( Variant A, Variant B) ;  //_GUI 41,72
 Object ( Bit Out1) BitA_Le_BitB:G( Variant A, Variant B) ;  //_GUI 41,88

 // Behavior Topology
 Output.0 = BitA_Le_BitB.0;  
 Output:A.0 = BitA_Le_BitB:A.0;  
 Output:B.0 = BitA_Le_BitB:B.0;  
 Output:C.0 = BitA_Le_BitB:C.0;  
 Output:D.0 = BitA_Le_BitB:D.0;  
 Output:E.0 = BitA_Le_BitB:E.0;  
 Output:F.0 = BitA_Le_BitB:F.0;  
 Output:G.0 = BitA_Le_BitB:G.0;  
 PackBIN.0 = Input:M.0;  
 PackBIN.1 = Input:N.0;  
 PackBIN.2 = Input:O.0;  
 BitA_Le_BitB.0 = Input.0;  
 BitA_Le_BitB.1 = Input:A.0;  
 BitA_Le_BitB:A.0 = Input:B.0;  
 BitA_Le_BitB:A.1 = Input:C.0;  
 BitA_Le_BitB:B.0 = Input:D.0;  
 BitA_Le_BitB:B.1 = Input:E.0;  
 BitA_Le_BitB:C.0 = Input:F.0;  
 BitA_Le_BitB:C.1 = Input:G.0;  
 BitA_Le_BitB:D.0 = Input:H.0;  
 BitA_Le_BitB:D.1 = Input:I.0;  
 BitA_Le_BitB:E.0 = Input:J.0;  
 BitA_Le_BitB:E.1 = Input:K.0;  
 BitA_Le_BitB:F.0 = Input:L.0;  
 BitA_Le_BitB:F.1 = PackBIN.0;  
 BitA_Le_BitB:G.0 = Input:P.0;  
 BitA_Le_BitB:G.1 = Input:Q.0;  
}

Object ( Bit "bit/NULL", Bit "NULL/bit", Bit "NULL/NULL"
    , Bit "bit/bit", Bit "LSB3/MSB3", Bit "LSB4/MSB3", Bit "LSB4/BIN3ListBit"
    , Bit "LSB3/MSB4") Ex_BitA_Gt_BitB( Bit A, NULL B, NULL A
    , Bit B, NULL A, NULL B, Bit A
    , Bit B, LSB003 A, MSB003 B, LSB004 A
    , MSB003 B, LSB004 A, Bit In14, Bit In15
    , Bit In16, LSB003 A, MSB004 B) 
//_Attributes TreeGroup=CoreLib_Examples\Grammar/Datasets\Examples\Ex
{
 //_ Object Prototypes
 Object ( Bit A) Input;  //_GUI 35,12
 Object ( NULL B) Input:A;  //_GUI 35,15
 Object ( NULL A) Input:B;  //_GUI 35,21
 Object ( Bit B) Input:C;  //_GUI 35,24
 Object ( NULL A) Input:D;  //_GUI 35,31
 Object ( NULL B) Input:E;  //_GUI 35,34
 Object ( Bit A) Input:F;  //_GUI 35,42
 Object ( Bit B) Input:G;  //_GUI 35,45
 Object ( LSB003 A) Input:H;  //_GUI 35,52
 Object ( MSB003 B) Input:I;  //_GUI 35,55
 Object ( LSB004 A) Input:J;  //_GUI 35,62
 Object ( MSB003 B) Input:K;  //_GUI 35,65
 Object ( LSB004 A) Input:L;  //_GUI 35,73
 Object ( Bit In14) Input:M;  //_GUI 21,75
 Object ( Bit In15) Input:N;  //_GUI 21,78
 Object ( Bit In16) Input:O;  //_GUI 21,81
 Object ( LSB003 A) Input:P;  //_GUI 35,89
 Object ( MSB004 B) Input:Q;  //_GUI 35,92
 Object Output( Bit "bit/NULL") ;  //_GUI 57,13
 Object Output:A( Bit "NULL/bit") ;  //_GUI 57,22
 Object Output:B( Bit "NULL/NULL") ;  //_GUI 57,32
 Object Output:C( Bit "bit/bit") ;  //_GUI 57,43
 Object Output:D( Bit "LSB3/MSB3") ;  //_GUI 57,53
 Object Output:E( Bit "LSB4/MSB3") ;  //_GUI 57,63
 Object Output:F( Bit "LSB4/BIN3ListBit") ;  //_GUI 57,74
 Object Output:G( Bit "LSB3/MSB4") ;  //_GUI 57,90
 Object ( List Out1) PackBIN( Variant In1, Variant In2
    , Variant In3) ;  //_GUI 27,74
 Object ( Bit Out1) BitA_Gt_BitB( Variant A, Variant B) ;  //_GUI 41,11
 Object ( Bit Out1) BitA_Gt_BitB:A( Variant A, Variant B) ;  //_GUI 41,20
 Object ( Bit Out1) BitA_Gt_BitB:B( Variant A, Variant B) ;  //_GUI 41,30
 Object ( Bit Out1) BitA_Gt_BitB:C( Variant A, Variant B) ;  //_GUI 41,41
 Object ( Bit Out1) BitA_Gt_BitB:D( Variant A, Variant B) ;  //_GUI 41,51
 Object ( Bit Out1) BitA_Gt_BitB:E( Variant A, Variant B) ;  //_GUI 41,61
 Object ( Bit Out1) BitA_Gt_BitB:F( Variant A, Variant B) ;  //_GUI 41,72
 Object ( Bit Out1) BitA_Gt_BitB:G( Variant A, Variant B) ;  //_GUI 41,88

 // Behavior Topology
 Output.0 = BitA_Gt_BitB.0;  
 Output:A.0 = BitA_Gt_BitB:A.0;  
 Output:B.0 = BitA_Gt_BitB:B.0;  
 Output:C.0 = BitA_Gt_BitB:C.0;  
 Output:D.0 = BitA_Gt_BitB:D.0;  
 Output:E.0 = BitA_Gt_BitB:E.0;  
 Output:F.0 = BitA_Gt_BitB:F.0;  
 Output:G.0 = BitA_Gt_BitB:G.0;  
 PackBIN.0 = Input:M.0;  
 PackBIN.1 = Input:N.0;  
 PackBIN.2 = Input:O.0;  
 BitA_Gt_BitB.0 = Input.0;  
 BitA_Gt_BitB.1 = Input:A.0;  
 BitA_Gt_BitB:A.0 = Input:B.0;  
 BitA_Gt_BitB:A.1 = Input:C.0;  
 BitA_Gt_BitB:B.0 = Input:D.0;  
 BitA_Gt_BitB:B.1 = Input:E.0;  
 BitA_Gt_BitB:C.0 = Input:F.0;  
 BitA_Gt_BitB:C.1 = Input:G.0;  
 BitA_Gt_BitB:D.0 = Input:H.0;  
 BitA_Gt_BitB:D.1 = Input:I.0;  
 BitA_Gt_BitB:E.0 = Input:J.0;  
 BitA_Gt_BitB:E.1 = Input:K.0;  
 BitA_Gt_BitB:F.0 = Input:L.0;  
 BitA_Gt_BitB:F.1 = PackBIN.0;  
 BitA_Gt_BitB:G.0 = Input:P.0;  
 BitA_Gt_BitB:G.1 = Input:Q.0;  
}

Object ( Bit "bit/NULL", Bit "NULL/bit", Bit "NULL/NULL"
    , Bit "bit/bit", Bit "LSB3/MSB3", Bit "LSB4/MSB3", Bit "LSB4/BIN3ListBit"
    , Bit "LSB3/MSB4") Ex_BitA_Lt_BitB( Bit A, NULL B, NULL A
    , Bit B, NULL A, NULL B, Bit A
    , Bit B, LSB003 A, MSB003 B, LSB004 A
    , MSB003 B, LSB004 A, Bit In14, Bit In15
    , Bit In16, LSB003 A, MSB004 B) 
//_Attributes TreeGroup=CoreLib_Examples\Grammar/Datasets\Examples\Ex
{
 //_ Object Prototypes
 Object ( Bit A) Input;  //_GUI 35,12
 Object ( NULL B) Input:A;  //_GUI 35,15
 Object ( NULL A) Input:B;  //_GUI 35,21
 Object ( Bit B) Input:C;  //_GUI 35,24
 Object ( NULL A) Input:D;  //_GUI 35,31
 Object ( NULL B) Input:E;  //_GUI 35,34
 Object ( Bit A) Input:F;  //_GUI 35,42
 Object ( Bit B) Input:G;  //_GUI 35,45
 Object ( LSB003 A) Input:H;  //_GUI 35,52
 Object ( MSB003 B) Input:I;  //_GUI 35,55
 Object ( LSB004 A) Input:J;  //_GUI 35,62
 Object ( MSB003 B) Input:K;  //_GUI 35,65
 Object ( LSB004 A) Input:L;  //_GUI 35,73
 Object ( Bit In14) Input:M;  //_GUI 21,75
 Object ( Bit In15) Input:N;  //_GUI 21,78
 Object ( Bit In16) Input:O;  //_GUI 21,81
 Object ( LSB003 A) Input:P;  //_GUI 35,89
 Object ( MSB004 B) Input:Q;  //_GUI 35,92
 Object Output( Bit "bit/NULL") ;  //_GUI 57,13
 Object Output:A( Bit "NULL/bit") ;  //_GUI 57,22
 Object Output:B( Bit "NULL/NULL") ;  //_GUI 57,32
 Object Output:C( Bit "bit/bit") ;  //_GUI 57,43
 Object Output:D( Bit "LSB3/MSB3") ;  //_GUI 57,53
 Object Output:E( Bit "LSB4/MSB3") ;  //_GUI 57,63
 Object Output:F( Bit "LSB4/BIN3ListBit") ;  //_GUI 57,74
 Object Output:G( Bit "LSB3/MSB4") ;  //_GUI 57,90
 Object ( List Out1) PackBIN( Variant In1, Variant In2
    , Variant In3) ;  //_GUI 27,74
 Object ( Bit Out1) BitA_Lt_BitB( Variant A, Variant B) ;  //_GUI 41,11
 Object ( Bit Out1) BitA_Lt_BitB:A( Variant A, Variant B) ;  //_GUI 41,20
 Object ( Bit Out1) BitA_Lt_BitB:B( Variant A, Variant B) ;  //_GUI 41,30
 Object ( Bit Out1) BitA_Lt_BitB:C( Variant A, Variant B) ;  //_GUI 41,41
 Object ( Bit Out1) BitA_Lt_BitB:D( Variant A, Variant B) ;  //_GUI 41,51
 Object ( Bit Out1) BitA_Lt_BitB:E( Variant A, Variant B) ;  //_GUI 41,61
 Object ( Bit Out1) BitA_Lt_BitB:F( Variant A, Variant B) ;  //_GUI 41,72
 Object ( Bit Out1) BitA_Lt_BitB:G( Variant A, Variant B) ;  //_GUI 41,88

 // Behavior Topology
 Output.0 = BitA_Lt_BitB.0;  
 Output:A.0 = BitA_Lt_BitB:A.0;  
 Output:B.0 = BitA_Lt_BitB:B.0;  
 Output:C.0 = BitA_Lt_BitB:C.0;  
 Output:D.0 = BitA_Lt_BitB:D.0;  
 Output:E.0 = BitA_Lt_BitB:E.0;  
 Output:F.0 = BitA_Lt_BitB:F.0;  
 Output:G.0 = BitA_Lt_BitB:G.0;  
 PackBIN.0 = Input:M.0;  
 PackBIN.1 = Input:N.0;  
 PackBIN.2 = Input:O.0;  
 BitA_Lt_BitB.0 = Input.0;  
 BitA_Lt_BitB.1 = Input:A.0;  
 BitA_Lt_BitB:A.0 = Input:B.0;  
 BitA_Lt_BitB:A.1 = Input:C.0;  
 BitA_Lt_BitB:B.0 = Input:D.0;  
 BitA_Lt_BitB:B.1 = Input:E.0;  
 BitA_Lt_BitB:C.0 = Input:F.0;  
 BitA_Lt_BitB:C.1 = Input:G.0;  
 BitA_Lt_BitB:D.0 = Input:H.0;  
 BitA_Lt_BitB:D.1 = Input:I.0;  
 BitA_Lt_BitB:E.0 = Input:J.0;  
 BitA_Lt_BitB:E.1 = Input:K.0;  
 BitA_Lt_BitB:F.0 = Input:L.0;  
 BitA_Lt_BitB:F.1 = PackBIN.0;  
 BitA_Lt_BitB:G.0 = Input:P.0;  
 BitA_Lt_BitB:G.1 = Input:Q.0;  
}

Object ( Bit "bit/NULL", Bit "NULL/bit", Bit "NULL/NULL"
    , Bit "bit/bit", Bit "LSB3/MSB3", Bit "LSB4/MSB3", Bit "LSB4/BIN3ListBit"
    , Bit "LSB3/MSB4") Ex_BitA_Eq_BitB( Bit A, NULL B, NULL A
    , Bit B, NULL A, NULL B, Bit A
    , Bit B, LSB003 A, MSB003 B, LSB004 A
    , MSB003 B, LSB004 A, Bit In14, Bit In15
    , Bit In16, LSB003 A, MSB004 B) 
//_Attributes TreeGroup=CoreLib_Examples\Grammar/Datasets\Examples\Ex
{
 //_ Object Prototypes
 Object ( Bit A) Input;  //_GUI 35,12
 Object ( NULL B) Input:A;  //_GUI 35,15
 Object ( NULL A) Input:B;  //_GUI 35,21
 Object ( Bit B) Input:C;  //_GUI 35,24
 Object ( NULL A) Input:D;  //_GUI 35,31
 Object ( NULL B) Input:E;  //_GUI 35,34
 Object ( Bit A) Input:F;  //_GUI 35,42
 Object ( Bit B) Input:G;  //_GUI 35,45
 Object ( LSB003 A) Input:H;  //_GUI 35,52
 Object ( MSB003 B) Input:I;  //_GUI 35,55
 Object ( LSB004 A) Input:J;  //_GUI 35,62
 Object ( MSB003 B) Input:K;  //_GUI 35,65
 Object ( LSB004 A) Input:L;  //_GUI 35,73
 Object ( Bit In14) Input:M;  //_GUI 21,75
 Object ( Bit In15) Input:N;  //_GUI 21,78
 Object ( Bit In16) Input:O;  //_GUI 21,81
 Object ( LSB003 A) Input:P;  //_GUI 35,89
 Object ( MSB004 B) Input:Q;  //_GUI 35,92
 Object Output( Bit "bit/NULL") ;  //_GUI 57,13
 Object Output:A( Bit "NULL/bit") ;  //_GUI 57,22
 Object Output:B( Bit "NULL/NULL") ;  //_GUI 57,32
 Object Output:C( Bit "bit/bit") ;  //_GUI 57,43
 Object Output:D( Bit "LSB3/MSB3") ;  //_GUI 57,53
 Object Output:E( Bit "LSB4/MSB3") ;  //_GUI 57,63
 Object Output:F( Bit "LSB4/BIN3ListBit") ;  //_GUI 57,74
 Object Output:G( Bit "LSB3/MSB4") ;  //_GUI 57,90
 Object ( List Out1) PackBIN( Variant In1, Variant In2
    , Variant In3) ;  //_GUI 27,74
 Object ( Bit Out1) BitA_Eq_BitB( Variant A, Variant B) ;  //_GUI 41,11
 Object ( Bit Out1) BitA_Eq_BitB:A( Variant A, Variant B) ;  //_GUI 41,20
 Object ( Bit Out1) BitA_Eq_BitB:B( Variant A, Variant B) ;  //_GUI 41,30
 Object ( Bit Out1) BitA_Eq_BitB:C( Variant A, Variant B) ;  //_GUI 41,41
 Object ( Bit Out1) BitA_Eq_BitB:D( Variant A, Variant B) ;  //_GUI 41,51
 Object ( Bit Out1) BitA_Eq_BitB:E( Variant A, Variant B) ;  //_GUI 41,61
 Object ( Bit Out1) BitA_Eq_BitB:F( Variant A, Variant B) ;  //_GUI 41,72
 Object ( Bit Out1) BitA_Eq_BitB:G( Variant A, Variant B) ;  //_GUI 41,88

 // Behavior Topology
 Output.0 = BitA_Eq_BitB.0;  
 Output:A.0 = BitA_Eq_BitB:A.0;  
 Output:B.0 = BitA_Eq_BitB:B.0;  
 Output:C.0 = BitA_Eq_BitB:C.0;  
 Output:D.0 = BitA_Eq_BitB:D.0;  
 Output:E.0 = BitA_Eq_BitB:E.0;  
 Output:F.0 = BitA_Eq_BitB:F.0;  
 Output:G.0 = BitA_Eq_BitB:G.0;  
 PackBIN.0 = Input:M.0;  
 PackBIN.1 = Input:N.0;  
 PackBIN.2 = Input:O.0;  
 BitA_Eq_BitB.0 = Input.0;  
 BitA_Eq_BitB.1 = Input:A.0;  
 BitA_Eq_BitB:A.0 = Input:B.0;  
 BitA_Eq_BitB:A.1 = Input:C.0;  
 BitA_Eq_BitB:B.0 = Input:D.0;  
 BitA_Eq_BitB:B.1 = Input:E.0;  
 BitA_Eq_BitB:C.0 = Input:F.0;  
 BitA_Eq_BitB:C.1 = Input:G.0;  
 BitA_Eq_BitB:D.0 = Input:H.0;  
 BitA_Eq_BitB:D.1 = Input:I.0;  
 BitA_Eq_BitB:E.0 = Input:J.0;  
 BitA_Eq_BitB:E.1 = Input:K.0;  
 BitA_Eq_BitB:F.0 = Input:L.0;  
 BitA_Eq_BitB:F.1 = PackBIN.0;  
 BitA_Eq_BitB:G.0 = Input:P.0;  
 BitA_Eq_BitB:G.1 = Input:Q.0;  
}

Object ( Bit "bit/NULL", Bit "NULL/bit", Bit "NULL/NULL"
    , Bit "bit/bit", Bit "LSB3/MSB3", Bit "LSB4/MSB3", Bit "LSB4/BIN3ListBit"
    , Bit "LSB3/MSB4") Ex_BitA_Ne_BitB( Bit A, NULL B, NULL A
    , Bit B, NULL A, NULL B, Bit A
    , Bit B, LSB003 A, MSB003 B, LSB004 A
    , MSB003 B, LSB004 A, Bit In14, Bit In15
    , Bit In16, LSB003 A, MSB004 B) 
//_Attributes TreeGroup=CoreLib_Examples\Grammar/Datasets\Examples\Ex
{
 //_ Object Prototypes
 Object ( Bit A) Input;  //_GUI 35,12
 Object ( NULL B) Input:A;  //_GUI 35,15
 Object ( NULL A) Input:B;  //_GUI 35,21
 Object ( Bit B) Input:C;  //_GUI 35,24
 Object ( NULL A) Input:D;  //_GUI 35,31
 Object ( NULL B) Input:E;  //_GUI 35,34
 Object ( Bit A) Input:F;  //_GUI 35,42
 Object ( Bit B) Input:G;  //_GUI 35,45
 Object ( LSB003 A) Input:H;  //_GUI 35,52
 Object ( MSB003 B) Input:I;  //_GUI 35,55
 Object ( LSB004 A) Input:J;  //_GUI 35,62
 Object ( MSB003 B) Input:K;  //_GUI 35,65
 Object ( LSB004 A) Input:L;  //_GUI 35,73
 Object ( Bit In14) Input:M;  //_GUI 21,75
 Object ( Bit In15) Input:N;  //_GUI 21,78
 Object ( Bit In16) Input:O;  //_GUI 21,81
 Object ( LSB003 A) Input:P;  //_GUI 35,89
 Object ( MSB004 B) Input:Q;  //_GUI 35,92
 Object Output( Bit "bit/NULL") ;  //_GUI 57,13
 Object Output:A( Bit "NULL/bit") ;  //_GUI 57,22
 Object Output:B( Bit "NULL/NULL") ;  //_GUI 57,32
 Object Output:C( Bit "bit/bit") ;  //_GUI 57,43
 Object Output:D( Bit "LSB3/MSB3") ;  //_GUI 57,53
 Object Output:E( Bit "LSB4/MSB3") ;  //_GUI 57,63
 Object Output:F( Bit "LSB4/BIN3ListBit") ;  //_GUI 57,74
 Object Output:G( Bit "LSB3/MSB4") ;  //_GUI 57,90
 Object ( List Out1) PackBIN( Variant In1, Variant In2
    , Variant In3) ;  //_GUI 27,74
 Object ( Bit Out1) BitA_Ne_BitB( Variant A, Variant B) ;  //_GUI 41,11
 Object ( Bit Out1) BitA_Ne_BitB:A( Variant A, Variant B) ;  //_GUI 41,20
 Object ( Bit Out1) BitA_Ne_BitB:B( Variant A, Variant B) ;  //_GUI 41,30
 Object ( Bit Out1) BitA_Ne_BitB:C( Variant A, Variant B) ;  //_GUI 41,41
 Object ( Bit Out1) BitA_Ne_BitB:D( Variant A, Variant B) ;  //_GUI 41,51
 Object ( Bit Out1) BitA_Ne_BitB:E( Variant A, Variant B) ;  //_GUI 41,61
 Object ( Bit Out1) BitA_Ne_BitB:F( Variant A, Variant B) ;  //_GUI 41,72
 Object ( Bit Out1) BitA_Ne_BitB:G( Variant A, Variant B) ;  //_GUI 41,88

 // Behavior Topology
 Output.0 = BitA_Ne_BitB.0;  
 Output:A.0 = BitA_Ne_BitB:A.0;  
 Output:B.0 = BitA_Ne_BitB:B.0;  
 Output:C.0 = BitA_Ne_BitB:C.0;  
 Output:D.0 = BitA_Ne_BitB:D.0;  
 Output:E.0 = BitA_Ne_BitB:E.0;  
 Output:F.0 = BitA_Ne_BitB:F.0;  
 Output:G.0 = BitA_Ne_BitB:G.0;  
 PackBIN.0 = Input:M.0;  
 PackBIN.1 = Input:N.0;  
 PackBIN.2 = Input:O.0;  
 BitA_Ne_BitB.0 = Input.0;  
 BitA_Ne_BitB.1 = Input:A.0;  
 BitA_Ne_BitB:A.0 = Input:B.0;  
 BitA_Ne_BitB:A.1 = Input:C.0;  
 BitA_Ne_BitB:B.0 = Input:D.0;  
 BitA_Ne_BitB:B.1 = Input:E.0;  
 BitA_Ne_BitB:C.0 = Input:F.0;  
 BitA_Ne_BitB:C.1 = Input:G.0;  
 BitA_Ne_BitB:D.0 = Input:H.0;  
 BitA_Ne_BitB:D.1 = Input:I.0;  
 BitA_Ne_BitB:E.0 = Input:J.0;  
 BitA_Ne_BitB:E.1 = Input:K.0;  
 BitA_Ne_BitB:F.0 = Input:L.0;  
 BitA_Ne_BitB:F.1 = PackBIN.0;  
 BitA_Ne_BitB:G.0 = Input:P.0;  
 BitA_Ne_BitB:G.1 = Input:Q.0;  
}

Object ( Variant "bit/NULL", Variant "NULL/bit", Variant "NULL/NULL"
    , Variant "bit/bit", Variant "LSB3/MSB3", Variant "LSB3/MSB6", Variant "LSB6/MSB3"
    , Variant "LSB15/MSB3", Variant "B3LOfB2LOfBit/B2LOfBit") Ex_BitA_Sub_BitB( Bit A, NULL B
    , NULL A, Bit B, NULL A, NULL B
    , Bit A, Bit B, LSB003 A, MSB003 B
    , LSB003 A, MSB006 B, LSB006 A, MSB003 B
    , LSB015 A, MSB003 B, Bit In14, Bit In15
    , Bit In14, Bit In15, Bit In14, Bit In15) 
//_Attributes TreeGroup=CoreLib_Examples\Grammar/Datasets\Examples\Ex
{
 //_ Object Prototypes
 Object ( Bit A) Input;  //_GUI 46,12
 Object ( NULL B) Input:A;  //_GUI 46,15
 Object ( NULL A) Input:B;  //_GUI 46,21
 Object ( Bit B) Input:C;  //_GUI 46,24
 Object ( NULL A) Input:D;  //_GUI 46,31
 Object ( NULL B) Input:E;  //_GUI 46,34
 Object ( Bit A) Input:F;  //_GUI 46,42
 Object ( Bit B) Input:G;  //_GUI 46,45
 Object ( LSB003 A) Input:H;  //_GUI 46,52
 Object ( MSB003 B) Input:I;  //_GUI 46,55
 Object ( LSB003 A) Input:J;  //_GUI 46,61
 Object ( MSB006 B) Input:K;  //_GUI 46,64
 Object ( LSB006 A) Input:L;  //_GUI 46,70
 Object ( MSB003 B) Input:M;  //_GUI 46,73
 Object ( LSB015 A) Input:N;  //_GUI 46,79
 Object ( MSB003 B) Input:O;  //_GUI 46,82
 Object ( Bit In14) Input:P;  //_GUI 16,92
 Object ( Bit In15) Input:Q;  //_GUI 16,95
 Object ( Bit In14) Input:R;  //_GUI 16,100
 Object ( Bit In15) Input:S;  //_GUI 16,103
 Object ( Bit In14) Input:T;  //_GUI 16,109
 Object ( Bit In15) Input:U;  //_GUI 16,112
 Object Output( Variant "bit/NULL") ;  //_GUI 82,13
 Object Output:A( Variant "NULL/bit") ;  //_GUI 82,22
 Object Output:B( Variant "NULL/NULL") ;  //_GUI 82,32
 Object Output:C( Variant "bit/bit") ;  //_GUI 82,43
 Object Output:D( Variant "LSB3/MSB3") ;  //_GUI 82,53
 Object Output:E( Variant "LSB3/MSB6") ;  //_GUI 82,62
 Object Output:F( Variant "LSB6/MSB3") ;  //_GUI 82,71
 Object Output:G( Variant "LSB15/MSB3") ;  //_GUI 82,80
 Object Output:H( Variant "B3LOfB2LOfBit/B2LOfBit") ;  //_GUI 82,100
 Object ( List Out1) PackBIN( Variant In1, Variant In2) ;  //_GUI 22,91
 Object ( List Out1) PackBIN:A( Variant In1, Variant In2) ;  //_GUI 22,99
 Object ( List Out1) PackBIN:B( Variant In1, Variant In2) ;  //_GUI 22,108
 Object ( List Out1, List Out2, List Out3) Junction
    ( List In0) ;  //_GUI 35,110
 Object ( List Out1) PackBIN:C( Variant In1, Variant In2
    , Variant In3) ;  //_GUI 39,97
 Object ( Variant Out1) BitLength( Variant Type) ;  //_GUI 69,11
 Object ( Variant Out1) BitLength:A( Variant Type) ;  //_GUI 69,20
 Object ( Variant Out1) BitLength:B( Variant Type) ;  //_GUI 69,30
 Object ( Variant Out1) BitLength:C( Variant Type) ;  //_GUI 69,41
 Object ( Variant Out1) BitLength:D( Variant Type) ;  //_GUI 69,51
 Object ( Variant Out1) BitLength:E( Variant Type) ;  //_GUI 69,60
 Object ( Variant Out1) BitLength:F( Variant Type) ;  //_GUI 69,69
 Object ( Variant Out1) BitLength:G( Variant Type) ;  //_GUI 69,78
 Object ( Variant Out1) BitLength:H( Variant Type) ;  //_GUI 69,98
 Object ( Variant N) BitA_Sub_BitB( Variant A, Variant B) ;  //_GUI 52,11
 Object ( Variant N) BitA_Sub_BitB:A( Variant A, Variant B) ;  //_GUI 52,20
 Object ( Variant N) BitA_Sub_BitB:B( Variant A, Variant B) ;  //_GUI 52,30
 Object ( Variant N) BitA_Sub_BitB:C( Variant A, Variant B) ;  //_GUI 52,41
 Object ( Variant N) BitA_Sub_BitB:D( Variant A, Variant B) ;  //_GUI 52,51
 Object ( Variant N) BitA_Sub_BitB:E( Variant A, Variant B) ;  //_GUI 52,60
 Object ( Variant N) BitA_Sub_BitB:F( Variant A, Variant B) ;  //_GUI 52,69
 Object ( Variant N) BitA_Sub_BitB:G( Variant A, Variant B) ;  //_GUI 52,78
 Object ( Variant N) BitA_Sub_BitB:H( Variant A, Variant B) ;  //_GUI 52,98
 Object Text;  //_GUI 105,23,Produces a user trap "Can't represent negative bits"
 Object Text;  //_GUI 104,61,Produces a user trap "Can't represent negative bits"

 // Behavior Topology
 Output.0 = BitLength.0;  
 Output:A.0 = BitLength:A.0;  
 Output:B.0 = BitLength:B.0;  
 Output:C.0 = BitLength:C.0;  
 Output:D.0 = BitLength:D.0;  
 Output:E.0 = BitLength:E.0;  
 Output:F.0 = BitLength:F.0;  
 Output:G.0 = BitLength:G.0;  
 Output:H.0 = BitLength:H.0;  
 PackBIN.0 = Input:P.0;  
 PackBIN.1 = Input:Q.0;  
 PackBIN:A.0 = Input:R.0;  
 PackBIN:A.1 = Input:S.0;  
 PackBIN:B.0 = Input:T.0;  
 PackBIN:B.1 = Input:U.0;  
 Junction.0 = PackBIN:B.0;  
 PackBIN:C.0 = PackBIN.0;  //_GUI 36,99, 36,94
 PackBIN:C.1 = PackBIN:A.0;  
 PackBIN:C.2 = Junction.0;  //_GUI 36,105
 BitLength.0 = BitA_Sub_BitB.0;  
 BitLength:A.0 = BitA_Sub_BitB:A.0;  
 BitLength:B.0 = BitA_Sub_BitB:B.0;  
 BitLength:C.0 = BitA_Sub_BitB:C.0;  
 BitLength:D.0 = BitA_Sub_BitB:D.0;  
 BitLength:E.0 = BitA_Sub_BitB:E.0;  
 BitLength:F.0 = BitA_Sub_BitB:F.0;  
 BitLength:G.0 = BitA_Sub_BitB:G.0;  
 BitLength:H.0 = BitA_Sub_BitB:H.0;  
 BitA_Sub_BitB.0 = Input.0;  
 BitA_Sub_BitB.1 = Input:A.0;  
 BitA_Sub_BitB:A.0 = Input:B.0;  
 BitA_Sub_BitB:A.1 = Input:C.0;  
 BitA_Sub_BitB:B.0 = Input:D.0;  
 BitA_Sub_BitB:B.1 = Input:E.0;  
 BitA_Sub_BitB:C.0 = Input:F.0;  
 BitA_Sub_BitB:C.1 = Input:G.0;  
 BitA_Sub_BitB:D.0 = Input:H.0;  
 BitA_Sub_BitB:D.1 = Input:I.0;  
 BitA_Sub_BitB:E.0 = Input:J.0;  
 BitA_Sub_BitB:E.1 = Input:K.0;  
 BitA_Sub_BitB:F.0 = Input:L.0;  
 BitA_Sub_BitB:F.1 = Input:M.0;  
 BitA_Sub_BitB:G.0 = Input:N.0;  
 BitA_Sub_BitB:G.1 = Input:O.0;  
 BitA_Sub_BitB:H.0 = PackBIN:C.0;  
 BitA_Sub_BitB:H.1 = Junction.1;  //_GUI 52,111
}

Object ( Variant "Selected Data", Variant ORed_Data) Ex_List_Mux( LSB003 D
    , LSB003 C, LSB003 B, LSB003 A, LSB002 Sel
    , LSB003 Sel) 
//_Attributes TreeGroup=CoreLib_Examples\Multiplexors\Examples\Ex
{
 //_ Object Prototypes
 Object ( LSB003 D) Input;  //_GUI 34,14
 Object ( LSB003 C) Input:A;  //_GUI 34,17
 Object ( LSB003 B) Input:B;  //_GUI 34,20
 Object ( LSB003 A) Input:C;  //_GUI 34,23
 Object ( LSB002 Sel) Input:D;  //_GUI 28,30
 Object ( LSB003 Sel) Input:E;  //_GUI 53,56
 Object Output( Variant "Selected Data") ;  //_GUI 74,16
 Object Output:A( Variant ORed_Data) ;  //_GUI 73,42
 //_Attributes WidgetHex=True,WidgetWidth=144,WidgetHeight=50
 Object ( LSB012 In) Input:F;  //_GUI 33,43
 //_Attributes Constant="*0X0F0"
 Object ( LSB012 In) Input:G;  //_GUI 33,40
 //_Attributes Constant="*0XF00"
 Object ( LSB012 In) Input:H;  //_GUI 33,46
 //_Attributes Constant="*0X00F"
 Object ( Variant Data) List_Mux( Variant Data, Variant Sel) ;  //_GUI 62,14
 //_Attributes Documentation=Leaf
 Object ( List Out1) PackLSB( Variant In1, Variant In2
    , Variant In3) ;  //_GUI 39,39
 Object ( Variant Out1) LSB( Variant In1) ;  //_GUI 49,28
 Object ( List Out1) PackLSB:A( Variant In1, Variant In2
    , Variant In3, Variant In4) ;  //_GUI 40,13
 Object ( Variant Data) List_Mux:A( Variant Data, Variant Sel) ;  //_GUI 61,40
 //_Attributes Documentation=Leaf
 Object Text;  //_GUI 93,42,Note how the inputs are ORed as multiple select bits are enabled.
 Object ( Variant Mask) NumToMask( Variant Num) ;  //_GUI 34,28

 // Behavior Topology
 Output.0 = List_Mux.0;  
 Output:A.0 = List_Mux:A.0;  
 List_Mux.0 = PackLSB:A.0;  
 List_Mux.1 = LSB.0;  //_GUI 61,19, 61,31
 PackLSB.0 = Input:G.0;  
 PackLSB.1 = Input:F.0;  
 PackLSB.2 = Input:H.0;  
 LSB.0 = NumToMask.0;  
 PackLSB:A.0 = Input.0;  
 PackLSB:A.1 = Input:A.0;  
 PackLSB:A.2 = Input:B.0;  
 PackLSB:A.3 = Input:C.0;  
 List_Mux:A.0 = PackLSB.0;  
 List_Mux:A.1 = Input:E.0;  //_GUI 60,45, 60,57
 NumToMask.0 = Input:D.0;  
}

Object ( Variant Data, Variant EnabledData, Variant StageMask
    , Bit Done, Bit Busy) "Ex_Serial->Parallel_Clr"( LSB004 Data, Bit ClkG
    , Bit AClr, Bit Go, Bit Wait) 
//_Attributes TreeGroup=CoreLib_Examples\Shifts\Examples\Ex
{
 //_ Object Prototypes
 Object ( LSB004 Data) Input;  //_GUI 26,50
 Object ( Bit ClkG) Input:A;  //_GUI 71,51
 Object ( Bit AClr) Input:B;  //_GUI 71,54
 Object ( Bit Go) Input:C;  //_GUI 71,57
 Object ( Bit Wait) Input:D;  //_GUI 110,68
 Object Output( Variant Data) ;  //_GUI 144,40
 Object Output:A( Variant EnabledData) ;  //_GUI 144,46
 Object Output:B( Variant StageMask) ;  //_GUI 144,55
 Object Output:C( Bit Done) ;  //_GUI 136,60
 Object Output:D( Bit Busy) ;  //_GUI 90,69
 Object ( List Out) ListOut( Variant In1, Variant In2) ;  //_GUI 36,46
 Object ( LSB004 Data) Input:E;  //_GUI 26,47
 //_Attributes Constant="*2"
 Object ( LSB004 Data) Input:F;  //_GUI 26,42
 //_Attributes Constant="*3"
 Object ( LSB004 Data) Input:G;  //_GUI 26,39
 //_Attributes Constant="*4"
 Object ( LSB004 Data) Input:H;  //_GUI 26,34
 //_Attributes Constant="*5"
 Object ( LSB004 Data) Input:I;  //_GUI 26,31
 //_Attributes Constant="*6"
 Object ( LSB004 Data) Input:J;  //_GUI 26,26
 //_Attributes Constant="*7"
 Object ( LSB004 Data) Input:K;  //_GUI 26,23
 //_Attributes Constant="*8"
 Object ( LSB004 Data) Input:L;  //_GUI 26,18
 //_Attributes Constant="*9"
 Object ( LSB004 Data) Input:M;  //_GUI 26,15
 //_Attributes Constant="*10"
 Object ( LSB004 Out1, LSB004 Out2, LSB004 Out3) Junction
    ( LSB004 In0) ;  //_GUI 32,50
 Object ( List Out1) PackMSB( Variant In1, Variant In2
    , Variant In3, Variant In4, Variant In5) ;  //_GUI 58,15
 Object ( Variant Q) RegEn( Variant D, Bit ClkG
    , Variant EN) ;  //_GUI 126,44
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:A
    ( Bit In0) ;  //_GUI 82,51
 Object ( List Out) ListOut:A( Variant In1, Variant In2) ;  //_GUI 36,14
 Object ( List Out) ListOut:B( Variant In1, Variant In2) ;  //_GUI 36,38
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:B
    ( Variant In0) ;  //_GUI 113,45
 Object ( List Out) ListOut:C( Variant In1, Variant In2) ;  //_GUI 36,22
 Object ( List Out) ListOut:D( Variant In1, Variant In2) ;  //_GUI 36,30
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:C
    ( Bit In0) ;  //_GUI 120,57
 Object ( Variant P_Data, Variant S_Type, Variant StageMsk
    , Bit Done, Bit Busy) "Serial->Parallel_Clr"( Variant S_Data, Variant P_Type
    , Bit ClkG, Bit AClr, Bit Go, Bit Wait) ;  //_GUI 90,44

 // Behavior Topology
 Output.0 = Junction:B.0;  //_GUI 114,41
 Output:A.0 = RegEn.0;  
 Output:B.0 = "Serial->Parallel_Clr".2;  //_GUI 116,56, 116,52
 Output:C.0 = Junction:C.2;  //_GUI 121,61
 Output:D.0 = "Serial->Parallel_Clr".4;  
 ListOut.0 = Junction.1;  
 ListOut.1 = Input:E.0;  
 Junction.0 = Input.0;  
 PackMSB.0 = ListOut:A.0;  
 PackMSB.1 = ListOut:C.0;  //_GUI 49,20, 49,25
 PackMSB.2 = ListOut:D.0;  //_GUI 51,23, 51,33
 PackMSB.3 = ListOut:B.0;  //_GUI 53,26, 53,41
 PackMSB.4 = ListOut.0;  //_GUI 55,29, 55,49
 RegEn.0 = Junction:B.1;  
 RegEn.1 = Junction:A.0;  //_GUI 122,49, 122,39, 83,39
 RegEn.2 = Junction:C.0;  //_GUI 121,52
 Junction:A.0 = Input:A.0;  
 ListOut:A.0 = Input:L.0;  
 ListOut:A.1 = Input:M.0;  
 ListOut:B.0 = Input:F.0;  
 ListOut:B.1 = Input:G.0;  
 Junction:B.0 = "Serial->Parallel_Clr".0;  
 ListOut:C.0 = Input:J.0;  
 ListOut:C.1 = Input:K.0;  
 ListOut:D.0 = Input:H.0;  
 ListOut:D.1 = Input:I.0;  
 Junction:C.0 = "Serial->Parallel_Clr".3;  
 "Serial->Parallel_Clr".0 = Junction.2;  //_GUI 63,46, 63,58, 33,58
 "Serial->Parallel_Clr".1 = PackMSB.0;  //_GUI 76,49, 76,18
 "Serial->Parallel_Clr".2 = Junction:A.1;  
 "Serial->Parallel_Clr".3 = Input:B.0;  
 "Serial->Parallel_Clr".4 = Input:C.0;  
 "Serial->Parallel_Clr".5 = Input:D.0;  //_GUI 117,61, 117,69
}

Object ( Variant Data, Variant EnabledData, Variant StageMask
    , Bit Done, Bit Busy) "Ex_Parallel->Serial_Clr"( LSB004 Data, Bit ClkG
    , Bit AClr, Bit Go, Bit Wait) 
//_Attributes TreeGroup=CoreLib_Examples\Shifts\Examples\Ex
{
 //_ Object Prototypes
 Object ( LSB004 Data) Input;  //_GUI 26,50
 Object ( Bit ClkG) Input:A;  //_GUI 71,51
 Object ( Bit AClr) Input:B;  //_GUI 71,54
 Object ( Bit Go) Input:C;  //_GUI 71,57
 Object ( Bit Wait) Input:D;  //_GUI 110,68
 Object Output( Variant Data) ;  //_GUI 144,40
 Object Output:A( Variant EnabledData) ;  //_GUI 144,46
 Object Output:B( Variant StageMask) ;  //_GUI 144,55
 Object Output:C( Bit Done) ;  //_GUI 136,60
 Object Output:D( Bit Busy) ;  //_GUI 90,69
 Object ( List Out) ListOut( Variant In1, Variant In2) ;  //_GUI 36,46
 Object ( LSB004 Data) Input:E;  //_GUI 26,47
 //_Attributes Constant="*2"
 Object ( LSB004 Data) Input:F;  //_GUI 26,42
 //_Attributes Constant="*3"
 Object ( LSB004 Data) Input:G;  //_GUI 26,39
 //_Attributes Constant="*4"
 Object ( LSB004 Data) Input:H;  //_GUI 26,34
 //_Attributes Constant="*5"
 Object ( LSB004 Data) Input:I;  //_GUI 26,31
 //_Attributes Constant="*6"
 Object ( LSB004 Data) Input:J;  //_GUI 26,26
 //_Attributes Constant="*7"
 Object ( LSB004 Data) Input:K;  //_GUI 26,23
 //_Attributes Constant="*8"
 Object ( LSB004 Data) Input:L;  //_GUI 26,18
 //_Attributes Constant="*9"
 Object ( LSB004 Data) Input:M;  //_GUI 26,15
 //_Attributes Constant="*10"
 Object ( LSB004 Out1, LSB004 Out2, LSB004 Out3) Junction
    ( LSB004 In0) ;  //_GUI 32,50
 Object ( List Out1) PackMSB( Variant In1, Variant In2
    , Variant In3, Variant In4, Variant In5) ;  //_GUI 58,15
 Object ( Variant Q) RegEn( Variant D, Bit ClkG
    , Variant EN) ;  //_GUI 126,44
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:A
    ( Bit In0) ;  //_GUI 82,51
 Object ( List Out) ListOut:A( Variant In1, Variant In2) ;  //_GUI 36,14
 Object ( List Out) ListOut:B( Variant In1, Variant In2) ;  //_GUI 36,38
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:B
    ( Variant In0) ;  //_GUI 113,45
 Object ( List Out) ListOut:C( Variant In1, Variant In2) ;  //_GUI 36,22
 Object ( List Out) ListOut:D( Variant In1, Variant In2) ;  //_GUI 36,30
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:C
    ( Bit In0) ;  //_GUI 120,57
 Object ( Variant S_Data, Variant P_Type, Variant StageMsk
    , Bit Done, Bit Busy) "Parallel->Serial_Clr"( Variant P_Data, Variant S_Type
    , Bit ClkG, Bit AClr, Bit Go, Bit Wait) ;  //_GUI 90,44

 // Behavior Topology
 Output.0 = Junction:B.0;  //_GUI 114,41
 Output:A.0 = RegEn.0;  
 Output:B.0 = "Parallel->Serial_Clr".2;  //_GUI 116,56, 116,52
 Output:C.0 = Junction:C.2;  //_GUI 121,61
 Output:D.0 = "Parallel->Serial_Clr".4;  
 ListOut.0 = Junction.1;  
 ListOut.1 = Input:E.0;  
 Junction.0 = Input.0;  
 PackMSB.0 = ListOut:A.0;  
 PackMSB.1 = ListOut:C.0;  //_GUI 49,20, 49,25
 PackMSB.2 = ListOut:D.0;  //_GUI 51,23, 51,33
 PackMSB.3 = ListOut:B.0;  //_GUI 53,26, 53,41
 PackMSB.4 = ListOut.0;  //_GUI 55,29, 55,49
 RegEn.0 = Junction:B.1;  
 RegEn.1 = Junction:A.0;  //_GUI 122,49, 122,39, 83,39
 RegEn.2 = Junction:C.0;  //_GUI 121,52
 Junction:A.0 = Input:A.0;  
 ListOut:A.0 = Input:L.0;  
 ListOut:A.1 = Input:M.0;  
 ListOut:B.0 = Input:F.0;  
 ListOut:B.1 = Input:G.0;  
 Junction:B.0 = "Parallel->Serial_Clr".0;  
 ListOut:C.0 = Input:J.0;  
 ListOut:C.1 = Input:K.0;  
 ListOut:D.0 = Input:H.0;  
 ListOut:D.1 = Input:I.0;  
 Junction:C.0 = "Parallel->Serial_Clr".3;  
 "Parallel->Serial_Clr".0 = PackMSB.0;  //_GUI 76,46, 76,18
 "Parallel->Serial_Clr".1 = Junction.2;  //_GUI 63,49, 63,58, 33,58
 "Parallel->Serial_Clr".2 = Junction:A.1;  
 "Parallel->Serial_Clr".3 = Input:B.0;  
 "Parallel->Serial_Clr".4 = Input:C.0;  
 "Parallel->Serial_Clr".5 = Input:D.0;  //_GUI 117,61, 117,69
}

Object ( Variant SToP_Data, Variant SToP_EnabledData, Variant SToP_StageMask
    , Variant SToP_Done, Variant SToP_Busy, Variant PToS_Data, Variant PToS_EnabledData
    , Variant PToS_StageMask, Variant PToS_Done, Variant PToS_Busy) Ex_PToS_Or_SToP( LSB004 Data
    , Bit ClkG, Bit CLR, Bit SToP_Go, Bit SToP_Wait
    , Bit PToS_Go, Bit PToS_Wait) 
//_Attributes TreeGroup=CoreLib_Examples\Shifts\Examples\Ex
{
 //_ Object Prototypes
 Object ( LSB004 Data) Input;  //_GUI 26,50
 Object ( Bit ClkG) Input:A;  //_GUI 70,51
 Object ( Bit CLR) Input:B;  //_GUI 70,54
 Object ( Bit SToP_Go) Input:C;  //_GUI 70,57
 Object ( Bit SToP_Wait) Input:D;  //_GUI 110,65
 Object ( Bit PToS_Go) Input:E;  //_GUI 71,93
 Object ( Bit PToS_Wait) Input:F;  //_GUI 110,103
 Object Output( Variant SToP_Data) ;  //_GUI 144,38
 Object Output:A( Variant SToP_EnabledData) ;  //_GUI 144,46
 Object Output:B( Variant SToP_StageMask) ;  //_GUI 144,55
 Object Output:C( Variant SToP_Done) ;  //_GUI 136,60
 Object Output:D( Variant SToP_Busy) ;  //_GUI 90,69
 Object Output:E( Variant PToS_Data) ;  //_GUI 144,74
 Object Output:F( Variant PToS_EnabledData) ;  //_GUI 144,82
 Object Output:G( Variant PToS_StageMask) ;  //_GUI 144,91
 Object Output:H( Variant PToS_Done) ;  //_GUI 136,96
 Object Output:I( Variant PToS_Busy) ;  //_GUI 90,106
 Object ( LSB004 Data) Input:G;  //_GUI 26,23
 //_Attributes Constant="*8"
 Object ( LSB004 Data) Input:H;  //_GUI 26,18
 //_Attributes Constant="*9"
 Object ( LSB004 Data) Input:I;  //_GUI 26,15
 //_Attributes Constant="*10"
 Object ( LSB004 Out1, LSB004 Out2, LSB004 Out3) Junction
    ( LSB004 In0) ;  //_GUI 32,50
 Object ( List Out1) PackMSB( Variant In1, Variant In2
    , Variant In3, Variant In4, Variant In5) ;  //_GUI 58,15
 Object ( Variant Q) RegEn( Variant D, Bit ClkG
    , Variant EN) ;  //_GUI 126,44
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:A
    ( Bit In0) ;  //_GUI 82,51
 Object ( List Out) ListOut( Variant In1, Variant In2) ;  //_GUI 36,14
 Object ( List Out) ListOut:A( Variant In1, Variant In2) ;  //_GUI 36,38
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:B
    ( Variant In0) ;  //_GUI 113,45
 Object ( List Out) ListOut:B( Variant In1, Variant In2) ;  //_GUI 36,22
 Object ( List Out) ListOut:C( Variant In1, Variant In2) ;  //_GUI 36,30
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:C
    ( Variant In0) ;  //_GUI 120,57
 Object ( LSB004 Data) Input:J;  //_GUI 26,47
 //_Attributes Constant="*2"
 Object ( List Out) ListOut:D( Variant In1, Variant In2) ;  //_GUI 36,46
 Object ( LSB004 Data) Input:K;  //_GUI 26,42
 //_Attributes Constant="*3"
 Object ( LSB004 Data) Input:L;  //_GUI 26,39
 //_Attributes Constant="*4"
 Object ( LSB004 Data) Input:M;  //_GUI 26,34
 //_Attributes Constant="*5"
 Object ( LSB004 Data) Input:N;  //_GUI 26,31
 //_Attributes Constant="*6"
 Object ( LSB004 Data) Input:O;  //_GUI 26,26
 //_Attributes Constant="*7"
 Object ( Variant Q) RegEn:A( Variant D, Bit ClkG
    , Variant EN) ;  //_GUI 126,80
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:D
    ( Variant In0) ;  //_GUI 113,81
 Object ( Variant Out1, Variant Out2, Variant Out3) Junction:E
    ( Variant In0) ;  //_GUI 120,93
 Object ( List Out1, List Out2, List Out3) Junction:F
    ( List In1) ;  //_GUI 85,48
 Object ( LSB004 Out1, LSB004 Out2, LSB004 Out3) Junction:G
    ( LSB004 In0) ;  //_GUI 57,57
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:H
    ( Bit In1) ;  //_GUI 82,77
 Object ( Bit Out1, Bit Out2, Bit Out3) Junction:I
    ( Bit In0) ;  //_GUI 79,54
 Object ( Variant Data, Variant In_Type, Variant StageMsk
    , Variant Done, Variant Busy) PToS_Or_SToP( Variant Data, Variant Out_Type
    , Bit ClkG, Bit AClr, Bit Go, Bit Wait) ;  //_GUI 90,44
 Object ( Variant Data, Variant In_Type, Variant StageMsk
    , Variant Done, Variant Busy) PToS_Or_SToP:A( Variant Data, Variant Out_Type
    , Bit ClkG, Bit AClr, Bit Go, Bit Wait) ;  //_GUI 90,80

 // Behavior Topology
 Output.0 = Junction:B.0;  //_GUI 114,39
 Output:A.0 = RegEn.0;  
 Output:B.0 = PToS_Or_SToP.2;  //_GUI 116,56, 116,52
 Output:C.0 = Junction:C.2;  //_GUI 121,61
 Output:D.0 = PToS_Or_SToP.4;  
 Output:E.0 = Junction:D.0;  //_GUI 114,75
 Output:F.0 = RegEn:A.0;  
 Output:G.0 = PToS_Or_SToP:A.2;  //_GUI 116,92, 116,88
 Output:H.0 = Junction:E.2;  //_GUI 121,97
 Output:I.0 = PToS_Or_SToP:A.4;  
 Junction.0 = Input.0;  
 PackMSB.0 = ListOut.0;  
 PackMSB.1 = ListOut:B.0;  //_GUI 49,20, 49,25
 PackMSB.2 = ListOut:C.0;  //_GUI 51,23, 51,33
 PackMSB.3 = ListOut:A.0;  //_GUI 53,26, 53,41
 PackMSB.4 = ListOut:D.0;  //_GUI 55,29, 55,49
 RegEn.0 = Junction:B.1;  
 RegEn.1 = Junction:A.0;  //_GUI 122,49, 122,42, 83,42
 RegEn.2 = Junction:C.0;  //_GUI 121,52
 Junction:A.0 = Input:A.0;  
 ListOut.0 = Input:H.0;  
 ListOut.1 = Input:I.0;  
 ListOut:A.0 = Input:K.0;  
 ListOut:A.1 = Input:L.0;  
 Junction:B.0 = PToS_Or_SToP.0;  
 ListOut:B.0 = Input:O.0;  
 ListOut:B.1 = Input:G.0;  
 ListOut:C.0 = Input:M.0;  
 ListOut:C.1 = Input:N.0;  
 Junction:C.0 = PToS_Or_SToP.3;  
 ListOut:D.0 = Junction.1;  
 ListOut:D.1 = Input:J.0;  
 RegEn:A.0 = Junction:D.1;  
 RegEn:A.1 = Junction:H.1;  //_GUI 122,85, 122,78
 RegEn:A.2 = Junction:E.0;  //_GUI 121,88
 Junction:D.0 = PToS_Or_SToP:A.0;  
 Junction:E.0 = PToS_Or_SToP:A.3;  
 Junction:F.0 = PackMSB.0;  //_GUI 86,18
 Junction:G.0 = Junction.2;  //_GUI 33,58
 Junction:H.0 = Junction:A.2;  
 Junction:I.0 = Input:B.0;  
 PToS_Or_SToP.0 = Junction:G.0;  //_GUI 58,46
 PToS_Or_SToP.1 = Junction:F.1;  
 PToS_Or_SToP.2 = Junction:A.1;  
 PToS_Or_SToP.3 = Junction:I.1;  
 PToS_Or_SToP.4 = Input:C.0;  
 PToS_Or_SToP.5 = Input:D.0;  //_GUI 117,61, 117,66
 PToS_Or_SToP:A.0 = Junction:F.2;  //_GUI 86,82
 PToS_Or_SToP:A.1 = Junction:G.2;  //_GUI 58,85
 PToS_Or_SToP:A.2 = Junction:H.2;  //_GUI 83,88
 PToS_Or_SToP:A.3 = Junction:I.2;  //_GUI 80,91
 PToS_Or_SToP:A.4 = Input:E.0;  
 PToS_Or_SToP:A.5 = Input:F.0;  //_GUI 117,97, 117,104
}

Object ( Variant O, Variant Count, Variant AlmostBusy) Ex_Queue_Shift
    ( Variant D, MSB008 DepthSize, MSB002 AlmostBusySize, Bit I
    , Bit I) 
//_Attributes TreeGroup=CoreLib_Examples\Memory\Examples
{
 //_ Object Prototypes
 Object ( Variant D) Input;  //_GUI 42,14
 Object ( MSB008 DepthSize) Input:A;  //_GUI 37,23
 Object ( MSB002 AlmostBusySize) Input:B;  //_GUI 43,26
 Object ( Bit I) Input:C;  //_GUI 21,29
 Object ( Bit I) Input:D;  //_GUI 64,47
 Object Output( Variant O) ;  //_GUI 69,14
 Object Output:A( Variant Count) ;  //_GUI 69,17
 Object Output:B( Variant AlmostBusy) ;  //_GUI 68,20
 Object ( Variant Pulse) OneShot( Variant I, Bit ClkG) ;  //_GUI 26,28
 Object ( Bit Pulse) OneShot:A( Bit I, Bit ClkG) ;  //_GUI 70,46
 Object ( Bit Out) INVERT( Bit In1) ;  //_GUI 83,46
 Object Text;  //_GUI 80,25,This is a prefetch fifo that uses slice ram.
 Object ( Variant O, Variant Count, Variant AlmBsy
    , Variant Done, Variant Busy) Queue_Shift( Variant D, Bit CLR
    , Bit ClkG, Variant DepthSz, Variant AlmBsySz, Variant Go
    , Variant Wait) ;  //_GUI 48,13

 // Behavior Topology
 Output.0 = Queue_Shift.0;  
 Output:A.0 = Queue_Shift.1;  
 Output:B.0 = Queue_Shift.2;  
 OneShot.0 = Input:C.0;  
 OneShot:A.0 = Input:D.0;  
 INVERT.0 = OneShot:A.0;  
 Queue_Shift.0 = Input.0;  
 Queue_Shift.3 = Input:A.0;  
 Queue_Shift.4 = Input:B.0;  
 Queue_Shift.5 = OneShot.0;  //_GUI 43,30, 43,31
 Queue_Shift.6 = INVERT.0;  //_GUI 93,33
}

